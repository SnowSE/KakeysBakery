// <auto-generated>
//     This code was generated by Refitter.
// </auto-generated>


using Refit;

using System.Collections.Generic;
using System.Text.Json.Serialization;
using System.Threading.Tasks;

namespace KakeysBakery.Components.PayPalAuth.Orders
{
    [System.CodeDom.Compiler.GeneratedCode("Refitter", "0.9.9.0")]
    public partial interface IOrders
    {
        /// <summary>Create order</summary>
        /// <remarks>Creates an order. Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see <a href="https://developer.paypal.com/docs/checkout/advanced/processing/">checkout</a> or <a href="https://developer.paypal.com/docs/multiparty/checkout/advanced/processing/">multiparty checkout</a>.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href="/api/rest/reference/orders/v2/errors/#create-order">Orders v2 errors</a>.</blockquote></remarks>
        /// <param name="payPal_Request_Id">The server stores keys for 6 hours. The API callers can request the times to up to 72 hours by speaking to their Account Manager.</param>
        /// <param name="prefer">The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul></param>
        /// <returns>A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows order details.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>400</term>
        /// <description>Request is not well-formed, syntactically incorrect, or violates schema.</description>
        /// </item>
        /// <item>
        /// <term>401</term>
        /// <description>Authentication failed due to missing authorization header, or invalid authentication credentials.</description>
        /// </item>
        /// <item>
        /// <term>422</term>
        /// <description>The requested action could not be performed, semantically incorrect, or failed business validation.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Post("/v2/checkout/orders")]
        Task<Order> OrdersCreate([Body] Order_request body, [Header("PayPal-Request-Id")] string payPal_Request_Id, [Header("PayPal-Partner-Attribution-Id")] string payPal_Partner_Attribution_Id, [Header("PayPal-Client-Metadata-Id")] string payPal_Client_Metadata_Id, [Header("Prefer")] string prefer);

        /// <summary>Show order details</summary>
        /// <remarks>Shows details for an order, by ID.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href="/api/rest/reference/orders/v2/errors/#get-order">Orders v2 errors</a>.</blockquote></remarks>
        /// <param name="id">The ID of the order that the tracking information is associated with.</param>
        /// <param name="fields">A comma-separated list of fields that should be returned for the order. Valid filter field is `payment_source`.</param>
        /// <returns>A successful request returns the HTTP `200 OK` status code and a JSON response body that shows order details.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>401</term>
        /// <description>Authentication failed due to missing authorization header, or invalid authentication credentials.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The specified resource does not exist.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Get("/v2/checkout/orders/{id}")]
        Task<Order> OrdersGet(string id, [Query] string fields);

        /// <summary>Update order</summary>
        /// <remarks>Updates an order with a `CREATED` or `APPROVED` status. You cannot update an order with the `COMPLETED` status.<br/><br/>To make an update, you must provide a `reference_id`. If you omit this value with an order that contains only one purchase unit, PayPal sets the value to `default` which enables you to use the path: <code>\"/purchase_units/@reference_id=='default'/{attribute-or-object}\"</code>. Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see <a href="https://developer.paypal.com/docs/checkout/advanced/processing/">checkout</a> or <a href="https://developer.paypal.com/docs/multiparty/checkout/advanced/processing/">multiparty checkout</a>.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\"/api/rest/reference/orders/v2/errors/#patch-order\">Orders v2 errors</a>.</blockquote>Patchable attributes or objects:<br/><br/><table><thead><th>Attribute</th><th>Op</th><th>Notes</th></thead><tbody><tr><td><code>intent</code></td><td>replace</td><td></td></tr><tr><td><code>payer</code></td><td>replace, add</td><td>Using replace op for <code>payer</code> will replace the whole <code>payer</code> object with the value sent in request.</td></tr><tr><td><code>purchase_units</code></td><td>replace, add</td><td></td></tr><tr><td><code>purchase_units[].custom_id</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>purchase_units[].description</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>purchase_units[].payee.email</code></td><td>replace</td><td></td></tr><tr><td><code>purchase_units[].shipping.name</code></td><td>replace, add</td><td></td></tr><tr><td><code>purchase_units[].shipping.address</code></td><td>replace, add</td><td></td></tr><tr><td><code>purchase_units[].shipping.type</code></td><td>replace, add</td><td></td></tr><tr><td><code>purchase_units[].soft_descriptor</code></td><td>replace, remove</td><td></td></tr><tr><td><code>purchase_units[].amount</code></td><td>replace</td><td></td></tr><tr><td><code>purchase_units[].items</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>purchase_units[].invoice_id</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>purchase_units[].payment_instruction</code></td><td>replace</td><td></td></tr><tr><td><code>purchase_units[].payment_instruction.disbursement_mode</code></td><td>replace</td><td>By default, <code>disbursement_mode</code> is <code>INSTANT</code>.</td></tr><tr><td><code>purchase_units[].payment_instruction.platform_fees</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>purchase_units[].supplementary_data.airline</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>purchase_units[].supplementary_data.card</code></td><td>replace, add, remove</td><td></td></tr><tr><td><code>application_context.client_configuration</code></td><td>replace, add</td><td></td></tr></tbody></table></remarks>
        /// <param name="id">The ID of the order that the tracking information is associated with.</param>
        /// <returns>A <see cref="Task"/> that completes when the request is finished.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>400</term>
        /// <description>Request is not well-formed, syntactically incorrect, or violates schema.</description>
        /// </item>
        /// <item>
        /// <term>401</term>
        /// <description>Authentication failed due to missing authorization header, or invalid authentication credentials.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The specified resource does not exist.</description>
        /// </item>
        /// <item>
        /// <term>422</term>
        /// <description>The requested action could not be performed, semantically incorrect, or failed business validation.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Patch("/v2/checkout/orders/{id}")]
        Task OrdersPatch(string id, [Body] object body);

        /// <summary>Confirm the Order</summary>
        /// <remarks>Payer confirms their intent to pay for the the Order with the given payment source.</remarks>
        /// <param name="id">The ID of the order that the tracking information is associated with.</param>
        /// <param name="prefer">The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul></param>
        /// <returns>A successful request indicates that the payment source was added to the Order. A successful request returns the HTTP `200 OK` status code with a JSON response body that shows order details.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>400</term>
        /// <description>Request is not well-formed, syntactically incorrect, or violates schema.</description>
        /// </item>
        /// <item>
        /// <term>403</term>
        /// <description>Authorization failed due to insufficient permissions.</description>
        /// </item>
        /// <item>
        /// <term>422</term>
        /// <description>The requested action could not be performed, semantically incorrect, or failed business validation.</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>An internal server error has occurred.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Post("/v2/checkout/orders/{id}/confirm-payment-source")]
        Task<Order> OrdersConfirm(string id, [Body] Confirm_order_request body, [Header("PayPal-Client-Metadata-Id")] string payPal_Client_Metadata_Id, [Header("Prefer")] string prefer);

        /// <summary>Authorize payment for order</summary>
        /// <remarks>Authorizes payment for an order. To successfully authorize payment for an order, the buyer must first approve the order or a valid payment_source must be provided in the request. A buyer can approve the order upon being redirected to the rel:approve URL that was returned in the HATEOAS links in the create order response.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href="/api/rest/reference/orders/v2/errors/#authorize-order">Orders v2 errors</a>.</blockquote></remarks>
        /// <param name="payPal_Request_Id">The server stores keys for 6 hours. The API callers can request the times to up to 72 hours by speaking to their Account Manager.</param>
        /// <param name="prefer">The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul></param>
        /// <param name="id">The ID of the order that the tracking information is associated with.</param>
        /// <param name="payPal_Auth_Assertion">An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see <a href="/api/rest/requests/#paypal-auth-assertion">PayPal-Auth-Assertion</a>.</param>
        /// <returns>A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows authorized payment details.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>400</term>
        /// <description>Request is not well-formed, syntactically incorrect, or violates schema.</description>
        /// </item>
        /// <item>
        /// <term>401</term>
        /// <description>Authentication failed due to missing authorization header, or invalid authentication credentials.</description>
        /// </item>
        /// <item>
        /// <term>403</term>
        /// <description>The authorized payment failed due to insufficient permissions.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The specified resource does not exist.</description>
        /// </item>
        /// <item>
        /// <term>422</term>
        /// <description>The requested action could not be performed, semantically incorrect, or failed business validation.</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>An internal server error has occurred.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Post("/v2/checkout/orders/{id}/authorize")]
        Task<Order_authorize_response> OrdersAuthorize(string id, [Body] Order_authorize_request body, [Header("PayPal-Request-Id")] string payPal_Request_Id, [Header("Prefer")] string prefer, [Header("PayPal-Client-Metadata-Id")] string payPal_Client_Metadata_Id, [Header("PayPal-Auth-Assertion")] string payPal_Auth_Assertion);

        /// <summary>Capture payment for order</summary>
        /// <remarks>Captures payment for an order. To successfully capture payment for an order, the buyer must first approve the order or a valid payment_source must be provided in the request. A buyer can approve the order upon being redirected to the rel:approve URL that was returned in the HATEOAS links in the create order response.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href="/api/rest/reference/orders/v2/errors/#capture-order">Orders v2 errors</a>.</blockquote></remarks>
        /// <param name="payPal_Request_Id">The server stores keys for 6 hours. The API callers can request the times to up to 72 hours by speaking to their Account Manager.</param>
        /// <param name="prefer">The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul></param>
        /// <param name="id">The ID of the order that the tracking information is associated with.</param>
        /// <param name="payPal_Auth_Assertion">An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see <a href="/api/rest/requests/#paypal-auth-assertion">PayPal-Auth-Assertion</a>.</param>
        /// <returns>A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows captured payment details.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>400</term>
        /// <description>Request is not well-formed, syntactically incorrect, or violates schema.</description>
        /// </item>
        /// <item>
        /// <term>401</term>
        /// <description>Authentication failed due to missing authorization header, or invalid authentication credentials.</description>
        /// </item>
        /// <item>
        /// <term>403</term>
        /// <description>The authorized payment failed due to insufficient permissions.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The specified resource does not exist.</description>
        /// </item>
        /// <item>
        /// <term>422</term>
        /// <description>The requested action could not be performed, semantically incorrect, or failed business validation.</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>An internal server error has occurred.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Post("/v2/checkout/orders/{id}/capture")]
        Task<Order> OrdersCapture(string id, [Body] Order_capture_request body, [Header("PayPal-Request-Id")] string payPal_Request_Id, [Header("Prefer")] string prefer, [Header("PayPal-Client-Metadata-Id")] string payPal_Client_Metadata_Id, [Header("PayPal-Auth-Assertion")] string payPal_Auth_Assertion);

        /// <summary>Add tracking information for an Order.</summary>
        /// <remarks>Adds tracking information for an Order.</remarks>
        /// <param name="id">The ID of the order that the tracking information is associated with.</param>
        /// <param name="payPal_Auth_Assertion">An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see <a href="/api/rest/requests/#paypal-auth-assertion">PayPal-Auth-Assertion</a>.</param>
        /// <returns>A successful response to an idempotent request returns the HTTP `200 OK` status code with a JSON response body that shows tracker details.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>400</term>
        /// <description>Request is not well-formed, syntactically incorrect, or violates schema.</description>
        /// </item>
        /// <item>
        /// <term>403</term>
        /// <description>Authorization failed due to insufficient permissions.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The specified resource does not exist.</description>
        /// </item>
        /// <item>
        /// <term>422</term>
        /// <description>The requested action could not be performed, semantically incorrect, or failed business validation.</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>An internal server error has occurred.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Post("/v2/checkout/orders/{id}/track")]
        Task<Order> OrdersTrackCreate(string id, [Body] Order_tracker_request body, [Header("PayPal-Auth-Assertion")] string payPal_Auth_Assertion);

        /// <summary>Update or cancel tracking information for a PayPal order</summary>
        /// <remarks>Updates or cancels the tracking information for a PayPal order, by ID. Updatable attributes or objects:<br/><br/><table><thead><th>Attribute</th><th>Op</th><th>Notes</th></thead><tbody></tr><tr><td><code>items</code></td><td>replace</td><td>Using replace op for <code>items</code> will replace the entire <code>items</code> object with the value sent in request.</td></tr><tr><td><code>notify_payer</code></td><td>replace, add</td><td></td></tr><tr><td><code>status</code></td><td>replace</td><td>Only patching status to CANCELLED is currently supported.</td></tr></tbody></table></remarks>
        /// <param name="id">The ID of the order that the tracking information is associated with.</param>
        /// <param name="tracker_id">The order tracking ID.</param>
        /// <returns>A <see cref="Task"/> that completes when the request is finished.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>400</term>
        /// <description>Request is not well-formed, syntactically incorrect, or violates schema.</description>
        /// </item>
        /// <item>
        /// <term>403</term>
        /// <description>Authorization failed due to insufficient permissions.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The specified resource does not exist.</description>
        /// </item>
        /// <item>
        /// <term>422</term>
        /// <description>The requested action could not be performed, semantically incorrect, or failed business validation.</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>An internal server error has occurred.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Patch("/v2/checkout/orders/{id}/trackers/{tracker_id}")]
        Task OrdersTrackersPatch(string id, string tracker_id, [Body] IEnumerable<Patch> body);


    }
}


//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"

namespace KakeysBakery.Components.PayPalAuth.Orders
{
    using System = global::System;



    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _400
    {

        [JsonPropertyName("details")]
        public ICollection<Details> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _401
    {

        [JsonPropertyName("details")]
        public ICollection<details> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _403
    {

        [JsonPropertyName("details")]
        public ICollection<details2> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _422
    {

        [JsonPropertyName("details")]
        public ICollection<details4> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The error details. Required for client-side `4XX` errors.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_details
    {
        /// <summary>
        /// The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors.
        /// </summary>

        [JsonPropertyName("field")]
        public string Field { get; set; }

        /// <summary>
        /// The value of the field that caused the error.
        /// </summary>

        [JsonPropertyName("value")]
        public string Value { get; set; }

        [JsonPropertyName("location")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_location Location { get; set; }

        /// <summary>
        /// The unique, fine-grained application-level error code.
        /// </summary>

        [JsonPropertyName("issue")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Issue { get; set; }

        /// <summary>
        /// The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value.
        /// </summary>

        [JsonPropertyName("description")]
        public string Description { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The location of the field that caused the error. Value is `body`, `path`, or `query`.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_location
    {

        [System.Runtime.Serialization.EnumMember(Value = @"body")]
        Body = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"path")]
        Path = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"query")]
        Query = 2,

    }

    /// <summary>
    /// Request is not well-formed, syntactically incorrect, or violates schema.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_default
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_defaultName Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_defaultMessage Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The request-related [HATEOAS link](/api/rest/responses/#hateoas-links) information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_link_description
    {
        /// <summary>
        /// The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.
        /// </summary>

        [JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(20000)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Href { get; set; }

        /// <summary>
        /// The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).
        /// </summary>

        [JsonPropertyName("rel")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Rel { get; set; }

        /// <summary>
        /// The HTTP method required to make the related call.
        /// </summary>

        [JsonPropertyName("method")]
        [System.ComponentModel.DataAnnotations.StringLength(6, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z]*$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_link_descriptionMethod Method { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Authentication failed due to missing Authorization header, or invalid authentication credentials.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_401
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_401Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_401Message Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The client is not authorized to access this resource, although it may have valid credentials. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_403
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_403Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_403Message Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The server has not found anything matching the request URI. This either means that the URI is incorrect or the resource is not available.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_404
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_404Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_404Message Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The server has detected a conflict while processing this request.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_409
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_409Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_409Message Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The server does not support the request payload's media type.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_415
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_415Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_415Message Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The requested action cannot be performed and may require interaction with APIs or processes outside of the current request. This is distinct from a 500 response in that there are no systemic problems limiting the API from performing the request.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_422
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_422Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_422Message Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// This is either a system or application error, and generally indicates that although the client appeared to provide a correct request, something unexpected has gone wrong on the server.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_500
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_500Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_500Message Message { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The server is temporarily unable to handle the request, for example, because of planned maintenance or downtime.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_503
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_503Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_503Message Message { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The intent to either capture payment immediately or authorize a payment for an order after order creation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Checkout_payment_intent
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CAPTURE")]
        CAPTURE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"AUTHORIZE")]
        AUTHORIZE = 1,

    }

    /// <summary>
    /// The customer who approves and pays for the order. The customer is also known as the payer.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payer_base
    {
        /// <summary>
        /// The email address of the payer.
        /// </summary>

        [JsonPropertyName("email_address")]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])")]
        public string Email_address { get; set; }

        /// <summary>
        /// The PayPal-assigned ID for the payer.
        /// </summary>

        [JsonPropertyName("payer_id")]
        [System.ComponentModel.DataAnnotations.StringLength(13, MinimumLength = 13)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[2-9A-HJ-NP-Z]{13}$")]
        public string Payer_id { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The name of the party.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Name
    {
        /// <summary>
        /// The prefix, or title, to the party's name.
        /// </summary>

        [JsonPropertyName("prefix")]
        [System.ComponentModel.DataAnnotations.StringLength(140)]
        public string Prefix { get; set; }

        /// <summary>
        /// When the party is a person, the party's given, or first, name.
        /// </summary>

        [JsonPropertyName("given_name")]
        [System.ComponentModel.DataAnnotations.StringLength(140)]
        public string Given_name { get; set; }

        /// <summary>
        /// When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.
        /// </summary>

        [JsonPropertyName("surname")]
        [System.ComponentModel.DataAnnotations.StringLength(140)]
        public string Surname { get; set; }

        /// <summary>
        /// When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.
        /// </summary>

        [JsonPropertyName("middle_name")]
        [System.ComponentModel.DataAnnotations.StringLength(140)]
        public string Middle_name { get; set; }

        /// <summary>
        /// The suffix for the party's name.
        /// </summary>

        [JsonPropertyName("suffix")]
        [System.ComponentModel.DataAnnotations.StringLength(140)]
        public string Suffix { get; set; }

        /// <summary>
        /// DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business.
        /// </summary>

        [JsonPropertyName("alternate_full_name")]
        [System.ComponentModel.DataAnnotations.StringLength(300)]
        public string Alternate_full_name { get; set; }

        /// <summary>
        /// When the party is a person, the party's full name.
        /// </summary>

        [JsonPropertyName("full_name")]
        [System.ComponentModel.DataAnnotations.StringLength(300)]
        public string Full_name { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The phone type.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Phone_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"FAX")]
        FAX = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"HOME")]
        HOME = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"MOBILE")]
        MOBILE = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
        OTHER = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"PAGER")]
        PAGER = 4,

    }

    /// <summary>
    /// The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Phone
    {
        /// <summary>
        /// The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{1,3}?$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).
        /// </summary>

        [JsonPropertyName("national_number")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(14, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{1,14}?$")]
        public string National_number { get; set; }

        /// <summary>
        /// The extension number.
        /// </summary>

        [JsonPropertyName("extension_number")]
        [System.ComponentModel.DataAnnotations.StringLength(15, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{1,15}?$")]
        public string Extension_number { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The phone information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Phone_with_type
    {

        [JsonPropertyName("phone_type")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Phone_type Phone_type { get; set; }

        /// <summary>
        /// The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). Supports only the `national_number` property.
        /// </summary>

        [JsonPropertyName("phone_number")]
        [System.ComponentModel.DataAnnotations.Required]
        public Phone Phone_number { get; set; } = new Phone();

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The tax ID of the customer. The customer is also known as the payer. Both `tax_id` and `tax_id_type` are required.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Tax_info
    {
        /// <summary>
        /// The customer's tax ID value.
        /// </summary>

        [JsonPropertyName("tax_id")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(14, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"([a-zA-Z0-9])")]
        public string Tax_id { get; set; }

        /// <summary>
        /// The customer's tax ID type.
        /// </summary>

        [JsonPropertyName("tax_id_type")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(14, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z0-9_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Tax_infoTax_id_type Tax_id_type { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Address_portable
    {
        /// <summary>
        /// The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.
        /// </summary>

        [JsonPropertyName("address_line_1")]
        [System.ComponentModel.DataAnnotations.StringLength(300)]
        public string Address_line_1 { get; set; }

        /// <summary>
        /// The second line of the address. For example, suite or apartment number.
        /// </summary>

        [JsonPropertyName("address_line_2")]
        [System.ComponentModel.DataAnnotations.StringLength(300)]
        public string Address_line_2 { get; set; }

        /// <summary>
        /// The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.
        /// </summary>

        [JsonPropertyName("address_line_3")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Address_line_3 { get; set; }

        /// <summary>
        /// The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:&lt;ul&gt;&lt;li&gt;The postal sorting code for Guernsey and many French territories, such as French Guiana.&lt;/li&gt;&lt;li&gt;The fine-grained administrative levels in China.&lt;/li&gt;&lt;/ul&gt;
        /// </summary>

        [JsonPropertyName("admin_area_4")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Admin_area_4 { get; set; }

        /// <summary>
        /// A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:&lt;ul&gt;&lt;li&gt;Brazil. Suburb, bairro, or neighborhood.&lt;/li&gt;&lt;li&gt;India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.&lt;/li&gt;&lt;/ul&gt;
        /// </summary>

        [JsonPropertyName("admin_area_3")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Admin_area_3 { get; set; }

        /// <summary>
        /// A city, town, or village. Smaller than `admin_area_level_1`.
        /// </summary>

        [JsonPropertyName("admin_area_2")]
        [System.ComponentModel.DataAnnotations.StringLength(120)]
        public string Admin_area_2 { get; set; }

        /// <summary>
        /// The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:&lt;ul&gt;&lt;li&gt;UK. A county.&lt;/li&gt;&lt;li&gt;US. A state.&lt;/li&gt;&lt;li&gt;Canada. A province.&lt;/li&gt;&lt;li&gt;Japan. A prefecture.&lt;/li&gt;&lt;li&gt;Switzerland. A kanton.&lt;/li&gt;&lt;/ul&gt;
        /// </summary>

        [JsonPropertyName("admin_area_1")]
        [System.ComponentModel.DataAnnotations.StringLength(300)]
        public string Admin_area_1 { get; set; }

        /// <summary>
        /// The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).
        /// </summary>

        [JsonPropertyName("postal_code")]
        [System.ComponentModel.DataAnnotations.StringLength(60)]
        public string Postal_code { get; set; }

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.&lt;br/&gt;For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.
        /// </summary>

        [JsonPropertyName("address_details")]
        public Address_details Address_details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The customer who approves and pays for the order. The customer is also known as the payer.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payer : Payer_base
    {
        /// <summary>
        /// The name of the payer. Supports only the `given_name` and `surname` properties.
        /// </summary>

        [JsonPropertyName("name")]
        public Name Name { get; set; }

        /// <summary>
        /// The phone number of the customer. Available only when you enable the **Contact Telephone Number** option in the &lt;a href="https://www.paypal.com/cgi-bin/customerprofileweb?cmd=_profile-website-payments"&gt;**Profile &amp; Settings**&lt;/a&gt; for the merchant's PayPal account. The `phone.phone_number` supports only `national_number`.
        /// </summary>

        [JsonPropertyName("phone")]
        public Phone_with_type Phone { get; set; }

        /// <summary>
        /// The birth date of the payer in `YYYY-MM-DD` format.
        /// </summary>

        [JsonPropertyName("birth_date")]
        [System.ComponentModel.DataAnnotations.StringLength(10, MinimumLength = 10)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$")]
        public string Birth_date { get; set; }

        /// <summary>
        /// The tax information of the payer. Required only for Brazilian payer's. Both `tax_id` and `tax_id_type` are required.
        /// </summary>

        [JsonPropertyName("tax_info")]
        public Tax_info Tax_info { get; set; }

        /// <summary>
        /// The address of the payer. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties. Also referred to as the billing address of the customer.
        /// </summary>

        [JsonPropertyName("address")]
        public Address_portable Address { get; set; }

    }

    /// <summary>
    /// The currency and amount for a financial transaction, such as a balance or payment due.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Money
    {

        [JsonPropertyName("currency_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Currency_code { get; set; }

        /// <summary>
        /// The value, which might be:&lt;ul&gt;&lt;li&gt;An integer for currencies like `JPY` that are not typically fractional.&lt;/li&gt;&lt;li&gt;A decimal fraction for currencies like `TND` that are subdivided into thousandths.&lt;/li&gt;&lt;/ul&gt;For the required number of decimal places for a currency code, see [Currency Codes](/api/rest/reference/currency-codes/).
        /// </summary>

        [JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(32)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$")]
        public string Value { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The breakdown of the amount. Breakdown provides details such as total item amount, total tax amount, shipping, handling, insurance, and discounts, if any.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Amount_breakdown
    {
        /// <summary>
        /// The subtotal for all items. Required if the request includes `purchase_units[].items[].unit_amount`. Must equal the sum of `(items[].unit_amount * items[].quantity)` for all items. &lt;code&gt;item_total.value&lt;/code&gt; can not be a negative number.
        /// </summary>

        [JsonPropertyName("item_total")]
        public Money Item_total { get; set; }

        /// <summary>
        /// The shipping fee for all items within a given `purchase_unit`. &lt;code&gt;shipping.value&lt;/code&gt; can not be a negative number.
        /// </summary>

        [JsonPropertyName("shipping")]
        public Money Shipping { get; set; }

        /// <summary>
        /// The handling fee for all items within a given `purchase_unit`. &lt;code&gt;handling.value&lt;/code&gt; can not be a negative number.
        /// </summary>

        [JsonPropertyName("handling")]
        public Money Handling { get; set; }

        /// <summary>
        /// The total tax for all items. Required if the request includes `purchase_units.items.tax`. Must equal the sum of `(items[].tax * items[].quantity)` for all items. &lt;code&gt;tax_total.value&lt;/code&gt; can not be a negative number.
        /// </summary>

        [JsonPropertyName("tax_total")]
        public Money Tax_total { get; set; }

        /// <summary>
        /// The insurance fee for all items within a given `purchase_unit`. &lt;code&gt;insurance.value&lt;/code&gt; can not be a negative number.
        /// </summary>

        [JsonPropertyName("insurance")]
        public Money Insurance { get; set; }

        /// <summary>
        /// The shipping discount for all items within a given `purchase_unit`. &lt;code&gt;shipping_discount.value&lt;/code&gt; can not be a negative number.
        /// </summary>

        [JsonPropertyName("shipping_discount")]
        public Money Shipping_discount { get; set; }

        /// <summary>
        /// The discount for all items within a given `purchase_unit`. &lt;code&gt;discount.value&lt;/code&gt; can not be a negative number.
        /// </summary>

        [JsonPropertyName("discount")]
        public Money Discount { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The total order amount with an optional breakdown that provides details, such as the total item amount, total tax amount, shipping, handling, insurance, and discounts, if any.&lt;br/&gt;If you specify `amount.breakdown`, the amount equals `item_total` plus `tax_total` plus `shipping` plus `handling` plus `insurance` minus `shipping_discount` minus discount.&lt;br/&gt;The amount must be a positive number. For listed of supported currencies and decimal precision, see the PayPal REST APIs &lt;a href="/docs/integration/direct/rest/currency-codes/"&gt;Currency Codes&lt;/a&gt;.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Amount_with_breakdown : Money
    {

        [JsonPropertyName("breakdown")]
        public Amount_breakdown Breakdown { get; set; }

    }

    /// <summary>
    /// The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payee_base
    {
        /// <summary>
        /// The email address of merchant.
        /// </summary>

        [JsonPropertyName("email_address")]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])")]
        public string Email_address { get; set; }

        /// <summary>
        /// The encrypted PayPal account ID of the merchant.
        /// </summary>

        [JsonPropertyName("merchant_id")]
        [System.ComponentModel.DataAnnotations.StringLength(13, MinimumLength = 13)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[2-9A-HJ-NP-Z]{13}$")]
        public string Merchant_id { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The merchant who receives the funds and fulfills the order. The merchant is also known as the payee.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payee : Payee_base
    {

    }

    /// <summary>
    /// The platform or partner fee, commission, or brokerage fee that is associated with the transaction. Not a separate or isolated transaction leg from the external perspective. The platform fee is limited in scope and is always associated with the original payment for the purchase unit.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Platform_fee
    {
        /// <summary>
        /// The fee for this transaction.
        /// </summary>

        [JsonPropertyName("amount")]
        [System.ComponentModel.DataAnnotations.Required]
        public Money Amount { get; set; } = new Money();

        /// <summary>
        /// The recipient of the fee for this transaction. If you omit this value, the default is the API caller.
        /// </summary>

        [JsonPropertyName("payee")]
        public Payee_base Payee { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The funds that are held on behalf of the merchant.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Disbursement_mode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"INSTANT")]
        INSTANT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"DELAYED")]
        DELAYED = 1,

    }

    /// <summary>
    /// Any additional payment instructions to be consider during payment processing. This processing instruction is applicable for Capturing an order or Authorizing an Order.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payment_instruction
    {
        /// <summary>
        /// An array of various fees, commissions, tips, or donations. This field is only applicable to merchants that been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability.
        /// </summary>

        [JsonPropertyName("platform_fees")]
        [System.ComponentModel.DataAnnotations.MaxLength(1)]
        public ICollection<Platform_fee> Platform_fees { get; set; }

        /// <summary>
        /// The funds that are held payee by the marketplace/platform. This field is only applicable to merchants that been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability.
        /// </summary>

        [JsonPropertyName("disbursement_mode")]
        [System.ComponentModel.DataAnnotations.StringLength(16, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Disbursement_mode Disbursement_mode { get; set; }

        /// <summary>
        /// This field is only enabled for selected merchants/partners to use and provides the ability to trigger a specific pricing rate/plan for a payment transaction. The list of eligible 'payee_pricing_tier_id' would be provided to you by your Account Manager. Specifying values other than the one provided to you by your account manager would result in an error.
        /// </summary>

        [JsonPropertyName("payee_pricing_tier_id")]
        [System.ComponentModel.DataAnnotations.StringLength(20, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Payee_pricing_tier_id { get; set; }

        /// <summary>
        /// FX identifier generated returned by PayPal to be used for payment processing in order to honor FX rate (for eligible integrations) to be used when amount is settled/received into the payee account.
        /// </summary>

        [JsonPropertyName("payee_receivable_fx_rate_id")]
        [System.ComponentModel.DataAnnotations.StringLength(4000, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Payee_receivable_fx_rate_id { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The details for the items to be purchased.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Item
    {
        /// <summary>
        /// The item name or title.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        public string Name { get; set; }

        /// <summary>
        /// The item price or rate per unit. If you specify &lt;code&gt;unit_amount&lt;/code&gt;, &lt;code&gt;purchase_units[].amount.breakdown.item_total&lt;/code&gt; is required. Must equal &lt;code&gt;unit_amount * quantity&lt;/code&gt; for all items. &lt;code&gt;unit_amount.value&lt;/code&gt; can not be a negative number.
        /// </summary>

        [JsonPropertyName("unit_amount")]
        [System.ComponentModel.DataAnnotations.Required]
        public Money Unit_amount { get; set; } = new Money();

        /// <summary>
        /// The item tax for each unit. If &lt;code&gt;tax&lt;/code&gt; is specified, &lt;code&gt;purchase_units[].amount.breakdown.tax_total&lt;/code&gt; is required. Must equal &lt;code&gt;tax * quantity&lt;/code&gt; for all items. &lt;code&gt;tax.value&lt;/code&gt; can not be a negative number.
        /// </summary>

        [JsonPropertyName("tax")]
        public Money Tax { get; set; }

        /// <summary>
        /// The item quantity. Must be a whole number.
        /// </summary>

        [JsonPropertyName("quantity")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[1-9][0-9]{0,9}$")]
        public string Quantity { get; set; }

        /// <summary>
        /// The detailed item description.
        /// </summary>

        [JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.StringLength(127)]
        public string Description { get; set; }

        /// <summary>
        /// The stock keeping unit (SKU) for the item.
        /// </summary>

        [JsonPropertyName("sku")]
        [System.ComponentModel.DataAnnotations.StringLength(127)]
        public string Sku { get; set; }

        /// <summary>
        /// The item category type.
        /// </summary>

        [JsonPropertyName("category")]
        [System.ComponentModel.DataAnnotations.StringLength(20, MinimumLength = 1)]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public ItemCategory Category { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A classification for the method of purchase fulfillment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Shipping_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPPING")]
        SHIPPING = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PICKUP")]
        PICKUP = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PICKUP_IN_STORE")]
        PICKUP_IN_STORE = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PICKUP_FROM_PERSON")]
        PICKUP_FROM_PERSON = 3,

    }

    /// <summary>
    /// The options that the payee or merchant offers to the payer to ship or pick up their items.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Shipping_option
    {
        /// <summary>
        /// A unique ID that identifies a payer-selected shipping option.
        /// </summary>

        [JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(127)]
        public string Id { get; set; }

        /// <summary>
        /// A description that the payer sees, which helps them choose an appropriate shipping option. For example, `Free Shipping`, `USPS Priority Shipping`, `Expédition prioritaire USPS`, or `USPS yōuxiān fā huò`. Localize this description to the payer's locale.
        /// </summary>

        [JsonPropertyName("label")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(127)]
        public string Label { get; set; }

        /// <summary>
        /// A classification for the method of purchase fulfillment.
        /// </summary>

        [JsonPropertyName("type")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Shipping_type Type { get; set; }

        /// <summary>
        /// The shipping cost for the selected option.
        /// </summary>

        [JsonPropertyName("amount")]
        public Money Amount { get; set; }

        /// <summary>
        /// If the API request sets `selected = true`, it represents the shipping option that the payee or merchant expects to be pre-selected for the payer when they first view the `shipping.options` in the PayPal Checkout experience. As part of the response if a `shipping.option` contains `selected=true`, it represents the shipping option that the payer selected during the course of checkout with PayPal. Only one `shipping.option` can be set to `selected=true`.
        /// </summary>

        [JsonPropertyName("selected")]
        public bool Selected { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The shipping details.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Shipping_detail
    {
        /// <summary>
        /// The name of the person to whom to ship the items. Supports only the `full_name` property.
        /// </summary>

        [JsonPropertyName("name")]
        public Name Name { get; set; }

        /// <summary>
        /// A classification for the method of purchase fulfillment (e.g shipping, in-store pickup, etc). Either `type` or `options` may be present, but not both.
        /// </summary>

        [JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Shipping_detailType Type { get; set; }

        /// <summary>
        /// An array of shipping options that the payee or merchant offers to the payer to ship or pick up their items.
        /// </summary>

        [JsonPropertyName("options")]
        [System.ComponentModel.DataAnnotations.MaxLength(10)]
        public ICollection<Shipping_option> Options { get; set; }

        /// <summary>
        /// The address of the person to whom to ship the items. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.
        /// </summary>

        [JsonPropertyName("address")]
        public Address_portable Address { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The level 2 card processing data collections. If your merchant account has been configured for Level 2 processing this field will be passed to the processor on your behalf. Please contact your PayPal Technical Account Manager to define level 2 data for your business.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Level_2_card_processing_data
    {
        /// <summary>
        /// Use this field to pass a purchase identification value of up to 12 ASCII characters for AIB and 17 ASCII characters for all other processors.
        /// </summary>

        [JsonPropertyName("invoice_id")]
        [System.ComponentModel.DataAnnotations.StringLength(17, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[\w‘\-.,"":;\!?]*$")]
        public string Invoice_id { get; set; }

        /// <summary>
        /// Use this field to break down the amount of tax included in the total purchase amount. The value provided here will not add to the total purchase amount. The value can't be negative, and in most cases, it must be greater than zero in order to qualify for lower interchange rates. 
        /// <br/> Value, by country, is:
        /// <br/>
        /// <br/>    UK. A county.
        /// <br/>    US. A state.
        /// <br/>    Canada. A province.
        /// <br/>    Japan. A prefecture.
        /// <br/>    Switzerland. A kanton.
        /// <br/>
        /// </summary>

        [JsonPropertyName("tax_total")]
        public Money Tax_total { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The line items for this purchase. If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Line_item : Item
    {
        /// <summary>
        /// Code used to classify items purchased and track the total amount spent across various categories of products and services. Different corporate purchasing organizations may use different standards, but the United Nations Standard Products and Services Code (UNSPSC) is frequently used.
        /// </summary>

        [JsonPropertyName("commodity_code")]
        [System.ComponentModel.DataAnnotations.StringLength(12, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9_'.-]*$")]
        public string Commodity_code { get; set; }

        /// <summary>
        /// Use this field to break down the discount amount included in the total purchase amount. The value provided here will not add to the total purchase amount. The value cannot be negative.
        /// </summary>

        [JsonPropertyName("discount_amount")]
        public Money Discount_amount { get; set; }

        /// <summary>
        /// The subtotal for all items. Must equal the sum of (items[].unit_amount * items[].quantity) for all items. item_total.value can not be a negative number.
        /// </summary>

        [JsonPropertyName("total_amount")]
        public Money Total_amount { get; set; }

        /// <summary>
        /// Unit of measure is a standard used to express the magnitude of a quantity in international trade. Most commonly used (but not limited to) examples are: Acre (ACR), Ampere (AMP), Centigram (CGM), Centimetre (CMT), Cubic inch (INQ), Cubic metre (MTQ), Fluid ounce (OZA), Foot (FOT), Hour (HUR), Item (ITM), Kilogram (KGM), Kilometre (KMT), Kilowatt (KWT), Liquid gallon (GLL), Liter (LTR), Pounds (LBS), Square foot (FTK).
        /// </summary>

        [JsonPropertyName("unit_of_measure")]
        [System.ComponentModel.DataAnnotations.StringLength(12, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9_'.-]*$")]
        public string Unit_of_measure { get; set; }

    }

    /// <summary>
    /// The level 3 card processing data collections, If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf. Please contact your PayPal Technical Account Manager to define level 3 data for your business.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Level_3_card_processing_data
    {
        /// <summary>
        /// Use this field to break down the shipping cost included in the total purchase amount. The value provided here will not add to the total purchase amount. The value cannot be negative.
        /// </summary>

        [JsonPropertyName("shipping_amount")]
        public Money Shipping_amount { get; set; }

        /// <summary>
        /// Use this field to break down the duty amount included in the total purchase amount. The value provided here will not add to the total purchase amount. The value cannot be negative.
        /// </summary>

        [JsonPropertyName("duty_amount")]
        public Money Duty_amount { get; set; }

        /// <summary>
        /// Use this field to break down the discount amount included in the total purchase amount. The value provided here will not add to the total purchase amount. The value cannot be negative.
        /// </summary>

        [JsonPropertyName("discount_amount")]
        public Money Discount_amount { get; set; }

        /// <summary>
        /// The address of the person to whom to ship the items. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.
        /// </summary>

        [JsonPropertyName("shipping_address")]
        public Address_portable Shipping_address { get; set; }

        /// <summary>
        /// Use this field to specify the postal code of the shipping location.
        /// </summary>

        [JsonPropertyName("ships_from_postal_code")]
        [System.ComponentModel.DataAnnotations.StringLength(60, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9_'.-]*$")]
        public string Ships_from_postal_code { get; set; }

        /// <summary>
        /// A list of the items that were purchased with this payment. If your merchant account has been configured for Level 3 processing this field will be passed to the processor on your behalf.
        /// </summary>

        [JsonPropertyName("line_items")]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        [System.ComponentModel.DataAnnotations.MaxLength(100)]
        public ICollection<Line_item> Line_items { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see &lt;a href="https://developer.paypal.com/docs/checkout/advanced/processing/"&gt;checkout&lt;/a&gt; or &lt;a href="https://developer.paypal.com/docs/multiparty/checkout/advanced/processing/"&gt;multiparty checkout&lt;/a&gt;.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Card_supplementary_data
    {

        [JsonPropertyName("level_2")]
        public Level_2_card_processing_data Level_2 { get; set; }

        [JsonPropertyName("level_3")]
        public Level_3_card_processing_data Level_3 { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Supplementary data about a payment. This object passes information that can be used to improve risk assessments and processing costs, for example, by providing Level 2 and Level 3 payment data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Supplementary_data
    {
        /// <summary>
        /// Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see &lt;a href="https://developer.paypal.com/docs/checkout/advanced/processing/"&gt;checkout&lt;/a&gt; or &lt;a href="https://developer.paypal.com/docs/multiparty/checkout/advanced/processing/"&gt;multiparty checkout&lt;/a&gt;.
        /// </summary>

        [JsonPropertyName("card")]
        public Card_supplementary_data Card { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The purchase unit request. Includes required information for the payment contract.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Purchase_unit_request
    {
        /// <summary>
        /// The API caller-provided external ID for the purchase unit. Required for multiple purchase units when you must update the order through `PATCH`. If you omit this value and the order contains only one purchase unit, PayPal sets this value to `default`.
        /// </summary>

        [JsonPropertyName("reference_id")]
        [System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength = 1)]
        public string Reference_id { get; set; }

        /// <summary>
        /// The total order amount with an optional breakdown that provides details, such as the total item amount, total tax amount, shipping, handling, insurance, and discounts, if any.&lt;br/&gt;If you specify `amount.breakdown`, the amount equals `item_total` plus `tax_total` plus `shipping` plus `handling` plus `insurance` minus `shipping_discount` minus discount.&lt;br/&gt;The amount must be a positive number. The `amount.value` field supports up to 15 digits preceding the decimal. For a list of supported currencies, decimal precision, and maximum charge amount, see the PayPal REST APIs &lt;a href="https://developer.paypal.com/api/rest/reference/currency-codes/"&gt;Currency Codes&lt;/a&gt;.
        /// </summary>

        [JsonPropertyName("amount")]
        public Amount_with_breakdown Amount { get; set; } = new Amount_with_breakdown();

        /// <summary>
        /// The merchant who receives payment for this transaction.
        /// </summary>

        [JsonPropertyName("payee")]
        public Payee Payee { get; set; }

        [JsonPropertyName("payment_instruction")]
        public Payment_instruction Payment_instruction { get; set; }

        /// <summary>
        /// The purchase description. The maximum length of the character is dependent on the type of characters used. The character length is specified assuming a US ASCII character. Depending on type of character; (e.g. accented character, Japanese characters) the number of characters that that can be specified as input might not equal the permissible max length.
        /// </summary>

        [JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        public string Description { get; set; }

        /// <summary>
        /// The API caller-provided external ID. Used to reconcile client transactions with PayPal transactions. Appears in transaction and settlement reports but is not visible to the payer.
        /// </summary>

        [JsonPropertyName("custom_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        public string Custom_id { get; set; }

        /// <summary>
        /// The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("invoice_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        public string Invoice_id { get; set; }

        /// <summary>
        /// The soft descriptor is the dynamic text used to construct the statement descriptor that appears on a payer's card statement.&lt;br&gt;&lt;br&gt;If an Order is paid using the "PayPal Wallet", the statement descriptor will appear in following format on the payer's card statement: &lt;code&gt;&lt;var&gt;PAYPAL_prefix&lt;/var&gt;+(space)+&lt;var&gt;merchant_descriptor&lt;/var&gt;+(space)+ &lt;var&gt;soft_descriptor&lt;/var&gt;&lt;/code&gt;&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; The merchant descriptor is the descriptor of the merchant’s payment receiving preferences which can be seen by logging into the merchant account https://www.sandbox.paypal.com/businessprofile/settings/info/edit&lt;/blockquote&gt;The &lt;code&gt;PAYPAL&lt;/code&gt; prefix uses 8 characters. Only the first 22 characters will be displayed in the statement. &lt;br&gt;For example, if:&lt;ul&gt;&lt;li&gt;The PayPal prefix toggle is &lt;code&gt;PAYPAL *&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;The merchant descriptor in the profile is &lt;code&gt;Janes Gift&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;The soft descriptor is &lt;code&gt;800-123-1234&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;Then, the statement descriptor on the card is &lt;code&gt;PAYPAL * Janes Gift 80&lt;/code&gt;.
        /// </summary>

        [JsonPropertyName("soft_descriptor")]
        [System.ComponentModel.DataAnnotations.StringLength(22, MinimumLength = 1)]
        public string Soft_descriptor { get; set; }

        /// <summary>
        /// An array of items that the customer purchases from the merchant.
        /// </summary>

        [JsonPropertyName("items")]
        public ICollection<Item> Items { get; set; }

        /// <summary>
        /// The name and address of the person to whom to ship the items.
        /// </summary>

        [JsonPropertyName("shipping")]
        public Shipping_detail Shipping { get; set; }

        /// <summary>
        /// Contains Supplementary Data.
        /// </summary>

        [JsonPropertyName("supplementary_data")]
        public Supplementary_data Supplementary_data { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The card network or brand. Applies to credit, debit, gift, and payment cards.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Card_brand
    {

        [System.Runtime.Serialization.EnumMember(Value = @"VISA")]
        VISA = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"MASTERCARD")]
        MASTERCARD = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DISCOVER")]
        DISCOVER = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"AMEX")]
        AMEX = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"SOLO")]
        SOLO = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"JCB")]
        JCB = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"STAR")]
        STAR = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"DELTA")]
        DELTA = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"SWITCH")]
        SWITCH = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"MAESTRO")]
        MAESTRO = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"CB_NATIONALE")]
        CB_NATIONALE = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"CONFIGOGA")]
        CONFIGOGA = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"CONFIDIS")]
        CONFIDIS = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"ELECTRON")]
        ELECTRON = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"CETELEM")]
        CETELEM = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"CHINA_UNION_PAY")]
        CHINA_UNION_PAY = 15,

    }

    /// <summary>
    /// Type of card. i.e Credit, Debit and so on.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Card_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREDIT")]
        CREDIT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"DEBIT")]
        DEBIT = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PREPAID")]
        PREPAID = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"STORE")]
        STORE = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"UNKNOWN")]
        UNKNOWN = 4,

    }

    /// <summary>
    /// The details about a customer in PayPal's system of record.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Customer
    {

        [JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.StringLength(22, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9a-zA-Z_-]+$")]
        public string Id { get; set; }

        /// <summary>
        /// Email address of the buyer as provided to the merchant or on file with the merchant. Email Address is required if you are processing the transaction using PayPal Guest Processing which is offered to select partners and merchants. For all other use cases we do not expect partners/merchant to send email_address of their customer.
        /// </summary>

        [JsonPropertyName("email_address")]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])")]
        public string Email_address { get; set; }

        /// <summary>
        /// The phone number of the buyer as provided to the merchant or on file with the merchant. The `phone.phone_number` supports only `national_number`.
        /// </summary>

        [JsonPropertyName("phone")]
        public Phone_with_type Phone { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Defines how and when the payment source gets vaulted.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Store_in_vault_instruction
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ON_SUCCESS")]
        ON_SUCCESS = 0,

    }

    /// <summary>
    /// Basic vault instruction specification that can be extended by specific payment sources that supports vaulting.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Vault_instruction_base
    {

        [JsonPropertyName("store_in_vault")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Store_in_vault_instruction Store_in_vault { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Additional attributes associated with the use of this card.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Card_attributes
    {

        [JsonPropertyName("customer")]
        public Customer Customer { get; set; }

        /// <summary>
        /// Instruction to vault the card based on the specified strategy.
        /// </summary>

        [JsonPropertyName("vault")]
        public Vault_instruction_base Vault { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The payment card to use to fund a payment. Can be a credit or debit card.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Card
    {
        /// <summary>
        /// The PayPal-generated ID for the card.
        /// </summary>

        [JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Za-z0-9-_.+=]+$")]
        public string Id { get; set; }

        /// <summary>
        /// The card holder's name as it appears on the card.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.{1,300}$")]
        public string Name { get; set; }

        /// <summary>
        /// The primary account number (PAN) for the payment card.
        /// </summary>

        [JsonPropertyName("number")]
        [System.ComponentModel.DataAnnotations.StringLength(19, MinimumLength = 13)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{13,19}$")]
        public string Number { get; set; }

        /// <summary>
        /// The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("expiry")]
        [System.ComponentModel.DataAnnotations.StringLength(7, MinimumLength = 7)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])$")]
        public string Expiry { get; set; }

        /// <summary>
        /// The three- or four-digit security code of the card. Also known as the CVV, CVC, CVN, CVE, or CID. This parameter cannot be present in the request when `payment_initiator=MERCHANT`.
        /// </summary>

        [JsonPropertyName("security_code")]
        [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{3,4}$")]
        public string Security_code { get; set; }

        /// <summary>
        /// The last digits of the payment card.
        /// </summary>

        [JsonPropertyName("last_digits")]
        [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{2,4}$")]
        public string Last_digits { get; set; }

        /// <summary>
        /// The card brand or network. Typically used in the response.
        /// </summary>

        [JsonPropertyName("card_type")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        [System.Obsolete]
        public Card_brand Card_type { get; set; }

        /// <summary>
        /// The payment card type.
        /// </summary>

        [JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Card_type Type { get; set; }

        /// <summary>
        /// The card brand or network. Typically used in the response.
        /// </summary>

        [JsonPropertyName("brand")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Card_brand Brand { get; set; }

        /// <summary>
        /// The billing address for this card. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties.
        /// </summary>

        [JsonPropertyName("billing_address")]
        public Address_portable Billing_address { get; set; }

        /// <summary>
        /// Additional attributes associated with the use of this card.
        /// </summary>

        [JsonPropertyName("attributes")]
        public Card_attributes Attributes { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The person or party who initiated or triggered the payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Payment_initiator
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CUSTOMER")]
        CUSTOMER = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"MERCHANT")]
        MERCHANT = 1,

    }

    /// <summary>
    /// Indicates the type of the stored payment_source payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Stored_payment_source_payment_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ONE_TIME")]
        ONE_TIME = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"RECURRING")]
        RECURRING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"UNSCHEDULED")]
        UNSCHEDULED = 2,

    }

    /// <summary>
    /// Indicates if this is a `first` or `subsequent` payment using a stored payment source (also referred to as stored credential or card on file).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Stored_payment_source_usage_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"FIRST")]
        FIRST = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SUBSEQUENT")]
        SUBSEQUENT = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DERIVED")]
        DERIVED = 2,

    }

    /// <summary>
    /// Reference values used by the card network to identify a transaction.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Network_transaction_reference
    {
        /// <summary>
        /// Transaction reference id returned by the scheme. For Visa and Amex, this is the "Tran id" field in response. For MasterCard, this is the "BankNet reference id" field in response. For Discover, this is the "NRID" field in response. The pattern we expect for this field from Visa/Amex/CB/Discover is numeric, Mastercard/BNPP is alphanumeric and Paysecure is alphanumeric with special character -.
        /// </summary>

        [JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength = 9)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9-_@.:&+=*^'~#!$%()]+$")]
        public string Id { get; set; }

        /// <summary>
        /// The date that the transaction was authorized by the scheme. This field may not be returned for all networks. MasterCard refers to this field as "BankNet reference date.
        /// </summary>

        [JsonPropertyName("date")]
        [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 4)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]+$")]
        public string Date { get; set; }

        /// <summary>
        /// Name of the card network through which the transaction was routed.
        /// </summary>

        [JsonPropertyName("network")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Card_brand Network { get; set; }

        /// <summary>
        /// Reference ID issued for the card transaction. This ID can be used to track the transaction across processors, card brands and issuing banks.
        /// </summary>

        [JsonPropertyName("acquirer_reference_number")]
        [System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]+$")]
        public string Acquirer_reference_number { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Provides additional details to process a payment using a `card` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).&lt;br/&gt;Parameter compatibility:&lt;br/&gt;&lt;ul&gt;&lt;li&gt;`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.&lt;/li&gt;&lt;li&gt;`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.&lt;/li&gt;&lt;li&gt;`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.&lt;/li&gt;&lt;li&gt;Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.&lt;/li&gt;&lt;/ul&gt;
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Card_stored_credential
    {

        [JsonPropertyName("payment_initiator")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Payment_initiator Payment_initiator { get; set; }

        [JsonPropertyName("payment_type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Stored_payment_source_payment_type Payment_type { get; set; }

        [JsonPropertyName("usage")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Stored_payment_source_usage_type Usage { get; set; }

        [JsonPropertyName("previous_network_transaction_reference")]
        public Network_transaction_reference Previous_network_transaction_reference { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Eci_flag
    {

        [System.Runtime.Serialization.EnumMember(Value = @"MASTERCARD_NON_3D_SECURE_TRANSACTION")]
        MASTERCARD_NON_3D_SECURE_TRANSACTION = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"MASTERCARD_ATTEMPTED_AUTHENTICATION_TRANSACTION")]
        MASTERCARD_ATTEMPTED_AUTHENTICATION_TRANSACTION = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"MASTERCARD_FULLY_AUTHENTICATED_TRANSACTION")]
        MASTERCARD_FULLY_AUTHENTICATED_TRANSACTION = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"FULLY_AUTHENTICATED_TRANSACTION")]
        FULLY_AUTHENTICATED_TRANSACTION = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"ATTEMPTED_AUTHENTICATION_TRANSACTION")]
        ATTEMPTED_AUTHENTICATION_TRANSACTION = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"NON_3D_SECURE_TRANSACTION")]
        NON_3D_SECURE_TRANSACTION = 5,

    }

    /// <summary>
    /// The Third Party Network token used to fund a payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Network_token_request
    {
        /// <summary>
        /// Third party network token number.
        /// </summary>

        [JsonPropertyName("number")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(19, MinimumLength = 13)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{13,19}$")]
        public string Number { get; set; }

        /// <summary>
        /// The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("expiry")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(7, MinimumLength = 7)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])$")]
        public string Expiry { get; set; }

        /// <summary>
        /// An Encrypted one-time use value that's sent along with Network Token. This field is not required to be present for recurring transactions.
        /// </summary>

        [JsonPropertyName("cryptogram")]
        [System.ComponentModel.DataAnnotations.StringLength(32, MinimumLength = 28)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Cryptogram { get; set; }

        [JsonPropertyName("eci_flag")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Eci_flag Eci_flag { get; set; }

        /// <summary>
        /// A TRID, or a Token Requestor ID, is an identifier used by merchants to request network tokens from card networks. A TRID is a precursor to obtaining a network token for a credit card primary account number (PAN), and will aid in enabling secure card on file (COF) payments and reducing fraud.
        /// </summary>

        [JsonPropertyName("token_requestor_id")]
        [System.ComponentModel.DataAnnotations.StringLength(11, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        public string Token_requestor_id { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Customizes the payer experience during the 3DS Approval for payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Card_experience_context
    {
        /// <summary>
        /// The URL where the customer will be redirected upon successfully completing the 3DS challenge.
        /// </summary>

        [JsonPropertyName("return_url")]
        public System.Uri Return_url { get; set; }

        /// <summary>
        /// The URL where the customer will be redirected upon cancelling the 3DS challenge.
        /// </summary>

        [JsonPropertyName("cancel_url")]
        public System.Uri Cancel_url { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The payment card to use to fund a payment. Can be a credit or debit card.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; Passing card number, cvv and expiry directly via the API requires &lt;a href="https://www.pcisecuritystandards.org/pci_security/completing_self_assessment"&gt; PCI SAQ D compliance&lt;/a&gt;. &lt;br&gt;*PayPal offers a mechanism by which you do not have to take on the &lt;strong&gt;PCI SAQ D&lt;/strong&gt; burden by using hosted fields - refer to &lt;a href="https://developer.paypal.com/docs/checkout/advanced/integrate/"&gt;this Integration Guide&lt;/a&gt;*.&lt;/blockquote&gt;
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Card_request : Card
    {
        /// <summary>
        /// The PayPal-generated ID for the saved card payment source. Typically stored on the merchant's server.
        /// </summary>

        [JsonPropertyName("vault_id")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9a-zA-Z_-]+$")]
        public string Vault_id { get; set; }

        [JsonPropertyName("stored_credential")]
        public Card_stored_credential Stored_credential { get; set; }

        /// <summary>
        /// A 3rd party network token refers to a network token that the merchant provisions from and vaults with an external TSP (Token Service Provider) other than PayPal.
        /// </summary>

        [JsonPropertyName("network_token")]
        public Network_token_request Network_token { get; set; }

        [JsonPropertyName("experience_context")]
        public Card_experience_context Experience_context { get; set; }

    }

    /// <summary>
    /// The tokenized payment source to fund a payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Token
    {
        /// <summary>
        /// The PayPal-generated ID for the token.
        /// </summary>

        [JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9a-zA-Z_-]+$")]
        public string Id { get; set; }

        /// <summary>
        /// The tokenization method that generated the ID.
        /// </summary>

        [JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_-]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public TokenType Type { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The name of the party.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Name2
    {
        /// <summary>
        /// The prefix, or title, to the party's name.
        /// </summary>

        [JsonPropertyName("prefix")]
        [System.ComponentModel.DataAnnotations.StringLength(140)]
        public string Prefix { get; set; }

        /// <summary>
        /// When the party is a person, the party's given, or first, name.
        /// </summary>

        [JsonPropertyName("given_name")]
        [System.ComponentModel.DataAnnotations.StringLength(140)]
        public string Given_name { get; set; }

        /// <summary>
        /// When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname.
        /// </summary>

        [JsonPropertyName("surname")]
        [System.ComponentModel.DataAnnotations.StringLength(140)]
        public string Surname { get; set; }

        /// <summary>
        /// When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name.
        /// </summary>

        [JsonPropertyName("middle_name")]
        [System.ComponentModel.DataAnnotations.StringLength(140)]
        public string Middle_name { get; set; }

        /// <summary>
        /// The suffix for the party's name.
        /// </summary>

        [JsonPropertyName("suffix")]
        [System.ComponentModel.DataAnnotations.StringLength(140)]
        public string Suffix { get; set; }

        /// <summary>
        /// When the party is a person, the party's full name.
        /// </summary>

        [JsonPropertyName("full_name")]
        [System.ComponentModel.DataAnnotations.StringLength(300)]
        public string Full_name { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Address_portable2
    {
        /// <summary>
        /// The first line of the address, such as number and street, for example, `173 Drury Lane`. Needed for data entry, and Compliance and Risk checks. This field needs to pass the full address.
        /// </summary>

        [JsonPropertyName("address_line_1")]
        [System.ComponentModel.DataAnnotations.StringLength(300)]
        public string Address_line_1 { get; set; }

        /// <summary>
        /// The second line of the address, for example, a suite or apartment number.
        /// </summary>

        [JsonPropertyName("address_line_2")]
        [System.ComponentModel.DataAnnotations.StringLength(300)]
        public string Address_line_2 { get; set; }

        /// <summary>
        /// The third line of the address, if needed. Examples include a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.
        /// </summary>

        [JsonPropertyName("address_line_3")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Address_line_3 { get; set; }

        /// <summary>
        /// The neighborhood, ward, or district. This is smaller than `admin_area_level_3` or `sub_locality`. Value is:&lt;ul&gt;&lt;li&gt;The postal sorting code that is used in Guernsey and many French territories, such as French Guiana.&lt;/li&gt;&lt;li&gt;The fine-grained administrative levels in China.&lt;/li&gt;&lt;/ul&gt;
        /// </summary>

        [JsonPropertyName("admin_area_4")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Admin_area_4 { get; set; }

        /// <summary>
        /// The sub-locality, suburb, neighborhood, or district. This is smaller than `admin_area_level_2`. Value is:&lt;ul&gt;&lt;li&gt;Brazil. Suburb, *bairro*, or neighborhood.&lt;/li&gt;&lt;li&gt;India. Sub-locality or district. Street name information isn't always available, but a sub-locality or district can be a very small area.&lt;/li&gt;&lt;/ul&gt;
        /// </summary>

        [JsonPropertyName("admin_area_3")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Admin_area_3 { get; set; }

        /// <summary>
        /// A city, town, or village. Smaller than `admin_area_level_1`.
        /// </summary>

        [JsonPropertyName("admin_area_2")]
        [System.ComponentModel.DataAnnotations.StringLength(120)]
        public string Admin_area_2 { get; set; }

        /// <summary>
        /// The highest-level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. This data is formatted for postal delivery, for example, `CA` and not `California`. Value, by country, is:&lt;ul&gt;&lt;li&gt;UK. A county.&lt;/li&gt;&lt;li&gt;US. A state.&lt;/li&gt;&lt;li&gt;Canada. A province.&lt;/li&gt;&lt;li&gt;Japan. A prefecture.&lt;/li&gt;&lt;li&gt;Switzerland. A *kanton*.&lt;/li&gt;&lt;/ul&gt;
        /// </summary>

        [JsonPropertyName("admin_area_1")]
        [System.ComponentModel.DataAnnotations.StringLength(300)]
        public string Admin_area_1 { get; set; }

        /// <summary>
        /// The postal code, which is the ZIP code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).
        /// </summary>

        [JsonPropertyName("postal_code")]
        [System.ComponentModel.DataAnnotations.StringLength(60)]
        public string Postal_code { get; set; }

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The non-portable additional address details include fine-grain address information for Compliance, Risk, and other scenarios. This isn't portable with common third-party and open source applications. This can include data that is redundant with core fields. For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.
        /// </summary>

        [JsonPropertyName("address_details")]
        public Address_details2 Address_details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The details about a customer in PayPal's system of record.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Paypal_wallet_customer : Customer
    {

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Vault_owner_id
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Resource consolidating common request and response attributes for vaulting PayPal Wallet.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Vault_paypal_wallet_base : Vault_instruction_base
    {
        /// <summary>
        /// The description displayed to PayPal consumer on the approval flow for PayPal, as well as on the PayPal payment token management experience on PayPal.com.
        /// </summary>

        [JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength = 1)]
        public string Description { get; set; }

        /// <summary>
        /// Expected business/pricing model for the billing agreement.
        /// </summary>

        [JsonPropertyName("usage_pattern")]
        [System.ComponentModel.DataAnnotations.StringLength(30, MinimumLength = 1)]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Vault_paypal_wallet_baseUsage_pattern Usage_pattern { get; set; }

        /// <summary>
        /// The shipping address for the Payer.
        /// </summary>

        [JsonPropertyName("shipping")]
        public Shipping_detail Shipping { get; set; }

        /// <summary>
        /// The usage type associated with the PayPal payment token.
        /// </summary>

        [JsonPropertyName("usage_type")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Vault_paypal_wallet_baseUsage_type Usage_type { get; set; }

        [JsonPropertyName("owner_id")]
        public Vault_owner_id Owner_id { get; set; }

        /// <summary>
        /// The customer type associated with the PayPal payment token. This is to indicate whether the customer acting on the merchant / platform is either a business or a consumer.
        /// </summary>

        [JsonPropertyName("customer_type")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Vault_paypal_wallet_baseCustomer_type Customer_type { get; set; } = KakeysBakery.Components.PayPalAuth.Orders.Vault_paypal_wallet_baseCustomer_type.CONSUMER;

        /// <summary>
        /// Create multiple payment tokens for the same payer, merchant/platform combination. Use this when the customer has not logged in at merchant/platform. The payment token thus generated, can then also be used to create the customer account at merchant/platform. Use this also when multiple payment tokens are required for the same payer, different customer at merchant/platform. This helps to identify customers distinctly even though they may share the same PayPal account. This only applies to PayPal payment source.
        /// </summary>

        [JsonPropertyName("permit_multiple_payment_tokens")]
        public bool Permit_multiple_payment_tokens { get; set; } = false;

    }

    /// <summary>
    /// Additional attributes associated with the use of this PayPal Wallet.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Paypal_wallet_attributes
    {

        [JsonPropertyName("customer")]
        public Paypal_wallet_customer Customer { get; set; }

        /// <summary>
        /// Attributes used to provide the instructions during vaulting of the PayPal Wallet.
        /// </summary>

        [JsonPropertyName("vault")]
        public Vault_paypal_wallet_base Vault { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Customizes the payer experience during the approval process for payment with PayPal.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; Partners and Marketplaces might configure &lt;code&gt;brand_name&lt;/code&gt; and &lt;code&gt;shipping_preference&lt;/code&gt; during partner account setup, which overrides the request values.&lt;/blockquote&gt;
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Paypal_wallet_experience_context
    {
        /// <summary>
        /// The label that overrides the business name in the PayPal account on the PayPal site. The pattern is defined by an external party and supports Unicode.
        /// </summary>

        [JsonPropertyName("brand_name")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Brand_name { get; set; }

        /// <summary>
        /// The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.
        /// </summary>

        [JsonPropertyName("locale")]
        [System.ComponentModel.DataAnnotations.StringLength(10, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}|[0-9]{3}))?$")]
        public string Locale { get; set; }

        /// <summary>
        /// The location from which the shipping address is derived.
        /// </summary>

        [JsonPropertyName("shipping_preference")]
        [System.ComponentModel.DataAnnotations.StringLength(24, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Paypal_wallet_experience_contextShipping_preference Shipping_preference { get; set; } = KakeysBakery.Components.PayPalAuth.Orders.Paypal_wallet_experience_contextShipping_preference.GET_FROM_FILE;

        /// <summary>
        /// The URL where the customer will be redirected upon approving a payment.
        /// </summary>

        [JsonPropertyName("return_url")]
        public System.Uri Return_url { get; set; }

        /// <summary>
        /// The URL where the customer will be redirected upon cancelling the payment approval.
        /// </summary>

        [JsonPropertyName("cancel_url")]
        public System.Uri Cancel_url { get; set; }

        /// <summary>
        /// The type of landing page to show on the PayPal site for customer checkout.
        /// </summary>

        [JsonPropertyName("landing_page")]
        [System.ComponentModel.DataAnnotations.StringLength(13, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Paypal_wallet_experience_contextLanding_page Landing_page { get; set; } = KakeysBakery.Components.PayPalAuth.Orders.Paypal_wallet_experience_contextLanding_page.NO_PREFERENCE;

        /// <summary>
        /// Configures a &lt;strong&gt;Continue&lt;/strong&gt; or &lt;strong&gt;Pay Now&lt;/strong&gt; checkout flow.
        /// </summary>

        [JsonPropertyName("user_action")]
        [System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Paypal_wallet_experience_contextUser_action User_action { get; set; } = KakeysBakery.Components.PayPalAuth.Orders.Paypal_wallet_experience_contextUser_action.CONTINUE;

        /// <summary>
        /// The merchant-preferred payment methods.
        /// </summary>

        [JsonPropertyName("payment_method_preference")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Paypal_wallet_experience_contextPayment_method_preference Payment_method_preference { get; set; } = KakeysBakery.Components.PayPalAuth.Orders.Paypal_wallet_experience_contextPayment_method_preference.UNRESTRICTED;

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A resource that identifies a PayPal Wallet is used for payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Paypal_wallet
    {
        /// <summary>
        /// The PayPal-generated ID for the payment_source stored within the Vault.
        /// </summary>

        [JsonPropertyName("vault_id")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9a-zA-Z_-]+$")]
        public string Vault_id { get; set; }

        /// <summary>
        /// The email address of the PayPal account holder.
        /// </summary>

        [JsonPropertyName("email_address")]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])")]
        public string Email_address { get; set; }

        /// <summary>
        /// The name of the PayPal account holder. Supports only the `given_name` and `surname` properties.
        /// </summary>

        [JsonPropertyName("name")]
        public Name2 Name { get; set; }

        /// <summary>
        /// The phone number of the customer. Available only when you enable the **Contact Telephone Number** option in the &lt;a href="https://www.paypal.com/cgi-bin/customerprofileweb?cmd=_profile-website-payments"&gt;**Profile &amp; Settings**&lt;/a&gt; for the merchant's PayPal account. The `phone.phone_number` supports only `national_number`.
        /// </summary>

        [JsonPropertyName("phone")]
        public Phone_with_type Phone { get; set; }

        /// <summary>
        /// The birth date of the PayPal account holder in `YYYY-MM-DD` format.
        /// </summary>

        [JsonPropertyName("birth_date")]
        [System.ComponentModel.DataAnnotations.StringLength(10, MinimumLength = 10)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$")]
        public string Birth_date { get; set; }

        /// <summary>
        /// The tax information of the PayPal account holder. Required only for Brazilian PayPal account holder's. Both `tax_id` and `tax_id_type` are required.
        /// </summary>

        [JsonPropertyName("tax_info")]
        public Tax_info Tax_info { get; set; }

        /// <summary>
        /// The address of the PayPal account holder. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties. Also referred to as the billing address of the customer.
        /// </summary>

        [JsonPropertyName("address")]
        public Address_portable2 Address { get; set; }

        /// <summary>
        /// Additional attributes associated with the use of this wallet.
        /// </summary>

        [JsonPropertyName("attributes")]
        public Paypal_wallet_attributes Attributes { get; set; }

        [JsonPropertyName("experience_context")]
        public Paypal_wallet_experience_context Experience_context { get; set; }

        [JsonPropertyName("billing_agreement_id")]
        [System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9-]+$")]
        public string Billing_agreement_id { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Customizes the payer experience during the approval process for the payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Experience_context_base
    {
        /// <summary>
        /// The label that overrides the business name in the PayPal account on the PayPal site. The pattern is defined by an external party and supports Unicode.
        /// </summary>

        [JsonPropertyName("brand_name")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Brand_name { get; set; }

        /// <summary>
        /// The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.
        /// </summary>

        [JsonPropertyName("locale")]
        [System.ComponentModel.DataAnnotations.StringLength(10, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}|[0-9]{3}))?$")]
        public string Locale { get; set; }

        /// <summary>
        /// The location from which the shipping address is derived.
        /// </summary>

        [JsonPropertyName("shipping_preference")]
        [System.ComponentModel.DataAnnotations.StringLength(24, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Experience_context_baseShipping_preference Shipping_preference { get; set; } = KakeysBakery.Components.PayPalAuth.Orders.Experience_context_baseShipping_preference.GET_FROM_FILE;

        /// <summary>
        /// The URL where the customer is redirected after the customer approves the payment.
        /// </summary>

        [JsonPropertyName("return_url")]
        public System.Uri Return_url { get; set; }

        /// <summary>
        /// The URL where the customer is redirected after the customer cancels the payment.
        /// </summary>

        [JsonPropertyName("cancel_url")]
        public System.Uri Cancel_url { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Altpay_recurring_attributes_request
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using Bancontact.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Bancontact_request
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// Customizes the payer experience during the approval process for the payment.
        /// </summary>

        [JsonPropertyName("experience_context")]
        public Experience_context_base Experience_context { get; set; }

        /// <summary>
        /// Attributes for altpay recurring.
        /// </summary>

        [JsonPropertyName("attributes")]
        public Altpay_recurring_attributes_request Attributes { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Customizes the payer experience during the approval process for the BLIK payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Blik_experience_context : Experience_context_base
    {
        /// <summary>
        /// The IP address of the consumer. It could be either IPv4 or IPv6.
        /// </summary>

        [JsonPropertyName("consumer_ip")]
        [System.ComponentModel.DataAnnotations.StringLength(39, MinimumLength = 7)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$|^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$")]
        public string Consumer_ip { get; set; }

        /// <summary>
        /// The payer's User Agent. For example, Mozilla/5.0 (Macintosh; Intel Mac OS X x.y; rv:42.0).
        /// </summary>

        [JsonPropertyName("consumer_user_agent")]
        [System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Consumer_user_agent { get; set; }

    }

    /// <summary>
    /// Information used to pay using BLIK level_0 flow.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Blik_seamless
    {
        /// <summary>
        /// The 6-digit code used to authenticate a consumer within BLIK.
        /// </summary>

        [JsonPropertyName("auth_code")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(6, MinimumLength = 6)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{6}$")]
        public string Auth_code { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information used to pay using BLIK one-click flow.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Blik_one_click
    {
        /// <summary>
        /// The 6-digit code used to authenticate a consumer within BLIK.
        /// </summary>

        [JsonPropertyName("auth_code")]
        [System.ComponentModel.DataAnnotations.StringLength(6, MinimumLength = 6)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{6}$")]
        public string Auth_code { get; set; }

        /// <summary>
        /// The merchant generated, unique reference serving as a primary identifier for accounts connected between Blik and a merchant.
        /// </summary>

        [JsonPropertyName("consumer_reference")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[ -~]{3,64}$")]
        public string Consumer_reference { get; set; }

        /// <summary>
        /// A bank defined identifier used as a display name to allow the payer to differentiate between multiple registered bank accounts.
        /// </summary>

        [JsonPropertyName("alias_label")]
        [System.ComponentModel.DataAnnotations.StringLength(35, MinimumLength = 8)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[ -~]{8,35}$")]
        public string Alias_label { get; set; }

        /// <summary>
        /// A Blik-defined identifier for a specific Blik-enabled bank account that is associated with a given merchant. Used only in conjunction with a Consumer Reference.
        /// </summary>

        [JsonPropertyName("alias_key")]
        [System.ComponentModel.DataAnnotations.StringLength(19, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]+$")]
        public string Alias_key { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using BLIK.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Blik_request
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The email address of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("email")]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|""(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$")]
        public string Email { get; set; }

        /// <summary>
        /// Customizes the payer experience during the approval process for the payment.
        /// </summary>

        [JsonPropertyName("experience_context")]
        public Blik_experience_context Experience_context { get; set; }

        /// <summary>
        /// The level_0 integration flow object.
        /// </summary>

        [JsonPropertyName("level_0")]
        public Blik_seamless Level_0 { get; set; }

        /// <summary>
        /// The one-click integration flow object.
        /// </summary>

        [JsonPropertyName("one_click")]
        public Blik_one_click One_click { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using eps.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Eps_request
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// Customizes the payer experience during the approval process for the payment.
        /// </summary>

        [JsonPropertyName("experience_context")]
        public Experience_context_base Experience_context { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using giropay.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Giropay_request
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// Customizes the payer experience during the approval process for the payment.
        /// </summary>

        [JsonPropertyName("experience_context")]
        public Experience_context_base Experience_context { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using iDEAL.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Ideal_request
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The bank identification code (BIC).
        /// </summary>

        [JsonPropertyName("bic")]
        [System.ComponentModel.DataAnnotations.StringLength(11, MinimumLength = 8)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z-a-z0-9]{4}[A-Z-a-z]{2}[A-Z-a-z0-9]{2}([A-Z-a-z0-9]{3})?$")]
        public string Bic { get; set; }

        /// <summary>
        /// Customizes the payer experience during the approval process for the payment.
        /// </summary>

        [JsonPropertyName("experience_context")]
        public Experience_context_base Experience_context { get; set; }

        /// <summary>
        /// Attributes for altpay recurring.
        /// </summary>

        [JsonPropertyName("attributes")]
        public Altpay_recurring_attributes_request Attributes { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using MyBank.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Mybank_request
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// Customizes the payer experience during the approval process for the payment.
        /// </summary>

        [JsonPropertyName("experience_context")]
        public Experience_context_base Experience_context { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using P24 (Przelewy24).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class P24_request
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The email address of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("email")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|""(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$")]
        public string Email { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// Customizes the payer experience during the approval process for the payment.
        /// </summary>

        [JsonPropertyName("experience_context")]
        public Experience_context_base Experience_context { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using Sofort.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Sofort_request
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// Customizes the payer experience during the approval process for the payment.
        /// </summary>

        [JsonPropertyName("experience_context")]
        public Experience_context_base Experience_context { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using Trustly.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Trustly_request
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// Customizes the payer experience during the approval process for the payment.
        /// </summary>

        [JsonPropertyName("experience_context")]
        public Experience_context_base Experience_context { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The currency and amount for a financial transaction, such as a balance or payment due.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Money2
    {

        [JsonPropertyName("currency_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Currency_code { get; set; }

        /// <summary>
        /// The value, which might be:&lt;ul&gt;&lt;li&gt;An integer for currencies like `JPY` that are not typically fractional.&lt;/li&gt;&lt;li&gt;A decimal fraction for currencies like `TND` that are subdivided into thousandths.&lt;/li&gt;&lt;/ul&gt;For the required number of decimal places for a currency code, see [Currency Codes](/api/rest/reference/currency-codes/).
        /// </summary>

        [JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(32)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$")]
        public string Value { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information about the decrypted apple pay payment data for the token like cryptogram, eci indicator.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Apple_pay_payment_data
    {
        /// <summary>
        /// Online payment cryptogram, as defined by 3D Secure. The pattern is defined by an external party and supports Unicode.
        /// </summary>

        [JsonPropertyName("cryptogram")]
        [System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Cryptogram { get; set; }

        /// <summary>
        /// ECI indicator, as defined by 3- Secure. The pattern is defined by an external party and supports Unicode.
        /// </summary>

        [JsonPropertyName("eci_indicator")]
        [System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Eci_indicator { get; set; }

        /// <summary>
        /// Encoded Apple Pay EMV Payment Structure used for payments in China. The pattern is defined by an external party and supports Unicode.
        /// </summary>

        [JsonPropertyName("emv_data")]
        [System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Emv_data { get; set; }

        /// <summary>
        /// Bank Key encrypted Apple Pay PIN. The pattern is defined by an external party and supports Unicode.
        /// </summary>

        [JsonPropertyName("pin")]
        [System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Pin { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information about the Payment data obtained by decrypting Apple Pay token.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Apple_pay_decrypted_token_data
    {
        /// <summary>
        /// The transaction amount for the payment that the payer has approved on apple platform.
        /// </summary>

        [JsonPropertyName("transaction_amount")]
        public Money2 Transaction_amount { get; set; }

        /// <summary>
        /// Apple Pay tokenized credit card used to pay.
        /// </summary>

        [JsonPropertyName("tokenized_card")]
        [System.ComponentModel.DataAnnotations.Required]
        public Card Tokenized_card { get; set; } = new Card();

        /// <summary>
        /// Apple Pay Hex-encoded device manufacturer identifier. The pattern is defined by an external party and supports Unicode.
        /// </summary>

        [JsonPropertyName("device_manufacturer_id")]
        [System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Device_manufacturer_id { get; set; }

        /// <summary>
        /// Indicates the type of payment data passed, in case of Non China the payment data is 3DSECURE and for China it is EMV.
        /// </summary>

        [JsonPropertyName("payment_data_type")]
        [System.ComponentModel.DataAnnotations.StringLength(16, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Apple_pay_decrypted_token_dataPayment_data_type Payment_data_type { get; set; }

        /// <summary>
        /// Apple Pay payment data object which contains the cryptogram, eci_indicator and other data.
        /// </summary>

        [JsonPropertyName("payment_data")]
        public Apple_pay_payment_data Payment_data { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Apple_pay_attributes
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using ApplePay.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Apple_pay_request
    {
        /// <summary>
        /// ApplePay transaction identifier, this will be the unique identifier for this transaction provided by Apple. The pattern is defined by an external party and supports Unicode.
        /// </summary>

        [JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.StringLength(250, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Id { get; set; }

        /// <summary>
        /// Name on the account holder associated with apple pay.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The email address of the account holder associated with apple pay.
        /// </summary>

        [JsonPropertyName("email_address")]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|""(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$")]
        public string Email_address { get; set; }

        /// <summary>
        /// The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). Supports only the `national_number` property.
        /// </summary>

        [JsonPropertyName("phone_number")]
        public Phone Phone_number { get; set; }

        /// <summary>
        /// The decrypted payload details for the apple pay token.
        /// </summary>

        [JsonPropertyName("decrypted_token")]
        public Apple_pay_decrypted_token_data Decrypted_token { get; set; }

        [JsonPropertyName("stored_credential")]
        public Card_stored_credential Stored_credential { get; set; }

        /// <summary>
        /// The PayPal-generated ID for the saved apple pay payment_source. This ID should be stored on the merchant's server so the saved payment source can be used for future transactions.
        /// </summary>

        [JsonPropertyName("vault_id")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9a-zA-Z_-]+$")]
        public string Vault_id { get; set; }

        [JsonPropertyName("attributes")]
        public Apple_pay_attributes Attributes { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Google_pay_request
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Customizes the buyer experience during the approval process for payment with Venmo.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; Partners and Marketplaces might configure &lt;code&gt;shipping_preference&lt;/code&gt; during partner account setup, which overrides the request values.&lt;/blockquote&gt;
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Venmo_wallet_experience_context
    {
        /// <summary>
        /// The business name of the merchant. The pattern is defined by an external party and supports Unicode.
        /// </summary>

        [JsonPropertyName("brand_name")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Brand_name { get; set; }

        /// <summary>
        /// The location from which the shipping address is derived.
        /// </summary>

        [JsonPropertyName("shipping_preference")]
        [System.ComponentModel.DataAnnotations.StringLength(24, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Venmo_wallet_experience_contextShipping_preference Shipping_preference { get; set; } = KakeysBakery.Components.PayPalAuth.Orders.Venmo_wallet_experience_contextShipping_preference.GET_FROM_FILE;

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Base vaulting specification. The object can be extended for specific use cases within each payment_source that supports vaulting.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class V3_vault_instruction_base
    {

        [JsonPropertyName("store_in_vault")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Store_in_vault_instruction Store_in_vault { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Resource consolidating common request and response attirbutes for vaulting Venmo Wallet.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Vault_venmo_wallet_base : V3_vault_instruction_base
    {
        /// <summary>
        /// The description displayed to Venmo consumer on the approval flow for Venmo, as well as on the Venmo payment token management experience on Venmo.com.
        /// </summary>

        [JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.StringLength(128, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9_'\-., :;\!?""]*$")]
        public string Description { get; set; }

        /// <summary>
        /// Expected business/pricing model for the billing agreement.
        /// </summary>

        [JsonPropertyName("usage_pattern")]
        [System.ComponentModel.DataAnnotations.StringLength(30, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Vault_venmo_wallet_baseUsage_pattern Usage_pattern { get; set; }

        /// <summary>
        /// The usage type associated with the Venmo payment token.
        /// </summary>

        [JsonPropertyName("usage_type")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Vault_venmo_wallet_baseUsage_type Usage_type { get; set; }

        /// <summary>
        /// The customer type associated with the Venmo payment token. This is to indicate whether the customer acting on the merchant / platform is either a business or a consumer.
        /// </summary>

        [JsonPropertyName("customer_type")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Vault_venmo_wallet_baseCustomer_type Customer_type { get; set; } = KakeysBakery.Components.PayPalAuth.Orders.Vault_venmo_wallet_baseCustomer_type.CONSUMER;

        /// <summary>
        /// Create multiple payment tokens for the same payer, merchant/platform combination. Use this when the customer has not logged in at merchant/platform. The payment token thus generated, can then also be used to create the customer account at merchant/platform. Use this also when multiple payment tokens are required for the same payer, different customer at merchant/platform. This helps to identify customers distinctly even though they may share the same Venmo account.
        /// </summary>

        [JsonPropertyName("permit_multiple_payment_tokens")]
        public bool Permit_multiple_payment_tokens { get; set; } = false;

    }

    /// <summary>
    /// Additional attributes associated with the use of this Venmo Wallet.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Venmo_wallet_attributes
    {

        [JsonPropertyName("customer")]
        public Customer Customer { get; set; }

        /// <summary>
        /// Attributes used to provide the instructions during vaulting of the Venmo Wallet.
        /// </summary>

        [JsonPropertyName("vault")]
        public Vault_venmo_wallet_base Vault { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using Venmo.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Venmo_wallet_request
    {
        /// <summary>
        /// The PayPal-generated ID for the saved Venmo wallet payment_source. This ID should be stored on the merchant's server so the saved payment source can be used for future transactions.
        /// </summary>

        [JsonPropertyName("vault_id")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9a-zA-Z_-]+$")]
        public string Vault_id { get; set; }

        /// <summary>
        /// The email address of the payer.
        /// </summary>

        [JsonPropertyName("email_address")]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])")]
        public string Email_address { get; set; }

        [JsonPropertyName("experience_context")]
        public Venmo_wallet_experience_context Experience_context { get; set; }

        /// <summary>
        /// Additional attributes associated with the use of this wallet.
        /// </summary>

        [JsonPropertyName("attributes")]
        public Venmo_wallet_attributes Attributes { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The payment source definition.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payment_source
    {

        [JsonPropertyName("card")]
        public Card_request Card { get; set; }

        [JsonPropertyName("token")]
        public Token Token { get; set; }

        /// <summary>
        /// Indicates that PayPal Wallet is the payment source. Main use of this selection is to provide additional instructions associated with this choice like vaulting.
        /// </summary>

        [JsonPropertyName("paypal")]
        public Paypal_wallet Paypal { get; set; }

        /// <summary>
        /// Bancontact is the most popular online payment in Belgium. [More Details](https://www.bancontact.com/).
        /// </summary>

        [JsonPropertyName("bancontact")]
        public Bancontact_request Bancontact { get; set; }

        /// <summary>
        /// BLIK is a mobile payment system, created by Polish Payment Standard in order to allow millions of users to pay in shops, payout cash in ATMs and make online purchases and payments. [More Details](https://blikmobile.pl/).
        /// </summary>

        [JsonPropertyName("blik")]
        public Blik_request Blik { get; set; }

        /// <summary>
        /// The eps transfer is an online payment method developed by many Austrian banks. [More Details](https://www.eps-ueberweisung.at/).
        /// </summary>

        [JsonPropertyName("eps")]
        public Eps_request Eps { get; set; }

        /// <summary>
        /// Giropay is an Internet payment System in Germany, based on online banking. [More Details](https://giropay.de/).
        /// </summary>

        [JsonPropertyName("giropay")]
        public Giropay_request Giropay { get; set; }

        /// <summary>
        /// The Dutch payment method iDEAL is an online payment method that enables consumers to pay online through their own bank. [More Details](https://www.ideal.nl/).
        /// </summary>

        [JsonPropertyName("ideal")]
        public Ideal_request Ideal { get; set; }

        /// <summary>
        /// MyBank is an e-authorisation solution which enables safe digital payments and identity authentication through a consumer’s own online banking portal or mobile application. [More Details](https://www.mybank.eu/).
        /// </summary>

        [JsonPropertyName("mybank")]
        public Mybank_request Mybank { get; set; }

        /// <summary>
        /// P24 (Przelewy24) is a secure and fast online bank transfer service linked to all the major banks in Poland. [More Details](https://www.przelewy24.pl/).
        /// </summary>

        [JsonPropertyName("p24")]
        public P24_request P24 { get; set; }

        /// <summary>
        /// SOFORT Banking is a real-time bank transfer payment method that buyers use to transfer funds directly to merchants from their bank accounts. [More Details](https://www.klarna.com/sofort/).
        /// </summary>

        [JsonPropertyName("sofort")]
        public Sofort_request Sofort { get; set; }

        /// <summary>
        /// Trustly is a payment method that allows customers to shop and pay from their bank account. [More Details](https://www.trustly.net/).
        /// </summary>

        [JsonPropertyName("trustly")]
        public Trustly_request Trustly { get; set; }

        /// <summary>
        /// ApplePay payment source, allows buyer to pay using ApplePay, both on Web as well as on Native.
        /// </summary>

        [JsonPropertyName("apple_pay")]
        public Apple_pay_request Apple_pay { get; set; }

        /// <summary>
        /// Google Pay payment source, allows buyer to pay using Google Pay.
        /// </summary>

        [JsonPropertyName("google_pay")]
        public Google_pay_request Google_pay { get; set; }

        /// <summary>
        /// Information needed to indicate that Venmo is being used to fund the payment.
        /// </summary>

        [JsonPropertyName("venmo")]
        public Venmo_wallet_request Venmo { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The merchant-preferred payment methods.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Payee_payment_method_preference
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNRESTRICTED")]
        UNRESTRICTED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"IMMEDIATE_PAYMENT_REQUIRED")]
        IMMEDIATE_PAYMENT_REQUIRED = 1,

    }

    /// <summary>
    /// The customer and merchant payment preferences.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payment_method
    {

        [JsonPropertyName("payee_preferred")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Payee_payment_method_preference Payee_preferred { get; set; }

        /// <summary>
        /// NACHA (the regulatory body governing the ACH network) requires that API callers (merchants, partners) obtain the consumer’s explicit authorization before initiating a transaction. To stay compliant, you’ll need to make sure that you retain a compliant authorization for each transaction that you originate to the ACH Network using this API. ACH transactions are categorized (using SEC codes) by how you capture authorization from the Receiver (the person whose bank account is being debited or credited). PayPal supports the following SEC codes.
        /// </summary>

        [JsonPropertyName("standard_entry_class_code")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 3)]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Payment_methodStandard_entry_class_code Standard_entry_class_code { get; set; } = KakeysBakery.Components.PayPalAuth.Orders.Payment_methodStandard_entry_class_code.WEB;

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Provides additional details to process a payment using a `payment_source` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).&lt;br/&gt;Parameter compatibility:&lt;br/&gt;&lt;ul&gt;&lt;li&gt;`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.&lt;/li&gt;&lt;li&gt;`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.&lt;/li&gt;&lt;li&gt;`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.&lt;/li&gt;&lt;li&gt;Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.&lt;/li&gt;&lt;/ul&gt;
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Stored_payment_source
    {

        [JsonPropertyName("payment_initiator")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Payment_initiator Payment_initiator { get; set; }

        [JsonPropertyName("payment_type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Stored_payment_source_payment_type Payment_type { get; set; }

        [JsonPropertyName("usage")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Stored_payment_source_usage_type Usage { get; set; }

        [JsonPropertyName("previous_network_transaction_reference")]
        public Network_transaction_reference Previous_network_transaction_reference { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Customizes the payer experience during the approval process for the payment with PayPal.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; Partners and Marketplaces might configure &lt;code&gt;brand_name&lt;/code&gt; and &lt;code&gt;shipping_preference&lt;/code&gt; during partner account setup, which overrides the request values.&lt;/blockquote&gt;
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Order_application_context
    {
        /// <summary>
        /// DEPRECATED. The label that overrides the business name in the PayPal account on the PayPal site. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.brand_name`). Please specify this field in the `experience_context` object instead of the `application_context` object.
        /// </summary>

        [JsonPropertyName("brand_name")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        public string Brand_name { get; set; }

        /// <summary>
        /// DEPRECATED. The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.locale`). Please specify this field in the `experience_context` object instead of the `application_context` object.
        /// </summary>

        [JsonPropertyName("locale")]
        [System.ComponentModel.DataAnnotations.StringLength(10, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}|[0-9]{3}))?$")]
        public string Locale { get; set; }

        /// <summary>
        /// DEPRECATED. DEPRECATED. The type of landing page to show on the PayPal site for customer checkout.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.landing_page`). Please specify this field in the `experience_context` object instead of the `application_context` object.
        /// </summary>

        [JsonPropertyName("landing_page")]
        [System.ComponentModel.DataAnnotations.StringLength(13, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        [System.Obsolete]
        public Order_application_contextLanding_page Landing_page { get; set; } = KakeysBakery.Components.PayPalAuth.Orders.Order_application_contextLanding_page.NO_PREFERENCE;

        /// <summary>
        /// DEPRECATED. DEPRECATED. The shipping preference:&lt;ul&gt;&lt;li&gt;Displays the shipping address to the customer.&lt;/li&gt;&lt;li&gt;Enables the customer to choose an address on the PayPal site.&lt;/li&gt;&lt;li&gt;Restricts the customer from changing the address during the payment-approval process.&lt;/li&gt;&lt;/ul&gt;.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.shipping_preference`). Please specify this field in the `experience_context` object instead of the `application_context` object.
        /// </summary>

        [JsonPropertyName("shipping_preference")]
        [System.ComponentModel.DataAnnotations.StringLength(20, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        [System.Obsolete]
        public Order_application_contextShipping_preference Shipping_preference { get; set; } = KakeysBakery.Components.PayPalAuth.Orders.Order_application_contextShipping_preference.GET_FROM_FILE;

        /// <summary>
        /// DEPRECATED. Configures a &lt;strong&gt;Continue&lt;/strong&gt; or &lt;strong&gt;Pay Now&lt;/strong&gt; checkout flow.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.user_action`). Please specify this field in the `experience_context` object instead of the `application_context` object.
        /// </summary>

        [JsonPropertyName("user_action")]
        [System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Order_application_contextUser_action User_action { get; set; } = KakeysBakery.Components.PayPalAuth.Orders.Order_application_contextUser_action.CONTINUE;

        /// <summary>
        /// DEPRECATED. The customer and merchant payment preferences. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.payment_method_selected`). Please specify this field in the `experience_context` object instead of the `application_context` object..
        /// </summary>

        [JsonPropertyName("payment_method")]
        public Payment_method Payment_method { get; set; }

        /// <summary>
        /// DEPRECATED. The URL where the customer is redirected after the customer approves the payment. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.return_url`). Please specify this field in the `experience_context` object instead of the `application_context` object.
        /// </summary>

        [JsonPropertyName("return_url")]
        public System.Uri Return_url { get; set; }

        /// <summary>
        /// DEPRECATED. The URL where the customer is redirected after the customer cancels the payment. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.cancel_url`). Please specify this field in the `experience_context` object instead of the `application_context` object.
        /// </summary>

        [JsonPropertyName("cancel_url")]
        public System.Uri Cancel_url { get; set; }

        /// <summary>
        /// DEPRECATED. Provides additional details to process a payment using a `payment_source` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).&lt;br/&gt;Parameter compatibility:&lt;br/&gt;&lt;ul&gt;&lt;li&gt;`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.&lt;/li&gt;&lt;li&gt;`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.&lt;/li&gt;&lt;li&gt;`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.&lt;/li&gt;&lt;li&gt;Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.&lt;/li&gt;&lt;/ul&gt;.  The fields in `stored_payment_source` are now available in the `stored_credential` object under the `payment_source` which supports them (eg. `payment_source.card.stored_credential.payment_initiator`). Please specify this field in the `payment_source` object instead of the `application_context` object.
        /// </summary>

        [JsonPropertyName("stored_payment_source")]
        [System.Obsolete]
        public Stored_payment_source Stored_payment_source { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The order request details.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Order_request
    {

        [JsonPropertyName("intent")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Checkout_payment_intent Intent { get; set; }

        /// <summary>
        /// DEPRECATED. The customer is also known as the payer. The Payer object was intended to only be used with the `payment_source.paypal` object. In order to make this design more clear, the details in the `payer` object are now available under `payment_source.paypal`. Please use `payment_source.paypal`.
        /// </summary>

        [JsonPropertyName("payer")]
        [System.Obsolete]
        public Payer Payer { get; set; }

        /// <summary>
        /// An array of purchase units. Each purchase unit establishes a contract between a payer and the payee. Each purchase unit represents either a full or partial order that the payer intends to purchase from the payee.
        /// </summary>

        [JsonPropertyName("purchase_units")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        [System.ComponentModel.DataAnnotations.MaxLength(10)]
        public ICollection<Purchase_unit_request> Purchase_units { get; set; } = new System.Collections.ObjectModel.Collection<Purchase_unit_request>();

        [JsonPropertyName("payment_source")]
        public Payment_source Payment_source { get; set; }

        /// <summary>
        /// Customize the payer experience during the approval process for the payment with PayPal.
        /// </summary>

        [JsonPropertyName("application_context")]
        public Order_application_context Application_context { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The date and time stamps that are common to authorized payment, captured payment, and refund transactions.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Activity_timestamps
    {
        /// <summary>
        /// The date and time when the transaction occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("create_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Create_time { get; set; }

        /// <summary>
        /// The date and time when the transaction was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("update_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Update_time { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Liability shift indicator. The outcome of the issuer's authentication.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Liability_shift
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NO")]
        NO = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"POSSIBLE")]
        POSSIBLE = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"UNKNOWN")]
        UNKNOWN = 2,

    }

    /// <summary>
    /// Transactions status result identifier. The outcome of the issuer's authentication.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Pares_status
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Y")]
        Y = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"N")]
        N = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"U")]
        U = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"A")]
        A = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"C")]
        C = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"R")]
        R = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"D")]
        D = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"I")]
        I = 7,

    }

    /// <summary>
    /// Status of Authentication eligibility.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Enrolled
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Y")]
        Y = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"N")]
        N = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"U")]
        U = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"B")]
        B = 3,

    }

    /// <summary>
    /// Results of 3D Secure Authentication.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Three_d_secure_authentication_response
    {
        /// <summary>
        /// The outcome of the issuer's authentication.
        /// </summary>

        [JsonPropertyName("authentication_status")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Pares_status Authentication_status { get; set; }

        /// <summary>
        /// Status of authentication eligibility.
        /// </summary>

        [JsonPropertyName("enrollment_status")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Enrolled Enrollment_status { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authentication_flow
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Exemption_details
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Results of Authentication such as 3D Secure.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authentication_response
    {

        [JsonPropertyName("liability_shift")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Liability_shift Liability_shift { get; set; }

        [JsonPropertyName("three_d_secure")]
        public Three_d_secure_authentication_response Three_d_secure { get; set; }

        [JsonPropertyName("authentication_flow")]
        public Authentication_flow Authentication_flow { get; set; }

        /// <summary>
        /// Exemption details of 3D Secure Authentication.
        /// </summary>

        [JsonPropertyName("exemption_details")]
        public Exemption_details Exemption_details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The request-related [HATEOAS link](/api/rest/responses/#hateoas-links) information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Link_description
    {
        /// <summary>
        /// The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.
        /// </summary>

        [JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        /// <summary>
        /// The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).
        /// </summary>

        [JsonPropertyName("rel")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Rel { get; set; }

        /// <summary>
        /// The HTTP method required to make the related call.
        /// </summary>

        [JsonPropertyName("method")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Link_descriptionMethod Method { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The details about a saved payment source.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Vault_response
    {
        /// <summary>
        /// The PayPal-generated ID for the saved payment source.
        /// </summary>

        [JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        public string Id { get; set; }

        /// <summary>
        /// The vault status.
        /// </summary>

        [JsonPropertyName("status")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        [System.Obsolete]
        public Vault_responseStatus Status { get; set; }

        [JsonPropertyName("customer")]
        public Customer Customer { get; set; }

        /// <summary>
        /// An array of request-related HATEOAS links.
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        [System.ComponentModel.DataAnnotations.MaxLength(10)]
        public ICollection<Link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Additional attributes associated with the use of this card.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Card_attributes_response
    {

        [JsonPropertyName("vault")]
        public Vault_response Vault { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Representation of card details as received in the request.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Card_from_request
    {
        /// <summary>
        /// The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("expiry")]
        [System.ComponentModel.DataAnnotations.StringLength(7, MinimumLength = 7)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])$")]
        public string Expiry { get; set; }

        /// <summary>
        /// The last digits of the payment card.
        /// </summary>

        [JsonPropertyName("last_digits")]
        [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"[0-9]{2,}")]
        public string Last_digits { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Bank Identification Number (BIN) details used to fund a payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Bin_details
    {
        /// <summary>
        /// The Bank Identification Number (BIN) signifies the number that is being used to identify the granular level details (except the PII information) of the card.
        /// </summary>

        [JsonPropertyName("bin")]
        [System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]+$")]
        public string Bin { get; set; }

        /// <summary>
        /// The issuer of the card instrument.
        /// </summary>

        [JsonPropertyName("issuing_bank")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
        public string Issuing_bank { get; set; }

        /// <summary>
        /// The [two-character ISO-3166-1 country code](/docs/integration/direct/rest/country-codes/) of the bank.
        /// </summary>

        [JsonPropertyName("bin_country_code")]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Bin_country_code { get; set; }

        /// <summary>
        /// The type of card product assigned to the BIN by the issuer. These values are defined by the issuer and may change over time. Some examples include: PREPAID_GIFT, CONSUMER, CORPORATE.
        /// </summary>

        [JsonPropertyName("products")]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        [System.ComponentModel.DataAnnotations.MaxLength(256)]
        public ICollection<string> Products { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The payment card to use to fund a payment. Card can be a credit or debit card.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Card_response
    {
        /// <summary>
        /// The card holder's name as it appears on the card.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 2)]
        public string Name { get; set; }

        /// <summary>
        /// The last digits of the payment card.
        /// </summary>

        [JsonPropertyName("last_digits")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"[0-9]{2,}")]
        public string Last_digits { get; set; }

        /// <summary>
        /// The card brand or network. Typically used in the response.
        /// </summary>

        [JsonPropertyName("brand")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Card_brand Brand { get; set; }

        /// <summary>
        /// Array of brands or networks associated with the card.
        /// </summary>

        [JsonPropertyName("available_networks")]

        // TODO(system.text.json): Add string enum item converter
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        [System.ComponentModel.DataAnnotations.MaxLength(256)]
        public ICollection<Card_brand> Available_networks { get; set; }

        /// <summary>
        /// The payment card type.
        /// </summary>

        [JsonPropertyName("type")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Card_responseType Type { get; set; }

        [JsonPropertyName("authentication_result")]
        public Authentication_response Authentication_result { get; set; }

        [JsonPropertyName("attributes")]
        public Card_attributes_response Attributes { get; set; }

        [JsonPropertyName("from_request")]
        public Card_from_request From_request { get; set; }

        /// <summary>
        /// The card expiration year and month, in [Internet date format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("expiry")]
        [System.ComponentModel.DataAnnotations.StringLength(7, MinimumLength = 7)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])$")]
        public string Expiry { get; set; }

        /// <summary>
        /// Bank Identification Number (BIN) details used to fund a payment.
        /// </summary>

        [JsonPropertyName("bin_details")]
        public Bin_details Bin_details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The phone type.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Phone_type2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"FAX")]
        FAX = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"HOME")]
        HOME = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"MOBILE")]
        MOBILE = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
        OTHER = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"PAGER")]
        PAGER = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"WORK")]
        WORK = 5,

    }

    /// <summary>
    /// The phone number in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Phone2
    {
        /// <summary>
        /// The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN).
        /// </summary>

        [JsonPropertyName("national_number")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(14, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{1,14}?$")]
        public string National_number { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The details about a saved PayPal Wallet payment source.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Paypal_wallet_vault_response : Vault_response
    {

        [JsonPropertyName("customer")]
        public Paypal_wallet_customer Customer { get; set; }

        [JsonPropertyName("owner_id")]
        public Vault_owner_id Owner_id { get; set; }

    }

    /// <summary>
    /// Details about the merchant cobranded card used for order purchase.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Cobranded_card
    {
        /// <summary>
        /// Array of labels for the cobranded card.
        /// </summary>

        [JsonPropertyName("labels")]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        [System.ComponentModel.DataAnnotations.MaxLength(25)]
        public ICollection<string> Labels { get; set; }

        /// <summary>
        /// Merchant associated with the purchase.
        /// </summary>

        [JsonPropertyName("payee")]
        public Payee_base Payee { get; set; }

        /// <summary>
        /// Amount that was charged to the cobranded card.
        /// </summary>

        [JsonPropertyName("amount")]
        public Money Amount { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Additional attributes associated with the use of a PayPal Wallet.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Paypal_wallet_attributes_response
    {

        [JsonPropertyName("vault")]
        public Paypal_wallet_vault_response Vault { get; set; }

        /// <summary>
        /// An array of merchant cobranded cards used by buyer to complete an order. This array will be present if a merchant has onboarded their cobranded card with PayPal and provided corresponding label(s).
        /// </summary>

        [JsonPropertyName("cobranded_cards")]
        [System.ComponentModel.DataAnnotations.MaxLength(25)]
        public ICollection<Cobranded_card> Cobranded_cards { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The PayPal Wallet response.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Paypal_wallet_response
    {
        /// <summary>
        /// The email address of the PayPal account holder.
        /// </summary>

        [JsonPropertyName("email_address")]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])")]
        public string Email_address { get; set; }

        /// <summary>
        /// The PayPal-assigned ID for the PayPal account holder.
        /// </summary>

        [JsonPropertyName("account_id")]
        [System.ComponentModel.DataAnnotations.StringLength(13, MinimumLength = 13)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[2-9A-HJ-NP-Z]{13}$")]
        public string Account_id { get; set; }

        /// <summary>
        /// The account status indicates whether the buyer has verified the financial details associated with their PayPal account.
        /// </summary>

        [JsonPropertyName("account_status")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Paypal_wallet_responseAccount_status Account_status { get; set; }

        /// <summary>
        /// The name of the PayPal account holder. Supports only the `given_name` and `surname` properties.
        /// </summary>

        [JsonPropertyName("name")]
        public Name2 Name { get; set; }

        [JsonPropertyName("phone_type")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Phone_type2 Phone_type { get; set; }

        /// <summary>
        /// The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). Available only when you enable the **Contact Telephone Number** option in the &lt;a href="https://www.paypal.com/cgi-bin/customerprofileweb?cmd=_profile-website-payments"&gt;**Profile &amp; Settings**&lt;/a&gt; for the merchant's PayPal account. Supports only the `national_number` property.
        /// </summary>

        [JsonPropertyName("phone_number")]
        public Phone2 Phone_number { get; set; }

        /// <summary>
        /// The birth date of the PayPal account holder in `YYYY-MM-DD` format.
        /// </summary>

        [JsonPropertyName("birth_date")]
        [System.ComponentModel.DataAnnotations.StringLength(10, MinimumLength = 10)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$")]
        public string Birth_date { get; set; }

        /// <summary>
        /// The tax information of the PayPal account holder. Required only for Brazilian PayPal account holder's. Both `tax_id` and `tax_id_type` are required.
        /// </summary>

        [JsonPropertyName("tax_info")]
        public Tax_info Tax_info { get; set; }

        /// <summary>
        /// The address of the PayPal account holder. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties. Also referred to as the billing address of the customer.
        /// </summary>

        [JsonPropertyName("address")]
        public Address_portable2 Address { get; set; }

        [JsonPropertyName("attributes")]
        public Paypal_wallet_attributes_response Attributes { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Altpay_recurring_attributes
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information used to pay Bancontact.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Bancontact
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The bank identification code (BIC).
        /// </summary>

        [JsonPropertyName("bic")]
        [System.ComponentModel.DataAnnotations.StringLength(11, MinimumLength = 8)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z-a-z0-9]{4}[A-Z-a-z]{2}[A-Z-a-z0-9]{2}([A-Z-a-z0-9]{3})?$")]
        public string Bic { get; set; }

        [JsonPropertyName("iban_last_chars")]
        [System.ComponentModel.DataAnnotations.StringLength(34, MinimumLength = 4)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"[a-zA-Z0-9]{4}")]
        public string Iban_last_chars { get; set; }

        /// <summary>
        /// The last digits of the card used to fund the Bancontact payment.
        /// </summary>

        [JsonPropertyName("card_last_digits")]
        [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 4)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"[0-9]{4}")]
        public string Card_last_digits { get; set; }

        /// <summary>
        /// Attributes for SEPA direct debit object.
        /// </summary>

        [JsonPropertyName("attributes")]
        public Altpay_recurring_attributes Attributes { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information used to pay using BLIK one-click flow.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Blik_one_click_response
    {
        /// <summary>
        /// The merchant generated, unique reference serving as a primary identifier for accounts connected between Blik and a merchant.
        /// </summary>

        [JsonPropertyName("consumer_reference")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[ -~]{3,64}$")]
        public string Consumer_reference { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information used to pay using BLIK.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Blik
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The email address of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("email")]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|""(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$")]
        public string Email { get; set; }

        /// <summary>
        /// The one-click integration flow object.
        /// </summary>

        [JsonPropertyName("one_click")]
        public Blik_one_click_response One_click { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information used to pay using eps.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Eps
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The bank identification code (BIC).
        /// </summary>

        [JsonPropertyName("bic")]
        [System.ComponentModel.DataAnnotations.StringLength(11, MinimumLength = 8)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z-a-z0-9]{4}[A-Z-a-z]{2}[A-Z-a-z0-9]{2}([A-Z-a-z0-9]{3})?$")]
        public string Bic { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using giropay.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Giropay
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The bank identification code (BIC).
        /// </summary>

        [JsonPropertyName("bic")]
        [System.ComponentModel.DataAnnotations.StringLength(11, MinimumLength = 8)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z-a-z0-9]{4}[A-Z-a-z]{2}[A-Z-a-z0-9]{2}([A-Z-a-z0-9]{3})?$")]
        public string Bic { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information used to pay using iDEAL.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Ideal
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The bank identification code (BIC).
        /// </summary>

        [JsonPropertyName("bic")]
        [System.ComponentModel.DataAnnotations.StringLength(11, MinimumLength = 8)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z-a-z0-9]{4}[A-Z-a-z]{2}[A-Z-a-z0-9]{2}([A-Z-a-z0-9]{3})?$")]
        public string Bic { get; set; }

        [JsonPropertyName("iban_last_chars")]
        [System.ComponentModel.DataAnnotations.StringLength(34, MinimumLength = 4)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"[a-zA-Z0-9]{4}")]
        public string Iban_last_chars { get; set; }

        /// <summary>
        /// Attributes for SEPA direct debit object.
        /// </summary>

        [JsonPropertyName("attributes")]
        public Altpay_recurring_attributes Attributes { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information used to pay using MyBank.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Mybank
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The bank identification code (BIC).
        /// </summary>

        [JsonPropertyName("bic")]
        [System.ComponentModel.DataAnnotations.StringLength(11, MinimumLength = 8)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z-a-z0-9]{4}[A-Z-a-z]{2}[A-Z-a-z0-9]{2}([A-Z-a-z0-9]{3})?$")]
        public string Bic { get; set; }

        [JsonPropertyName("iban_last_chars")]
        [System.ComponentModel.DataAnnotations.StringLength(34, MinimumLength = 4)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"[a-zA-Z0-9]{4}")]
        public string Iban_last_chars { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information used to pay using P24(Przelewy24).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class P24
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The email address of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("email")]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|""(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$")]
        public string Email { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// P24 generated payment description.
        /// </summary>

        [JsonPropertyName("payment_descriptor")]
        [System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
        public string Payment_descriptor { get; set; }

        /// <summary>
        /// Numeric identifier of the payment scheme or bank used for the payment.
        /// </summary>

        [JsonPropertyName("method_id")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 1)]
        public string Method_id { get; set; }

        /// <summary>
        /// Friendly name of the payment scheme or bank used for the payment.
        /// </summary>

        [JsonPropertyName("method_description")]
        [System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
        public string Method_description { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information used to pay using Sofort.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Sofort
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The bank identification code (BIC).
        /// </summary>

        [JsonPropertyName("bic")]
        [System.ComponentModel.DataAnnotations.StringLength(11, MinimumLength = 8)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z-a-z0-9]{4}[A-Z-a-z]{2}[A-Z-a-z0-9]{2}([A-Z-a-z0-9]{3})?$")]
        public string Bic { get; set; }

        [JsonPropertyName("iban_last_chars")]
        [System.ComponentModel.DataAnnotations.StringLength(34, MinimumLength = 4)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"[a-zA-Z0-9]{4}")]
        public string Iban_last_chars { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Information needed to pay using Trustly.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Trustly
    {
        /// <summary>
        /// The name of the account holder associated with this payment method.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(300, MinimumLength = 3)]
        public string Name { get; set; }

        /// <summary>
        /// The two-character ISO 3166-1 country code.
        /// </summary>

        [JsonPropertyName("country_code")]
        [System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^([A-Z]{2}|C2)$")]
        public string Country_code { get; set; }

        /// <summary>
        /// The bank identification code (BIC).
        /// </summary>

        [JsonPropertyName("bic")]
        [System.ComponentModel.DataAnnotations.StringLength(11, MinimumLength = 8)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z-a-z0-9]{4}[A-Z-a-z]{2}[A-Z-a-z0-9]{2}([A-Z-a-z0-9]{3})?$")]
        public string Bic { get; set; }

        [JsonPropertyName("iban_last_chars")]
        [System.ComponentModel.DataAnnotations.StringLength(34, MinimumLength = 4)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"[a-zA-Z0-9]{4}")]
        public string Iban_last_chars { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Additional attributes associated with the use of a Venmo Wallet.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Venmo_wallet_attributes_response
    {

        [JsonPropertyName("vault")]
        public Vault_response Vault { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Venmo wallet response.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Venmo_wallet_response
    {
        /// <summary>
        /// The email address of the payer.
        /// </summary>

        [JsonPropertyName("email_address")]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])")]
        public string Email_address { get; set; }

        /// <summary>
        /// This is an immutable system-generated id for a user's Venmo account.
        /// </summary>

        [JsonPropertyName("account_id")]
        [System.ComponentModel.DataAnnotations.StringLength(13, MinimumLength = 13)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[2-9A-HJ-NP-Z]{13}$")]
        public string Account_id { get; set; }

        /// <summary>
        /// The Venmo user name chosen by the user, also know as a Venmo handle.
        /// </summary>

        [JsonPropertyName("user_name")]
        [System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[-a-zA-Z0-9_]*$")]
        public string User_name { get; set; }

        /// <summary>
        /// The name associated with the Venmo account. Supports only the `given_name` and `surname` properties.
        /// </summary>

        [JsonPropertyName("name")]
        public Name2 Name { get; set; }

        /// <summary>
        /// The phone number associated with the Venmo account, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). Supports only the `national_number` property.
        /// </summary>

        [JsonPropertyName("phone_number")]
        public Phone2 Phone_number { get; set; }

        /// <summary>
        /// The address of the payer. Supports only the `address_line_1`, `address_line_2`, `admin_area_1`, `admin_area_2`, `postal_code`, and `country_code` properties. Also referred to as the billing address of the customer.
        /// </summary>

        [JsonPropertyName("address")]
        public Address_portable2 Address { get; set; }

        [JsonPropertyName("attributes")]
        public Venmo_wallet_attributes_response Attributes { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The payment source used to fund the payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payment_source_response
    {

        [JsonPropertyName("card")]
        public Card_response Card { get; set; }

        [JsonPropertyName("paypal")]
        public Paypal_wallet_response Paypal { get; set; }

        [JsonPropertyName("bancontact")]
        public Bancontact Bancontact { get; set; }

        [JsonPropertyName("blik")]
        public Blik Blik { get; set; }

        [JsonPropertyName("eps")]
        public Eps Eps { get; set; }

        [JsonPropertyName("giropay")]
        public Giropay Giropay { get; set; }

        [JsonPropertyName("ideal")]
        public Ideal Ideal { get; set; }

        [JsonPropertyName("mybank")]
        public Mybank Mybank { get; set; }

        [JsonPropertyName("p24")]
        public P24 P24 { get; set; }

        [JsonPropertyName("sofort")]
        public Sofort Sofort { get; set; }

        [JsonPropertyName("trustly")]
        public Trustly Trustly { get; set; }

        [JsonPropertyName("venmo")]
        public Venmo_wallet_response Venmo { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The instruction to process an order.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Processing_instruction
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ORDER_COMPLETE_ON_PAYMENT_APPROVAL")]
        ORDER_COMPLETE_ON_PAYMENT_APPROVAL = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"NO_INSTRUCTION")]
        NO_INSTRUCTION = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Tracker_status
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Universal_product_code
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The details of the items in the shipment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Tracker_item
    {
        /// <summary>
        /// The item name or title.
        /// </summary>

        [JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        public string Name { get; set; }

        /// <summary>
        /// The item quantity. Must be a whole number.
        /// </summary>

        [JsonPropertyName("quantity")]
        [System.ComponentModel.DataAnnotations.StringLength(10, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[1-9][0-9]{0,9}$")]
        public string Quantity { get; set; }

        /// <summary>
        /// The stock keeping unit (SKU) for the item. This can contain unicode characters.
        /// </summary>

        [JsonPropertyName("sku")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        public string Sku { get; set; }

        /// <summary>
        /// The URL to the item being purchased. Visible to buyer and used in buyer experiences.
        /// </summary>

        [JsonPropertyName("url")]
        [System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength = 1)]
        public System.Uri Url { get; set; }

        /// <summary>
        /// The URL of the item's image. File type and size restrictions apply. An image that violates these restrictions will not be honored.
        /// </summary>

        [JsonPropertyName("image_url")]
        [System.ComponentModel.DataAnnotations.StringLength(2048, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^(https:)([/|.|\w|\s|-])*\.(?:jpg|gif|png|jpeg|JPG|GIF|PNG|JPEG)")]
        public System.Uri Image_url { get; set; }

        /// <summary>
        /// The Universal Product Code of the item.
        /// </summary>

        [JsonPropertyName("upc")]
        public Universal_product_code Upc { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The tracking response on creation of tracker.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Tracker : Activity_timestamps
    {
        /// <summary>
        /// The tracker id.
        /// </summary>

        [JsonPropertyName("id")]
        public string Id { get; set; }

        [JsonPropertyName("status")]
        public Tracker_status Status { get; set; }

        /// <summary>
        /// An array of details of items in the shipment.
        /// </summary>

        [JsonPropertyName("items")]
        public ICollection<Tracker_item> Items { get; set; }

        /// <summary>
        /// An array of request-related HATEOAS links.
        /// </summary>

        [JsonPropertyName("links")]
        public ICollection<Link_description> Links { get; set; }

    }

    /// <summary>
    /// The order shipping details.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Shipping_with_tracking_details : Shipping_detail
    {
        /// <summary>
        /// An array of trackers for a transaction.
        /// </summary>

        [JsonPropertyName("trackers")]
        public ICollection<Tracker> Trackers { get; set; }

    }

    /// <summary>
    /// The details of the authorized payment status.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authorization_status_details
    {
        /// <summary>
        /// The reason why the authorized status is `PENDING`.
        /// </summary>

        [JsonPropertyName("reason")]
        [System.ComponentModel.DataAnnotations.StringLength(24, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Authorization_status_detailsReason Reason { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The status fields for an authorized payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authorization_status
    {
        /// <summary>
        /// The status for the authorized payment.
        /// </summary>

        [JsonPropertyName("status")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Authorization_statusStatus Status { get; set; }

        /// <summary>
        /// The details of the authorized order pending status.
        /// </summary>

        [JsonPropertyName("status_details")]
        public Authorization_status_details Status_details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The level of protection offered as defined by [PayPal Seller Protection for Merchants](https://www.paypal.com/us/webapps/mpp/security/seller-protection).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Seller_protection
    {
        /// <summary>
        /// Indicates whether the transaction is eligible for seller protection. For information, see [PayPal Seller Protection for Merchants](https://www.paypal.com/us/webapps/mpp/security/seller-protection).
        /// </summary>

        [JsonPropertyName("status")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Seller_protectionStatus Status { get; set; }

        /// <summary>
        /// An array of conditions that are covered for the transaction.
        /// </summary>

        [JsonPropertyName("dispute_categories")]

        // TODO(system.text.json): Add string enum item converter
        public ICollection<Dispute_categories> Dispute_categories { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The authorized payment transaction.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authorization : Authorization_status
    {
        /// <summary>
        /// The PayPal-generated ID for the authorized payment.
        /// </summary>

        [JsonPropertyName("id")]
        public string Id { get; set; }

        /// <summary>
        /// The amount for this authorized payment.
        /// </summary>

        [JsonPropertyName("amount")]
        public Money Amount { get; set; }

        /// <summary>
        /// The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("invoice_id")]
        public string Invoice_id { get; set; }

        /// <summary>
        /// The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
        /// </summary>

        [JsonPropertyName("custom_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127)]
        public string Custom_id { get; set; }

        [JsonPropertyName("network_transaction_reference")]
        public Network_transaction_reference Network_transaction_reference { get; set; }

        [JsonPropertyName("seller_protection")]
        public Seller_protection Seller_protection { get; set; }

        /// <summary>
        /// The date and time when the authorized payment expires, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("expiration_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Expiration_time { get; set; }

        /// <summary>
        /// An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
        /// </summary>

        [JsonPropertyName("links")]
        public ICollection<Link_description> Links { get; set; }

        /// <summary>
        /// The date and time when the transaction occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("create_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Create_time { get; set; }

        /// <summary>
        /// The date and time when the transaction was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("update_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Update_time { get; set; }

    }

    /// <summary>
    /// The processor response information for payment requests, such as direct credit card transactions.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Processor_response
    {
        /// <summary>
        /// The address verification code for Visa, Discover, Mastercard, or American Express transactions.
        /// </summary>

        [JsonPropertyName("avs_code")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Processor_responseAvs_code Avs_code { get; set; }

        /// <summary>
        /// The card verification value code for for Visa, Discover, Mastercard, or American Express.
        /// </summary>

        [JsonPropertyName("cvv_code")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Processor_responseCvv_code Cvv_code { get; set; }

        /// <summary>
        /// Processor response code for the non-PayPal payment processor errors.
        /// </summary>

        [JsonPropertyName("response_code")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Processor_responseResponse_code Response_code { get; set; }

        /// <summary>
        /// The declined payment transactions might have payment advice codes. The card networks, like Visa and Mastercard, return payment advice codes.
        /// </summary>

        [JsonPropertyName("payment_advice_code")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Processor_responsePayment_advice_code Payment_advice_code { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The authorization with additional payment details, such as risk assessment and processor response. These details are populated only for certain payment methods.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authorization_with_additional_data : Authorization
    {
        /// <summary>
        /// The processor response for card transactions.
        /// </summary>

        [JsonPropertyName("processor_response")]
        public Processor_response Processor_response { get; set; }

    }

    /// <summary>
    /// The details of the captured payment status.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Capture_status_details
    {
        /// <summary>
        /// The reason why the captured payment status is `PENDING` or `DENIED`.
        /// </summary>

        [JsonPropertyName("reason")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Capture_status_detailsReason Reason { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The status of a captured payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Capture_status
    {
        /// <summary>
        /// The status of the captured payment.
        /// </summary>

        [JsonPropertyName("status")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Capture_statusStatus Status { get; set; }

        /// <summary>
        /// The details of the captured payment status.
        /// </summary>

        [JsonPropertyName("status_details")]
        public Capture_status_details Status_details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The exchange rate that determines the amount to convert from one currency to another currency.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Exchange_rate
    {
        /// <summary>
        /// The source currency from which to convert an amount.
        /// </summary>

        [JsonPropertyName("source_currency")]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Source_currency { get; set; }

        /// <summary>
        /// The target currency to which to convert an amount.
        /// </summary>

        [JsonPropertyName("target_currency")]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Target_currency { get; set; }

        /// <summary>
        /// The target currency amount. Equivalent to one unit of the source currency. Formatted as integer or decimal value with one to 15 digits to the right of the decimal point.
        /// </summary>

        [JsonPropertyName("value")]
        public string Value { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The detailed breakdown of the capture activity. This is not available for transactions that are in pending state.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Seller_receivable_breakdown
    {
        /// <summary>
        /// The amount for this captured payment in the currency of the transaction.
        /// </summary>

        [JsonPropertyName("gross_amount")]
        [System.ComponentModel.DataAnnotations.Required]
        public Money Gross_amount { get; set; } = new Money();

        /// <summary>
        /// The applicable fee for this captured payment in the currency of the transaction.
        /// </summary>

        [JsonPropertyName("paypal_fee")]
        public Money Paypal_fee { get; set; }

        /// <summary>
        /// The applicable fee for this captured payment in the receivable currency. Returned only in cases the fee is charged in the receivable currency. Example 'CNY'.
        /// </summary>

        [JsonPropertyName("paypal_fee_in_receivable_currency")]
        public Money Paypal_fee_in_receivable_currency { get; set; }

        /// <summary>
        /// The net amount that the payee receives for this captured payment in their PayPal account. The net amount is computed as &lt;code&gt;gross_amount&lt;/code&gt; minus the &lt;code&gt;paypal_fee&lt;/code&gt; minus the &lt;code&gt;platform_fees&lt;/code&gt;.
        /// </summary>

        [JsonPropertyName("net_amount")]
        public Money Net_amount { get; set; }

        /// <summary>
        /// The net amount that is credited to the payee's PayPal account. Returned only when the currency of the captured payment is different from the currency of the PayPal account where the payee wants to credit the funds. The amount is computed as &lt;code&gt;net_amount&lt;/code&gt; times &lt;code&gt;exchange_rate&lt;/code&gt;.
        /// </summary>

        [JsonPropertyName("receivable_amount")]
        public Money Receivable_amount { get; set; }

        /// <summary>
        /// The exchange rate that determines the amount that is credited to the payee's PayPal account. Returned when the currency of the captured payment is different from the currency of the PayPal account where the payee wants to credit the funds.
        /// </summary>

        [JsonPropertyName("exchange_rate")]
        public Exchange_rate Exchange_rate { get; set; }

        /// <summary>
        /// An array of platform or partner fees, commissions, or brokerage fees that associated with the captured payment.
        /// </summary>

        [JsonPropertyName("platform_fees")]
        [System.ComponentModel.DataAnnotations.MaxLength(1)]
        public ICollection<Platform_fee> Platform_fees { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A captured payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Capture : Capture_status
    {
        /// <summary>
        /// The PayPal-generated ID for the captured payment.
        /// </summary>

        [JsonPropertyName("id")]
        public string Id { get; set; }

        /// <summary>
        /// The amount for this captured payment.
        /// </summary>

        [JsonPropertyName("amount")]
        public Money Amount { get; set; }

        /// <summary>
        /// The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("invoice_id")]
        public string Invoice_id { get; set; }

        /// <summary>
        /// The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
        /// </summary>

        [JsonPropertyName("custom_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127)]
        public string Custom_id { get; set; }

        [JsonPropertyName("network_transaction_reference")]
        public Network_transaction_reference Network_transaction_reference { get; set; }

        [JsonPropertyName("seller_protection")]
        public Seller_protection Seller_protection { get; set; }

        /// <summary>
        /// Indicates whether you can make additional captures against the authorized payment. Set to `true` if you do not intend to capture additional payments against the authorization. Set to `false` if you intend to capture additional payments against the authorization.
        /// </summary>

        [JsonPropertyName("final_capture")]
        public bool Final_capture { get; set; } = false;

        [JsonPropertyName("seller_receivable_breakdown")]
        public Seller_receivable_breakdown Seller_receivable_breakdown { get; set; }

        [JsonPropertyName("disbursement_mode")]
        [System.ComponentModel.DataAnnotations.StringLength(16, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Disbursement_mode Disbursement_mode { get; set; }

        /// <summary>
        /// An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
        /// </summary>

        [JsonPropertyName("links")]
        public ICollection<Link_description> Links { get; set; }

        /// <summary>
        /// An object that provides additional processor information for a direct credit card transaction.
        /// </summary>

        [JsonPropertyName("processor_response")]
        public Processor_response Processor_response { get; set; }

        /// <summary>
        /// The date and time when the transaction occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("create_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Create_time { get; set; }

        /// <summary>
        /// The date and time when the transaction was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("update_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Update_time { get; set; }

    }

    /// <summary>
    /// The details of the refund status.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Refund_status_details
    {
        /// <summary>
        /// The reason why the refund has the `PENDING` or `FAILED` status.
        /// </summary>

        [JsonPropertyName("reason")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Refund_status_detailsReason Reason { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The refund status.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Refund_status
    {
        /// <summary>
        /// The status of the refund.
        /// </summary>

        [JsonPropertyName("status")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Refund_statusStatus Status { get; set; }

        /// <summary>
        /// The details of the refund status.
        /// </summary>

        [JsonPropertyName("status_details")]
        public Refund_status_details Status_details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The net amount. Returned when the currency of the refund is different from the currency of the PayPal account where the merchant holds their funds.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Net_amount_breakdown_item
    {
        /// <summary>
        /// The net amount debited from the merchant's PayPal account.
        /// </summary>

        [JsonPropertyName("payable_amount")]
        public Money Payable_amount { get; set; }

        /// <summary>
        /// The converted payable amount.
        /// </summary>

        [JsonPropertyName("converted_amount")]
        public Money Converted_amount { get; set; }

        /// <summary>
        /// The exchange rate that determines the amount that was debited from the merchant's PayPal account.
        /// </summary>

        [JsonPropertyName("exchange_rate")]
        public Exchange_rate Exchange_rate { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The refund information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Refund : Refund_status
    {
        /// <summary>
        /// The PayPal-generated ID for the refund.
        /// </summary>

        [JsonPropertyName("id")]
        public string Id { get; set; }

        /// <summary>
        /// The amount that the payee refunded to the payer.
        /// </summary>

        [JsonPropertyName("amount")]
        public Money Amount { get; set; }

        /// <summary>
        /// The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("invoice_id")]
        public string Invoice_id { get; set; }

        /// <summary>
        /// The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
        /// </summary>

        [JsonPropertyName("custom_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Za-z0-9-_.,]*$")]
        public string Custom_id { get; set; }

        /// <summary>
        /// Reference ID issued for the card transaction. This ID can be used to track the transaction across processors, card brands and issuing banks.
        /// </summary>

        [JsonPropertyName("acquirer_reference_number")]
        [System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]+$")]
        public string Acquirer_reference_number { get; set; }

        /// <summary>
        /// The reason for the refund. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("note_to_payer")]
        public string Note_to_payer { get; set; }

        /// <summary>
        /// The breakdown of the refund.
        /// </summary>

        [JsonPropertyName("seller_payable_breakdown")]
        public Seller_payable_breakdown Seller_payable_breakdown { get; set; }

        /// <summary>
        /// The details associated with the merchant for this transaction.
        /// </summary>

        [JsonPropertyName("payer")]
        public Payee_base Payer { get; set; }

        /// <summary>
        /// An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
        /// </summary>

        [JsonPropertyName("links")]
        public ICollection<Link_description> Links { get; set; }

        /// <summary>
        /// The date and time when the transaction occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("create_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Create_time { get; set; }

        /// <summary>
        /// The date and time when the transaction was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("update_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Update_time { get; set; }

    }

    /// <summary>
    /// The collection of payments, or transactions, for a purchase unit in an order. For example, authorized payments, captured payments, and refunds.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payment_collection
    {
        /// <summary>
        /// An array of authorized payments for a purchase unit. A purchase unit can have zero or more authorized payments.
        /// </summary>

        [JsonPropertyName("authorizations")]
        public ICollection<Authorization_with_additional_data> Authorizations { get; set; }

        /// <summary>
        /// An array of captured payments for a purchase unit. A purchase unit can have zero or more captured payments.
        /// </summary>

        [JsonPropertyName("captures")]
        public ICollection<Capture> Captures { get; set; }

        /// <summary>
        /// An array of refunds for a purchase unit. A purchase unit can have zero or more refunds.
        /// </summary>

        [JsonPropertyName("refunds")]
        public ICollection<Refund> Refunds { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The purchase unit details. Used to capture required information for the payment contract.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Purchase_unit
    {
        /// <summary>
        /// The API caller-provided external ID for the purchase unit. Required for multiple purchase units when you must update the order through `PATCH`. If you omit this value and the order contains only one purchase unit, PayPal sets this value to `default`. &lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; If there are multiple purchase units, &lt;code&gt;reference_id&lt;/code&gt; is required for each purchase unit.&lt;/blockquote&gt;
        /// </summary>

        [JsonPropertyName("reference_id")]
        [System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength = 1)]
        public string Reference_id { get; set; }

        [JsonPropertyName("amount")]
        public Amount_with_breakdown Amount { get; set; }

        /// <summary>
        /// The merchant who receives payment for this transaction.
        /// </summary>

        [JsonPropertyName("payee")]
        public Payee Payee { get; set; }

        [JsonPropertyName("payment_instruction")]
        public Payment_instruction Payment_instruction { get; set; }

        /// <summary>
        /// The purchase description.
        /// </summary>

        [JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        public string Description { get; set; }

        /// <summary>
        /// The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
        /// </summary>

        [JsonPropertyName("custom_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        public string Custom_id { get; set; }

        /// <summary>
        /// The API caller-provided external invoice ID for this order.
        /// </summary>

        [JsonPropertyName("invoice_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        public string Invoice_id { get; set; }

        /// <summary>
        /// The PayPal-generated ID for the purchase unit. This ID appears in both the payer's transaction history and the emails that the payer receives. In addition, this ID is available in transaction and settlement reports that merchants and API callers can use to reconcile transactions. This ID is only available when an order is saved by calling &lt;code&gt;v2/checkout/orders/id/save&lt;/code&gt;.
        /// </summary>

        [JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.StringLength(19, MinimumLength = 1)]
        public string Id { get; set; }

        /// <summary>
        /// The payment descriptor on account transactions on the customer's credit card statement, that PayPal sends to processors. The maximum length of the soft descriptor information that you can pass in the API field is 22 characters, in the following format:&lt;code&gt;22 - len(PAYPAL * (8)) - len(&lt;var&gt;Descriptor in Payment Receiving Preferences of Merchant account&lt;/var&gt; + 1)&lt;/code&gt;The PAYPAL prefix uses 8 characters.&lt;br/&gt;&lt;br/&gt;The soft descriptor supports the following ASCII characters:&lt;ul&gt;&lt;li&gt;Alphanumeric characters&lt;/li&gt;&lt;li&gt;Dashes&lt;/li&gt;&lt;li&gt;Asterisks&lt;/li&gt;&lt;li&gt;Periods (.)&lt;/li&gt;&lt;li&gt;Spaces&lt;/li&gt;&lt;/ul&gt;For Wallet payments marketplace integrations:&lt;ul&gt;&lt;li&gt;The merchant descriptor in the Payment Receiving Preferences must be the marketplace name.&lt;/li&gt;&lt;li&gt;You can't use the remaining space to show the customer service number.&lt;/li&gt;&lt;li&gt;The remaining spaces can be a combination of seller name and country.&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;For unbranded payments (Direct Card) marketplace integrations, use a combination of the seller name and phone number.
        /// </summary>

        [JsonPropertyName("soft_descriptor")]
        [System.ComponentModel.DataAnnotations.StringLength(22, MinimumLength = 1)]
        public string Soft_descriptor { get; set; }

        /// <summary>
        /// An array of items that the customer purchases from the merchant.
        /// </summary>

        [JsonPropertyName("items")]
        public ICollection<Item> Items { get; set; }

        /// <summary>
        /// The shipping address and method.
        /// </summary>

        [JsonPropertyName("shipping")]
        public Shipping_with_tracking_details Shipping { get; set; }

        /// <summary>
        /// Supplementary data about this payment. Merchants and partners can add Level 2 and 3 data to payments to reduce risk and payment processing costs. For more information about processing payments, see &lt;a href="https://developer.paypal.com/docs/checkout/advanced/processing/"&gt;checkout&lt;/a&gt; or &lt;a href="https://developer.paypal.com/docs/multiparty/checkout/advanced/processing/"&gt;multiparty checkout&lt;/a&gt;.
        /// </summary>

        [JsonPropertyName("supplementary_data")]
        public Supplementary_data Supplementary_data { get; set; }

        /// <summary>
        /// The comprehensive history of payments for the purchase unit.
        /// </summary>

        [JsonPropertyName("payments")]
        public Payment_collection Payments { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The order status.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Order_status
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATED")]
        CREATED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SAVED")]
        SAVED = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"APPROVED")]
        APPROVED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"VOIDED")]
        VOIDED = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETED")]
        COMPLETED = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"PAYER_ACTION_REQUIRED")]
        PAYER_ACTION_REQUIRED = 5,

    }

    /// <summary>
    /// The order details.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Order : Activity_timestamps
    {
        /// <summary>
        /// The ID of the order.
        /// </summary>

        [JsonPropertyName("id")]
        public string Id { get; set; }

        [JsonPropertyName("payment_source")]
        public Payment_source_response Payment_source { get; set; }

        [JsonPropertyName("intent")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Checkout_payment_intent Intent { get; set; }

        [JsonPropertyName("processing_instruction")]
        [System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Processing_instruction Processing_instruction { get; set; }

        /// <summary>
        /// DEPRECATED. The customer is also known as the payer. The Payer object was intended to only be used with the `payment_source.paypal` object. In order to make this design more clear, the details in the `payer` object are now available under `payment_source.paypal`. Please use `payment_source.paypal`.
        /// </summary>

        [JsonPropertyName("payer")]
        [System.Obsolete]
        public Payer Payer { get; set; }

        /// <summary>
        /// An array of purchase units. Each purchase unit establishes a contract between a customer and merchant. Each purchase unit represents either a full or partial order that the customer intends to purchase from the merchant.
        /// </summary>

        [JsonPropertyName("purchase_units")]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        [System.ComponentModel.DataAnnotations.MaxLength(10)]
        public ICollection<Purchase_unit> Purchase_units { get; set; }

        [JsonPropertyName("status")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Order_status Status { get; set; }

        /// <summary>
        /// An array of request-related HATEOAS links. To complete payer approval, use the `approve` link to redirect the payer. The API caller has 3 hours (default setting, this which can be changed by your account manager to 24/48/72 hours to accommodate your use case) from the time the order is created, to redirect your payer. Once redirected, the API caller has 3 hours for the payer to approve the order and either authorize or capture the order. If you are not using the PayPal JavaScript SDK to initiate PayPal Checkout (in context) ensure that you include `application_context.return_url` is specified or you will get "We're sorry, Things don't appear to be working at the moment" after the payer approves the payment.
        /// </summary>

        [JsonPropertyName("links")]
        public ICollection<Link_description> Links { get; set; }

    }

    /// <summary>
    /// The JSON patch object to apply partial updates to resources.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Patch
    {
        /// <summary>
        /// The operation.
        /// </summary>

        [JsonPropertyName("op")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public PatchOp Op { get; set; }

        /// <summary>
        /// The &lt;a href="https://tools.ietf.org/html/rfc6901"&gt;JSON Pointer&lt;/a&gt; to the target document location at which to complete the operation.
        /// </summary>

        [JsonPropertyName("path")]
        public string Path { get; set; }

        /// <summary>
        /// The value to apply. The &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt;, and &lt;code&gt;move&lt;/code&gt; operations do not require a value. Since &lt;a href="https://www.rfc-editor.org/rfc/rfc69021"&gt;JSON Patch&lt;/a&gt; allows any type for &lt;code&gt;value&lt;/code&gt;, the &lt;code&gt;type&lt;/code&gt; property is not specified.
        /// </summary>

        [JsonPropertyName("value")]
        public object Value { get; set; }

        /// <summary>
        /// The &lt;a href="https://tools.ietf.org/html/rfc6901"&gt;JSON Pointer&lt;/a&gt; to the target document location from which to move the value. Required for the &lt;code&gt;move&lt;/code&gt; operation.
        /// </summary>

        [JsonPropertyName("from")]
        public string From { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// An array of JSON patch objects to apply partial updates to resources.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Patch_request : System.Collections.ObjectModel.Collection<Patch>
    {

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Patch400
    {

        [JsonPropertyName("details")]
        public ICollection<details5> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Patch422
    {

        [JsonPropertyName("details")]
        public ICollection<details6> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Customizes the payer confirmation experience.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Order_confirm_application_context
    {
        /// <summary>
        /// Label to present to your payer as part of the PayPal hosted web experience.
        /// </summary>

        [JsonPropertyName("brand_name")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        public string Brand_name { get; set; }

        /// <summary>
        /// The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, `da-DK`, `he-IL`, `id-ID`, `ja-JP`, `no-NO`, `pt-BR`, `ru-RU`, `sv-SE`, `th-TH`, `zh-CN`, `zh-HK`, or `zh-TW`.
        /// </summary>

        [JsonPropertyName("locale")]
        [System.ComponentModel.DataAnnotations.StringLength(10, MinimumLength = 2)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}|[0-9]{3}))?$")]
        public string Locale { get; set; }

        /// <summary>
        /// The URL where the customer is redirected after the customer approves the payment.
        /// </summary>

        [JsonPropertyName("return_url")]
        [System.ComponentModel.DataAnnotations.StringLength(4000, MinimumLength = 10)]
        public System.Uri Return_url { get; set; }

        /// <summary>
        /// The URL where the customer is redirected after the customer cancels the payment.
        /// </summary>

        [JsonPropertyName("cancel_url")]
        [System.ComponentModel.DataAnnotations.StringLength(4000, MinimumLength = 10)]
        public System.Uri Cancel_url { get; set; }

        [JsonPropertyName("stored_payment_source")]
        public Stored_payment_source Stored_payment_source { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Payer confirms the intent to pay for the Order using the provided payment source.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Confirm_order_request
    {

        [JsonPropertyName("payment_source")]
        [System.ComponentModel.DataAnnotations.Required]
        public Payment_source Payment_source { get; set; } = new Payment_source();

        [JsonPropertyName("processing_instruction")]
        [System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Processing_instruction Processing_instruction { get; set; }

        [JsonPropertyName("application_context")]
        public Order_confirm_application_context Application_context { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Confirm400
    {

        [JsonPropertyName("details")]
        public ICollection<details7> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Confirm422
    {

        [JsonPropertyName("details")]
        public ICollection<details8> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The authorization of an order request.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Order_authorize_request
    {
        /// <summary>
        /// The source of payment for the order, which can be a token or a card. Use this object only if you have not redirected the user after order creation to approve the payment. In such cases, the user-selected payment method in the PayPal flow is implicitly used.
        /// </summary>

        [JsonPropertyName("payment_source")]
        public Payment_source Payment_source { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The order authorize response.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Order_authorize_response : Activity_timestamps
    {
        /// <summary>
        /// The ID of the order.
        /// </summary>

        [JsonPropertyName("id")]
        public string Id { get; set; }

        [JsonPropertyName("payment_source")]
        public Payment_source_response Payment_source { get; set; }

        [JsonPropertyName("intent")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Checkout_payment_intent Intent { get; set; }

        [JsonPropertyName("processing_instruction")]
        [System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Processing_instruction Processing_instruction { get; set; }

        [JsonPropertyName("payer")]
        public Payer Payer { get; set; }

        /// <summary>
        /// An array of purchase units. Each purchase unit establishes a contract between a customer and merchant. Each purchase unit represents either a full or partial order that the customer intends to purchase from the merchant.
        /// </summary>

        [JsonPropertyName("purchase_units")]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        [System.ComponentModel.DataAnnotations.MaxLength(10)]
        public ICollection<Purchase_unit> Purchase_units { get; set; }

        [JsonPropertyName("status")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Order_status Status { get; set; }

        /// <summary>
        /// An array of request-related HATEOAS links. To complete payer approval, use the `approve` link to redirect the payer. The API caller has 3 hours (default setting, this which can be changed by your account manager to 24/48/72 hours to accommodate your use case) from the time the order is created, to redirect your payer. Once redirected, the API caller has 3 hours for the payer to approve the order and either authorize or capture the order. If you are not using the PayPal JavaScript SDK to initiate PayPal Checkout (in context) ensure that you include `application_context.return_url` is specified or you will get "We're sorry, Things don't appear to be working at the moment" after the payer approves the payment.
        /// </summary>

        [JsonPropertyName("links")]
        public ICollection<Link_description> Links { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authorize400
    {

        [JsonPropertyName("details")]
        public ICollection<details9> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authorize403
    {

        [JsonPropertyName("details")]
        public ICollection<details10> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authorize422
    {

        [JsonPropertyName("details")]
        public ICollection<details11> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Completes an capture payment for an order.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Order_capture_request
    {

        [JsonPropertyName("payment_source")]
        public Payment_source Payment_source { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Capture400
    {

        [JsonPropertyName("details")]
        public ICollection<details12> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Capture403
    {

        [JsonPropertyName("details")]
        public ICollection<details13> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Capture422
    {

        [JsonPropertyName("details")]
        public ICollection<details14> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The tracking number type.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Shipment_tracking_number_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CARRIER_PROVIDED")]
        CARRIER_PROVIDED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"E2E_PARTNER_PROVIDED")]
        E2E_PARTNER_PROVIDED = 1,

    }

    /// <summary>
    /// The status of the item shipment. For allowed values, see &lt;a href="/docs/tracking/reference/shipping-status/"&gt;Shipping Statuses&lt;/a&gt;.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Shipment_tracking_status
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CANCELLED")]
        CANCELLED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"DELIVERED")]
        DELIVERED = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"LOCAL_PICKUP")]
        LOCAL_PICKUP = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"ON_HOLD")]
        ON_HOLD = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPPED")]
        SHIPPED = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPMENT_CREATED")]
        SHIPMENT_CREATED = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"DROPPED_OFF")]
        DROPPED_OFF = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"IN_TRANSIT")]
        IN_TRANSIT = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"RETURNED")]
        RETURNED = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"LABEL_PRINTED")]
        LABEL_PRINTED = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"ERROR")]
        ERROR = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"UNCONFIRMED")]
        UNCONFIRMED = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"PICKUP_FAILED")]
        PICKUP_FAILED = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"DELIVERY_DELAYED")]
        DELIVERY_DELAYED = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"DELIVERY_SCHEDULED")]
        DELIVERY_SCHEDULED = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"DELIVERY_FAILED")]
        DELIVERY_FAILED = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"INRETURN")]
        INRETURN = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"IN_PROCESS")]
        IN_PROCESS = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"NEW")]
        NEW = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"VOID")]
        VOID = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"PROCESSED")]
        PROCESSED = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_SHIPPED")]
        NOT_SHIPPED = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETED")]
        COMPLETED = 22,

    }

    /// <summary>
    /// The carrier for the shipment. Some carriers have a global version as well as local subsidiaries. The subsidiaries are repeated over many countries and might also have an entry in the global list. Choose the carrier for your country. If the carrier is not available for your country, choose the global version of the carrier. If your carrier name is not in the list, set `carrier` to `OTHER` and set carrier name in `carrier_name_other`. For allowed values, see &lt;a href="/docs/tracking/reference/carriers/"&gt;Carriers&lt;/a&gt;.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Shipment_carrier
    {

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_RU")]
        DPD_RU = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"BG_BULGARIAN_POST")]
        BG_BULGARIAN_POST = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"KR_KOREA_POST")]
        KR_KOREA_POST = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"ZA_COURIERIT")]
        ZA_COURIERIT = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"FR_EXAPAQ")]
        FR_EXAPAQ = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"ARE_EMIRATES_POST")]
        ARE_EMIRATES_POST = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"GAC")]
        GAC = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"GEIS")]
        GEIS = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"SF_EX")]
        SF_EX = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"PAGO")]
        PAGO = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"MYHERMES")]
        MYHERMES = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"DIAMOND_EUROGISTICS")]
        DIAMOND_EUROGISTICS = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"CORPORATECOURIERS_WEBHOOK")]
        CORPORATECOURIERS_WEBHOOK = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"BOND")]
        BOND = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"OMNIPARCEL")]
        OMNIPARCEL = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"SK_POSTA")]
        SK_POSTA = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"PUROLATOR")]
        PUROLATOR = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"FETCHR_WEBHOOK")]
        FETCHR_WEBHOOK = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"THEDELIVERYGROUP")]
        THEDELIVERYGROUP = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"CELLO_SQUARE")]
        CELLO_SQUARE = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"TARRIVE")]
        TARRIVE = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"COLLIVERY")]
        COLLIVERY = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"MAINFREIGHT")]
        MAINFREIGHT = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"IND_FIRSTFLIGHT")]
        IND_FIRSTFLIGHT = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"ACSWORLDWIDE")]
        ACSWORLDWIDE = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"AMSTAN")]
        AMSTAN = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"OKAYPARCEL")]
        OKAYPARCEL = 26,

        [System.Runtime.Serialization.EnumMember(Value = @"ENVIALIA_REFERENCE")]
        ENVIALIA_REFERENCE = 27,

        [System.Runtime.Serialization.EnumMember(Value = @"SEUR_ES")]
        SEUR_ES = 28,

        [System.Runtime.Serialization.EnumMember(Value = @"CONTINENTAL")]
        CONTINENTAL = 29,

        [System.Runtime.Serialization.EnumMember(Value = @"FDSEXPRESS")]
        FDSEXPRESS = 30,

        [System.Runtime.Serialization.EnumMember(Value = @"AMAZON_FBA_SWISHIP")]
        AMAZON_FBA_SWISHIP = 31,

        [System.Runtime.Serialization.EnumMember(Value = @"WYNGS")]
        WYNGS = 32,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_ACTIVE_TRACING")]
        DHL_ACTIVE_TRACING = 33,

        [System.Runtime.Serialization.EnumMember(Value = @"ZYLLEM")]
        ZYLLEM = 34,

        [System.Runtime.Serialization.EnumMember(Value = @"RUSTON")]
        RUSTON = 35,

        [System.Runtime.Serialization.EnumMember(Value = @"XPOST")]
        XPOST = 36,

        [System.Runtime.Serialization.EnumMember(Value = @"CORREOS_ES")]
        CORREOS_ES = 37,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_FR")]
        DHL_FR = 38,

        [System.Runtime.Serialization.EnumMember(Value = @"PAN_ASIA")]
        PAN_ASIA = 39,

        [System.Runtime.Serialization.EnumMember(Value = @"BRT_IT")]
        BRT_IT = 40,

        [System.Runtime.Serialization.EnumMember(Value = @"SRE_KOREA")]
        SRE_KOREA = 41,

        [System.Runtime.Serialization.EnumMember(Value = @"SPEEDEE")]
        SPEEDEE = 42,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_UK")]
        TNT_UK = 43,

        [System.Runtime.Serialization.EnumMember(Value = @"VENIPAK")]
        VENIPAK = 44,

        [System.Runtime.Serialization.EnumMember(Value = @"SHREENANDANCOURIER")]
        SHREENANDANCOURIER = 45,

        [System.Runtime.Serialization.EnumMember(Value = @"CROSHOT")]
        CROSHOT = 46,

        [System.Runtime.Serialization.EnumMember(Value = @"NIPOST_NG")]
        NIPOST_NG = 47,

        [System.Runtime.Serialization.EnumMember(Value = @"EPST_GLBL")]
        EPST_GLBL = 48,

        [System.Runtime.Serialization.EnumMember(Value = @"NEWGISTICS")]
        NEWGISTICS = 49,

        [System.Runtime.Serialization.EnumMember(Value = @"POST_SLOVENIA")]
        POST_SLOVENIA = 50,

        [System.Runtime.Serialization.EnumMember(Value = @"JERSEY_POST")]
        JERSEY_POST = 51,

        [System.Runtime.Serialization.EnumMember(Value = @"BOMBINOEXP")]
        BOMBINOEXP = 52,

        [System.Runtime.Serialization.EnumMember(Value = @"WMG")]
        WMG = 53,

        [System.Runtime.Serialization.EnumMember(Value = @"XQ_EXPRESS")]
        XQ_EXPRESS = 54,

        [System.Runtime.Serialization.EnumMember(Value = @"FURDECO")]
        FURDECO = 55,

        [System.Runtime.Serialization.EnumMember(Value = @"LHT_EXPRESS")]
        LHT_EXPRESS = 56,

        [System.Runtime.Serialization.EnumMember(Value = @"SOUTH_AFRICAN_POST_OFFICE")]
        SOUTH_AFRICAN_POST_OFFICE = 57,

        [System.Runtime.Serialization.EnumMember(Value = @"SPOTON")]
        SPOTON = 58,

        [System.Runtime.Serialization.EnumMember(Value = @"DIMERCO")]
        DIMERCO = 59,

        [System.Runtime.Serialization.EnumMember(Value = @"CYPRUS_POST_CYP")]
        CYPRUS_POST_CYP = 60,

        [System.Runtime.Serialization.EnumMember(Value = @"ABCUSTOM")]
        ABCUSTOM = 61,

        [System.Runtime.Serialization.EnumMember(Value = @"IND_DELIVREE")]
        IND_DELIVREE = 62,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_BESTEXPRESS")]
        CN_BESTEXPRESS = 63,

        [System.Runtime.Serialization.EnumMember(Value = @"DX_SFTP")]
        DX_SFTP = 64,

        [System.Runtime.Serialization.EnumMember(Value = @"PICKUPP_MYS")]
        PICKUPP_MYS = 65,

        [System.Runtime.Serialization.EnumMember(Value = @"FMX")]
        FMX = 66,

        [System.Runtime.Serialization.EnumMember(Value = @"HELLMANN")]
        HELLMANN = 67,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIP_IT_ASIA")]
        SHIP_IT_ASIA = 68,

        [System.Runtime.Serialization.EnumMember(Value = @"KERRY_ECOMMERCE")]
        KERRY_ECOMMERCE = 69,

        [System.Runtime.Serialization.EnumMember(Value = @"FRETERAPIDO")]
        FRETERAPIDO = 70,

        [System.Runtime.Serialization.EnumMember(Value = @"PITNEY_BOWES")]
        PITNEY_BOWES = 71,

        [System.Runtime.Serialization.EnumMember(Value = @"XPRESSEN_DK")]
        XPRESSEN_DK = 72,

        [System.Runtime.Serialization.EnumMember(Value = @"SEUR_SP_API")]
        SEUR_SP_API = 73,

        [System.Runtime.Serialization.EnumMember(Value = @"DELIVERYONTIME")]
        DELIVERYONTIME = 74,

        [System.Runtime.Serialization.EnumMember(Value = @"JINSUNG")]
        JINSUNG = 75,

        [System.Runtime.Serialization.EnumMember(Value = @"TRANS_KARGO")]
        TRANS_KARGO = 76,

        [System.Runtime.Serialization.EnumMember(Value = @"SWISHIP_DE")]
        SWISHIP_DE = 77,

        [System.Runtime.Serialization.EnumMember(Value = @"IVOY_WEBHOOK")]
        IVOY_WEBHOOK = 78,

        [System.Runtime.Serialization.EnumMember(Value = @"AIRMEE_WEBHOOK")]
        AIRMEE_WEBHOOK = 79,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_BENELUX")]
        DHL_BENELUX = 80,

        [System.Runtime.Serialization.EnumMember(Value = @"FIRSTMILE")]
        FIRSTMILE = 81,

        [System.Runtime.Serialization.EnumMember(Value = @"FASTWAY_IR")]
        FASTWAY_IR = 82,

        [System.Runtime.Serialization.EnumMember(Value = @"HH_EXP")]
        HH_EXP = 83,

        [System.Runtime.Serialization.EnumMember(Value = @"MYS_MYPOST_ONLINE")]
        MYS_MYPOST_ONLINE = 84,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_NL")]
        TNT_NL = 85,

        [System.Runtime.Serialization.EnumMember(Value = @"TIPSA")]
        TIPSA = 86,

        [System.Runtime.Serialization.EnumMember(Value = @"TAQBIN_MY")]
        TAQBIN_MY = 87,

        [System.Runtime.Serialization.EnumMember(Value = @"KGMHUB")]
        KGMHUB = 88,

        [System.Runtime.Serialization.EnumMember(Value = @"INTEXPRESS")]
        INTEXPRESS = 89,

        [System.Runtime.Serialization.EnumMember(Value = @"OVERSE_EXP")]
        OVERSE_EXP = 90,

        [System.Runtime.Serialization.EnumMember(Value = @"ONECLICK")]
        ONECLICK = 91,

        [System.Runtime.Serialization.EnumMember(Value = @"ROADRUNNER_FREIGHT")]
        ROADRUNNER_FREIGHT = 92,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS_CROTIA")]
        GLS_CROTIA = 93,

        [System.Runtime.Serialization.EnumMember(Value = @"MRW_FTP")]
        MRW_FTP = 94,

        [System.Runtime.Serialization.EnumMember(Value = @"BLUEX")]
        BLUEX = 95,

        [System.Runtime.Serialization.EnumMember(Value = @"DYLT")]
        DYLT = 96,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_IR")]
        DPD_IR = 97,

        [System.Runtime.Serialization.EnumMember(Value = @"SIN_GLBL")]
        SIN_GLBL = 98,

        [System.Runtime.Serialization.EnumMember(Value = @"TUFFNELLS_REFERENCE")]
        TUFFNELLS_REFERENCE = 99,

        [System.Runtime.Serialization.EnumMember(Value = @"CJPACKET")]
        CJPACKET = 100,

        [System.Runtime.Serialization.EnumMember(Value = @"MILKMAN")]
        MILKMAN = 101,

        [System.Runtime.Serialization.EnumMember(Value = @"ASIGNA")]
        ASIGNA = 102,

        [System.Runtime.Serialization.EnumMember(Value = @"ONEWORLDEXPRESS")]
        ONEWORLDEXPRESS = 103,

        [System.Runtime.Serialization.EnumMember(Value = @"ROYAL_MAIL")]
        ROYAL_MAIL = 104,

        [System.Runtime.Serialization.EnumMember(Value = @"VIA_EXPRESS")]
        VIA_EXPRESS = 105,

        [System.Runtime.Serialization.EnumMember(Value = @"TIGFREIGHT")]
        TIGFREIGHT = 106,

        [System.Runtime.Serialization.EnumMember(Value = @"ZTO_EXPRESS")]
        ZTO_EXPRESS = 107,

        [System.Runtime.Serialization.EnumMember(Value = @"TWO_GO")]
        TWO_GO = 108,

        [System.Runtime.Serialization.EnumMember(Value = @"IML")]
        IML = 109,

        [System.Runtime.Serialization.EnumMember(Value = @"INTEL_VALLEY")]
        INTEL_VALLEY = 110,

        [System.Runtime.Serialization.EnumMember(Value = @"EFS")]
        EFS = 111,

        [System.Runtime.Serialization.EnumMember(Value = @"UK_UK_MAIL")]
        UK_UK_MAIL = 112,

        [System.Runtime.Serialization.EnumMember(Value = @"RAM")]
        RAM = 113,

        [System.Runtime.Serialization.EnumMember(Value = @"ALLIEDEXPRESS")]
        ALLIEDEXPRESS = 114,

        [System.Runtime.Serialization.EnumMember(Value = @"APC_OVERNIGHT")]
        APC_OVERNIGHT = 115,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPPIT")]
        SHIPPIT = 116,

        [System.Runtime.Serialization.EnumMember(Value = @"TFM")]
        TFM = 117,

        [System.Runtime.Serialization.EnumMember(Value = @"M_XPRESS")]
        M_XPRESS = 118,

        [System.Runtime.Serialization.EnumMember(Value = @"HDB_BOX")]
        HDB_BOX = 119,

        [System.Runtime.Serialization.EnumMember(Value = @"CLEVY_LINKS")]
        CLEVY_LINKS = 120,

        [System.Runtime.Serialization.EnumMember(Value = @"IBEONE")]
        IBEONE = 121,

        [System.Runtime.Serialization.EnumMember(Value = @"FIEGE_NL")]
        FIEGE_NL = 122,

        [System.Runtime.Serialization.EnumMember(Value = @"KWE_GLOBAL")]
        KWE_GLOBAL = 123,

        [System.Runtime.Serialization.EnumMember(Value = @"CTC_EXPRESS")]
        CTC_EXPRESS = 124,

        [System.Runtime.Serialization.EnumMember(Value = @"LAO_POST")]
        LAO_POST = 125,

        [System.Runtime.Serialization.EnumMember(Value = @"AMAZON")]
        AMAZON = 126,

        [System.Runtime.Serialization.EnumMember(Value = @"MORE_LINK")]
        MORE_LINK = 127,

        [System.Runtime.Serialization.EnumMember(Value = @"JX")]
        JX = 128,

        [System.Runtime.Serialization.EnumMember(Value = @"EASY_MAIL")]
        EASY_MAIL = 129,

        [System.Runtime.Serialization.EnumMember(Value = @"ADUIEPYLE")]
        ADUIEPYLE = 130,

        [System.Runtime.Serialization.EnumMember(Value = @"GB_PANTHER")]
        GB_PANTHER = 131,

        [System.Runtime.Serialization.EnumMember(Value = @"EXPRESSSALE")]
        EXPRESSSALE = 132,

        [System.Runtime.Serialization.EnumMember(Value = @"SG_DETRACK")]
        SG_DETRACK = 133,

        [System.Runtime.Serialization.EnumMember(Value = @"TRUNKRS_WEBHOOK")]
        TRUNKRS_WEBHOOK = 134,

        [System.Runtime.Serialization.EnumMember(Value = @"MATDESPATCH")]
        MATDESPATCH = 135,

        [System.Runtime.Serialization.EnumMember(Value = @"DICOM")]
        DICOM = 136,

        [System.Runtime.Serialization.EnumMember(Value = @"MBW")]
        MBW = 137,

        [System.Runtime.Serialization.EnumMember(Value = @"KHM_CAMBODIA_POST")]
        KHM_CAMBODIA_POST = 138,

        [System.Runtime.Serialization.EnumMember(Value = @"SINOTRANS")]
        SINOTRANS = 139,

        [System.Runtime.Serialization.EnumMember(Value = @"BRT_IT_PARCELID")]
        BRT_IT_PARCELID = 140,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_SUPPLY_CHAIN")]
        DHL_SUPPLY_CHAIN = 141,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_PL")]
        DHL_PL = 142,

        [System.Runtime.Serialization.EnumMember(Value = @"TOPYOU")]
        TOPYOU = 143,

        [System.Runtime.Serialization.EnumMember(Value = @"PALEXPRESS")]
        PALEXPRESS = 144,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_SG")]
        DHL_SG = 145,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_WEDO")]
        CN_WEDO = 146,

        [System.Runtime.Serialization.EnumMember(Value = @"FULFILLME")]
        FULFILLME = 147,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_DELISTRACK")]
        DPD_DELISTRACK = 148,

        [System.Runtime.Serialization.EnumMember(Value = @"UPS_REFERENCE")]
        UPS_REFERENCE = 149,

        [System.Runtime.Serialization.EnumMember(Value = @"CARIBOU")]
        CARIBOU = 150,

        [System.Runtime.Serialization.EnumMember(Value = @"LOCUS_WEBHOOK")]
        LOCUS_WEBHOOK = 151,

        [System.Runtime.Serialization.EnumMember(Value = @"DSV")]
        DSV = 152,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_GOFLY")]
        CN_GOFLY = 153,

        [System.Runtime.Serialization.EnumMember(Value = @"P2P_TRC")]
        P2P_TRC = 154,

        [System.Runtime.Serialization.EnumMember(Value = @"DIRECTPARCELS")]
        DIRECTPARCELS = 155,

        [System.Runtime.Serialization.EnumMember(Value = @"NOVA_POSHTA_INT")]
        NOVA_POSHTA_INT = 156,

        [System.Runtime.Serialization.EnumMember(Value = @"FEDEX_POLAND")]
        FEDEX_POLAND = 157,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_JCEX")]
        CN_JCEX = 158,

        [System.Runtime.Serialization.EnumMember(Value = @"FAR_INTERNATIONAL")]
        FAR_INTERNATIONAL = 159,

        [System.Runtime.Serialization.EnumMember(Value = @"IDEXPRESS")]
        IDEXPRESS = 160,

        [System.Runtime.Serialization.EnumMember(Value = @"GANGBAO")]
        GANGBAO = 161,

        [System.Runtime.Serialization.EnumMember(Value = @"NEWAY")]
        NEWAY = 162,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTNL_INT_3_S")]
        POSTNL_INT_3_S = 163,

        [System.Runtime.Serialization.EnumMember(Value = @"RPX_ID")]
        RPX_ID = 164,

        [System.Runtime.Serialization.EnumMember(Value = @"DESIGNERTRANSPORT_WEBHOOK")]
        DESIGNERTRANSPORT_WEBHOOK = 165,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS_SLOVEN")]
        GLS_SLOVEN = 166,

        [System.Runtime.Serialization.EnumMember(Value = @"PARCELLED_IN")]
        PARCELLED_IN = 167,

        [System.Runtime.Serialization.EnumMember(Value = @"GSI_EXPRESS")]
        GSI_EXPRESS = 168,

        [System.Runtime.Serialization.EnumMember(Value = @"CON_WAY")]
        CON_WAY = 169,

        [System.Runtime.Serialization.EnumMember(Value = @"BROUWER_TRANSPORT")]
        BROUWER_TRANSPORT = 170,

        [System.Runtime.Serialization.EnumMember(Value = @"CPEX")]
        CPEX = 171,

        [System.Runtime.Serialization.EnumMember(Value = @"ISRAEL_POST")]
        ISRAEL_POST = 172,

        [System.Runtime.Serialization.EnumMember(Value = @"DTDC_IN")]
        DTDC_IN = 173,

        [System.Runtime.Serialization.EnumMember(Value = @"PTT_POST")]
        PTT_POST = 174,

        [System.Runtime.Serialization.EnumMember(Value = @"XDE_WEBHOOK")]
        XDE_WEBHOOK = 175,

        [System.Runtime.Serialization.EnumMember(Value = @"TOLOS")]
        TOLOS = 176,

        [System.Runtime.Serialization.EnumMember(Value = @"GIAO_HANG")]
        GIAO_HANG = 177,

        [System.Runtime.Serialization.EnumMember(Value = @"GEODIS_ESPACE")]
        GEODIS_ESPACE = 178,

        [System.Runtime.Serialization.EnumMember(Value = @"MAGYAR_HU")]
        MAGYAR_HU = 179,

        [System.Runtime.Serialization.EnumMember(Value = @"DOORDASH_WEBHOOK")]
        DOORDASH_WEBHOOK = 180,

        [System.Runtime.Serialization.EnumMember(Value = @"TIKI_ID")]
        TIKI_ID = 181,

        [System.Runtime.Serialization.EnumMember(Value = @"CJ_HK_INTERNATIONAL")]
        CJ_HK_INTERNATIONAL = 182,

        [System.Runtime.Serialization.EnumMember(Value = @"STAR_TRACK_EXPRESS")]
        STAR_TRACK_EXPRESS = 183,

        [System.Runtime.Serialization.EnumMember(Value = @"HELTHJEM")]
        HELTHJEM = 184,

        [System.Runtime.Serialization.EnumMember(Value = @"SFB2C")]
        SFB2C = 185,

        [System.Runtime.Serialization.EnumMember(Value = @"FREIGHTQUOTE")]
        FREIGHTQUOTE = 186,

        [System.Runtime.Serialization.EnumMember(Value = @"LANDMARK_GLOBAL_REFERENCE")]
        LANDMARK_GLOBAL_REFERENCE = 187,

        [System.Runtime.Serialization.EnumMember(Value = @"PARCEL2GO")]
        PARCEL2GO = 188,

        [System.Runtime.Serialization.EnumMember(Value = @"DELNEXT")]
        DELNEXT = 189,

        [System.Runtime.Serialization.EnumMember(Value = @"RCL")]
        RCL = 190,

        [System.Runtime.Serialization.EnumMember(Value = @"CGS_EXPRESS")]
        CGS_EXPRESS = 191,

        [System.Runtime.Serialization.EnumMember(Value = @"HK_POST")]
        HK_POST = 192,

        [System.Runtime.Serialization.EnumMember(Value = @"SAP_EXPRESS")]
        SAP_EXPRESS = 193,

        [System.Runtime.Serialization.EnumMember(Value = @"PARCELPOST_SG")]
        PARCELPOST_SG = 194,

        [System.Runtime.Serialization.EnumMember(Value = @"HERMES")]
        HERMES = 195,

        [System.Runtime.Serialization.EnumMember(Value = @"IND_SAFEEXPRESS")]
        IND_SAFEEXPRESS = 196,

        [System.Runtime.Serialization.EnumMember(Value = @"TOPHATTEREXPRESS")]
        TOPHATTEREXPRESS = 197,

        [System.Runtime.Serialization.EnumMember(Value = @"MGLOBAL")]
        MGLOBAL = 198,

        [System.Runtime.Serialization.EnumMember(Value = @"AVERITT")]
        AVERITT = 199,

        [System.Runtime.Serialization.EnumMember(Value = @"LEADER")]
        LEADER = 200,

        [System.Runtime.Serialization.EnumMember(Value = @"_2EBOX")]
        _2EBOX = 201,

        [System.Runtime.Serialization.EnumMember(Value = @"SG_SPEEDPOST")]
        SG_SPEEDPOST = 202,

        [System.Runtime.Serialization.EnumMember(Value = @"DBSCHENKER_SE")]
        DBSCHENKER_SE = 203,

        [System.Runtime.Serialization.EnumMember(Value = @"ISR_POST_DOMESTIC")]
        ISR_POST_DOMESTIC = 204,

        [System.Runtime.Serialization.EnumMember(Value = @"BESTWAYPARCEL")]
        BESTWAYPARCEL = 205,

        [System.Runtime.Serialization.EnumMember(Value = @"ASENDIA_DE")]
        ASENDIA_DE = 206,

        [System.Runtime.Serialization.EnumMember(Value = @"NIGHTLINE_UK")]
        NIGHTLINE_UK = 207,

        [System.Runtime.Serialization.EnumMember(Value = @"TAQBIN_SG")]
        TAQBIN_SG = 208,

        [System.Runtime.Serialization.EnumMember(Value = @"TCK_EXPRESS")]
        TCK_EXPRESS = 209,

        [System.Runtime.Serialization.EnumMember(Value = @"ENDEAVOUR_DELIVERY")]
        ENDEAVOUR_DELIVERY = 210,

        [System.Runtime.Serialization.EnumMember(Value = @"NANJINGWOYUAN")]
        NANJINGWOYUAN = 211,

        [System.Runtime.Serialization.EnumMember(Value = @"HEPPNER_FR")]
        HEPPNER_FR = 212,

        [System.Runtime.Serialization.EnumMember(Value = @"EMPS_CN")]
        EMPS_CN = 213,

        [System.Runtime.Serialization.EnumMember(Value = @"FONSEN")]
        FONSEN = 214,

        [System.Runtime.Serialization.EnumMember(Value = @"PICKRR")]
        PICKRR = 215,

        [System.Runtime.Serialization.EnumMember(Value = @"APC_OVERNIGHT_CONNUM")]
        APC_OVERNIGHT_CONNUM = 216,

        [System.Runtime.Serialization.EnumMember(Value = @"STAR_TRACK_NEXT_FLIGHT")]
        STAR_TRACK_NEXT_FLIGHT = 217,

        [System.Runtime.Serialization.EnumMember(Value = @"DAJIN")]
        DAJIN = 218,

        [System.Runtime.Serialization.EnumMember(Value = @"UPS_FREIGHT")]
        UPS_FREIGHT = 219,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTA_PLUS")]
        POSTA_PLUS = 220,

        [System.Runtime.Serialization.EnumMember(Value = @"CEVA")]
        CEVA = 221,

        [System.Runtime.Serialization.EnumMember(Value = @"ANSERX")]
        ANSERX = 222,

        [System.Runtime.Serialization.EnumMember(Value = @"JS_EXPRESS")]
        JS_EXPRESS = 223,

        [System.Runtime.Serialization.EnumMember(Value = @"PADTF")]
        PADTF = 224,

        [System.Runtime.Serialization.EnumMember(Value = @"UPS_MAIL_INNOVATIONS")]
        UPS_MAIL_INNOVATIONS = 225,

        [System.Runtime.Serialization.EnumMember(Value = @"EZSHIP")]
        EZSHIP = 226,

        [System.Runtime.Serialization.EnumMember(Value = @"SYPOST")]
        SYPOST = 227,

        [System.Runtime.Serialization.EnumMember(Value = @"AMAZON_SHIP_MCF")]
        AMAZON_SHIP_MCF = 228,

        [System.Runtime.Serialization.EnumMember(Value = @"YUSEN")]
        YUSEN = 229,

        [System.Runtime.Serialization.EnumMember(Value = @"BRING")]
        BRING = 230,

        [System.Runtime.Serialization.EnumMember(Value = @"SDA_IT")]
        SDA_IT = 231,

        [System.Runtime.Serialization.EnumMember(Value = @"GBA")]
        GBA = 232,

        [System.Runtime.Serialization.EnumMember(Value = @"NEWEGGEXPRESS")]
        NEWEGGEXPRESS = 233,

        [System.Runtime.Serialization.EnumMember(Value = @"SPEEDCOURIERS_GR")]
        SPEEDCOURIERS_GR = 234,

        [System.Runtime.Serialization.EnumMember(Value = @"FORRUN")]
        FORRUN = 235,

        [System.Runtime.Serialization.EnumMember(Value = @"PICKUP")]
        PICKUP = 236,

        [System.Runtime.Serialization.EnumMember(Value = @"ECMS")]
        ECMS = 237,

        [System.Runtime.Serialization.EnumMember(Value = @"INTELIPOST")]
        INTELIPOST = 238,

        [System.Runtime.Serialization.EnumMember(Value = @"FLASHEXPRESS")]
        FLASHEXPRESS = 239,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_STO")]
        CN_STO = 240,

        [System.Runtime.Serialization.EnumMember(Value = @"SEKO_SFTP")]
        SEKO_SFTP = 241,

        [System.Runtime.Serialization.EnumMember(Value = @"HOME_DELIVERY_SOLUTIONS")]
        HOME_DELIVERY_SOLUTIONS = 242,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_HGRY")]
        DPD_HGRY = 243,

        [System.Runtime.Serialization.EnumMember(Value = @"KERRYTTC_VN")]
        KERRYTTC_VN = 244,

        [System.Runtime.Serialization.EnumMember(Value = @"JOYING_BOX")]
        JOYING_BOX = 245,

        [System.Runtime.Serialization.EnumMember(Value = @"TOTAL_EXPRESS")]
        TOTAL_EXPRESS = 246,

        [System.Runtime.Serialization.EnumMember(Value = @"ZJS_EXPRESS")]
        ZJS_EXPRESS = 247,

        [System.Runtime.Serialization.EnumMember(Value = @"STARKEN")]
        STARKEN = 248,

        [System.Runtime.Serialization.EnumMember(Value = @"DEMANDSHIP")]
        DEMANDSHIP = 249,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_DPEX")]
        CN_DPEX = 250,

        [System.Runtime.Serialization.EnumMember(Value = @"AUPOST_CN")]
        AUPOST_CN = 251,

        [System.Runtime.Serialization.EnumMember(Value = @"LOGISTERS")]
        LOGISTERS = 252,

        [System.Runtime.Serialization.EnumMember(Value = @"GOGLOBALPOST")]
        GOGLOBALPOST = 253,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS_CZ")]
        GLS_CZ = 254,

        [System.Runtime.Serialization.EnumMember(Value = @"PAACK_WEBHOOK")]
        PAACK_WEBHOOK = 255,

        [System.Runtime.Serialization.EnumMember(Value = @"GRAB_WEBHOOK")]
        GRAB_WEBHOOK = 256,

        [System.Runtime.Serialization.EnumMember(Value = @"PARCELPOINT")]
        PARCELPOINT = 257,

        [System.Runtime.Serialization.EnumMember(Value = @"ICUMULUS")]
        ICUMULUS = 258,

        [System.Runtime.Serialization.EnumMember(Value = @"DAIGLOBALTRACK")]
        DAIGLOBALTRACK = 259,

        [System.Runtime.Serialization.EnumMember(Value = @"GLOBAL_IPARCEL")]
        GLOBAL_IPARCEL = 260,

        [System.Runtime.Serialization.EnumMember(Value = @"YURTICI_KARGO")]
        YURTICI_KARGO = 261,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_PAYPAL_PACKAGE")]
        CN_PAYPAL_PACKAGE = 262,

        [System.Runtime.Serialization.EnumMember(Value = @"PARCEL_2_POST")]
        PARCEL_2_POST = 263,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS_IT")]
        GLS_IT = 264,

        [System.Runtime.Serialization.EnumMember(Value = @"PIL_LOGISTICS")]
        PIL_LOGISTICS = 265,

        [System.Runtime.Serialization.EnumMember(Value = @"HEPPNER")]
        HEPPNER = 266,

        [System.Runtime.Serialization.EnumMember(Value = @"GENERAL_OVERNIGHT")]
        GENERAL_OVERNIGHT = 267,

        [System.Runtime.Serialization.EnumMember(Value = @"HAPPY2POINT")]
        HAPPY2POINT = 268,

        [System.Runtime.Serialization.EnumMember(Value = @"CHITCHATS")]
        CHITCHATS = 269,

        [System.Runtime.Serialization.EnumMember(Value = @"SMOOTH")]
        SMOOTH = 270,

        [System.Runtime.Serialization.EnumMember(Value = @"CLE_LOGISTICS")]
        CLE_LOGISTICS = 271,

        [System.Runtime.Serialization.EnumMember(Value = @"FIEGE")]
        FIEGE = 272,

        [System.Runtime.Serialization.EnumMember(Value = @"MX_CARGO")]
        MX_CARGO = 273,

        [System.Runtime.Serialization.EnumMember(Value = @"ZIINGFINALMILE")]
        ZIINGFINALMILE = 274,

        [System.Runtime.Serialization.EnumMember(Value = @"DAYTON_FREIGHT")]
        DAYTON_FREIGHT = 275,

        [System.Runtime.Serialization.EnumMember(Value = @"TCS")]
        TCS = 276,

        [System.Runtime.Serialization.EnumMember(Value = @"AEX")]
        AEX = 277,

        [System.Runtime.Serialization.EnumMember(Value = @"HERMES_DE")]
        HERMES_DE = 278,

        [System.Runtime.Serialization.EnumMember(Value = @"ROUTIFIC_WEBHOOK")]
        ROUTIFIC_WEBHOOK = 279,

        [System.Runtime.Serialization.EnumMember(Value = @"GLOBAVEND")]
        GLOBAVEND = 280,

        [System.Runtime.Serialization.EnumMember(Value = @"CJ_LOGISTICS")]
        CJ_LOGISTICS = 281,

        [System.Runtime.Serialization.EnumMember(Value = @"PALLET_NETWORK")]
        PALLET_NETWORK = 282,

        [System.Runtime.Serialization.EnumMember(Value = @"RAF_PH")]
        RAF_PH = 283,

        [System.Runtime.Serialization.EnumMember(Value = @"UK_XDP")]
        UK_XDP = 284,

        [System.Runtime.Serialization.EnumMember(Value = @"PAPER_EXPRESS")]
        PAPER_EXPRESS = 285,

        [System.Runtime.Serialization.EnumMember(Value = @"LA_POSTE_SUIVI")]
        LA_POSTE_SUIVI = 286,

        [System.Runtime.Serialization.EnumMember(Value = @"PAQUETEXPRESS")]
        PAQUETEXPRESS = 287,

        [System.Runtime.Serialization.EnumMember(Value = @"LIEFERY")]
        LIEFERY = 288,

        [System.Runtime.Serialization.EnumMember(Value = @"STRECK_TRANSPORT")]
        STRECK_TRANSPORT = 289,

        [System.Runtime.Serialization.EnumMember(Value = @"PONY_EXPRESS")]
        PONY_EXPRESS = 290,

        [System.Runtime.Serialization.EnumMember(Value = @"ALWAYS_EXPRESS")]
        ALWAYS_EXPRESS = 291,

        [System.Runtime.Serialization.EnumMember(Value = @"GBS_BROKER")]
        GBS_BROKER = 292,

        [System.Runtime.Serialization.EnumMember(Value = @"CITYLINK_MY")]
        CITYLINK_MY = 293,

        [System.Runtime.Serialization.EnumMember(Value = @"ALLJOY")]
        ALLJOY = 294,

        [System.Runtime.Serialization.EnumMember(Value = @"YODEL")]
        YODEL = 295,

        [System.Runtime.Serialization.EnumMember(Value = @"YODEL_DIR")]
        YODEL_DIR = 296,

        [System.Runtime.Serialization.EnumMember(Value = @"STONE3PL")]
        STONE3PL = 297,

        [System.Runtime.Serialization.EnumMember(Value = @"PARCELPAL_WEBHOOK")]
        PARCELPAL_WEBHOOK = 298,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_ECOMERCE_ASA")]
        DHL_ECOMERCE_ASA = 299,

        [System.Runtime.Serialization.EnumMember(Value = @"SIMPLYPOST")]
        SIMPLYPOST = 300,

        [System.Runtime.Serialization.EnumMember(Value = @"KY_EXPRESS")]
        KY_EXPRESS = 301,

        [System.Runtime.Serialization.EnumMember(Value = @"SHENZHEN")]
        SHENZHEN = 302,

        [System.Runtime.Serialization.EnumMember(Value = @"US_LASERSHIP")]
        US_LASERSHIP = 303,

        [System.Runtime.Serialization.EnumMember(Value = @"UC_EXPRE")]
        UC_EXPRE = 304,

        [System.Runtime.Serialization.EnumMember(Value = @"DIDADI")]
        DIDADI = 305,

        [System.Runtime.Serialization.EnumMember(Value = @"CJ_KR")]
        CJ_KR = 306,

        [System.Runtime.Serialization.EnumMember(Value = @"DBSCHENKER_B2B")]
        DBSCHENKER_B2B = 307,

        [System.Runtime.Serialization.EnumMember(Value = @"MXE")]
        MXE = 308,

        [System.Runtime.Serialization.EnumMember(Value = @"CAE_DELIVERS")]
        CAE_DELIVERS = 309,

        [System.Runtime.Serialization.EnumMember(Value = @"PFCEXPRESS")]
        PFCEXPRESS = 310,

        [System.Runtime.Serialization.EnumMember(Value = @"WHISTL")]
        WHISTL = 311,

        [System.Runtime.Serialization.EnumMember(Value = @"WEPOST")]
        WEPOST = 312,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_PARCEL_ES")]
        DHL_PARCEL_ES = 313,

        [System.Runtime.Serialization.EnumMember(Value = @"DDEXPRESS")]
        DDEXPRESS = 314,

        [System.Runtime.Serialization.EnumMember(Value = @"ARAMEX_AU")]
        ARAMEX_AU = 315,

        [System.Runtime.Serialization.EnumMember(Value = @"BNEED")]
        BNEED = 316,

        [System.Runtime.Serialization.EnumMember(Value = @"HK_TGX")]
        HK_TGX = 317,

        [System.Runtime.Serialization.EnumMember(Value = @"LATVIJAS_PASTS")]
        LATVIJAS_PASTS = 318,

        [System.Runtime.Serialization.EnumMember(Value = @"VIAEUROPE")]
        VIAEUROPE = 319,

        [System.Runtime.Serialization.EnumMember(Value = @"CORREO_UY")]
        CORREO_UY = 320,

        [System.Runtime.Serialization.EnumMember(Value = @"CHRONOPOST_FR")]
        CHRONOPOST_FR = 321,

        [System.Runtime.Serialization.EnumMember(Value = @"J_NET")]
        J_NET = 322,

        [System.Runtime.Serialization.EnumMember(Value = @"_6LS")]
        _6LS = 323,

        [System.Runtime.Serialization.EnumMember(Value = @"BLR_BELPOST")]
        BLR_BELPOST = 324,

        [System.Runtime.Serialization.EnumMember(Value = @"BIRDSYSTEM")]
        BIRDSYSTEM = 325,

        [System.Runtime.Serialization.EnumMember(Value = @"DOBROPOST")]
        DOBROPOST = 326,

        [System.Runtime.Serialization.EnumMember(Value = @"WAHANA_ID")]
        WAHANA_ID = 327,

        [System.Runtime.Serialization.EnumMember(Value = @"WEASHIP")]
        WEASHIP = 328,

        [System.Runtime.Serialization.EnumMember(Value = @"SONICTL")]
        SONICTL = 329,

        [System.Runtime.Serialization.EnumMember(Value = @"KWT")]
        KWT = 330,

        [System.Runtime.Serialization.EnumMember(Value = @"AFLLOG_FTP")]
        AFLLOG_FTP = 331,

        [System.Runtime.Serialization.EnumMember(Value = @"SKYNET_WORLDWIDE")]
        SKYNET_WORLDWIDE = 332,

        [System.Runtime.Serialization.EnumMember(Value = @"NOVA_POSHTA")]
        NOVA_POSHTA = 333,

        [System.Runtime.Serialization.EnumMember(Value = @"SEINO")]
        SEINO = 334,

        [System.Runtime.Serialization.EnumMember(Value = @"SZENDEX")]
        SZENDEX = 335,

        [System.Runtime.Serialization.EnumMember(Value = @"BPOST_INT")]
        BPOST_INT = 336,

        [System.Runtime.Serialization.EnumMember(Value = @"DBSCHENKER_SV")]
        DBSCHENKER_SV = 337,

        [System.Runtime.Serialization.EnumMember(Value = @"AO_DEUTSCHLAND")]
        AO_DEUTSCHLAND = 338,

        [System.Runtime.Serialization.EnumMember(Value = @"EU_FLEET_SOLUTIONS")]
        EU_FLEET_SOLUTIONS = 339,

        [System.Runtime.Serialization.EnumMember(Value = @"PCFCORP")]
        PCFCORP = 340,

        [System.Runtime.Serialization.EnumMember(Value = @"LINKBRIDGE")]
        LINKBRIDGE = 341,

        [System.Runtime.Serialization.EnumMember(Value = @"PRIMAMULTICIPTA")]
        PRIMAMULTICIPTA = 342,

        [System.Runtime.Serialization.EnumMember(Value = @"COUREX")]
        COUREX = 343,

        [System.Runtime.Serialization.EnumMember(Value = @"ZAJIL_EXPRESS")]
        ZAJIL_EXPRESS = 344,

        [System.Runtime.Serialization.EnumMember(Value = @"COLLECTCO")]
        COLLECTCO = 345,

        [System.Runtime.Serialization.EnumMember(Value = @"JTEXPRESS")]
        JTEXPRESS = 346,

        [System.Runtime.Serialization.EnumMember(Value = @"FEDEX_UK")]
        FEDEX_UK = 347,

        [System.Runtime.Serialization.EnumMember(Value = @"USHIP")]
        USHIP = 348,

        [System.Runtime.Serialization.EnumMember(Value = @"PIXSELL")]
        PIXSELL = 349,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPTOR")]
        SHIPTOR = 350,

        [System.Runtime.Serialization.EnumMember(Value = @"CDEK")]
        CDEK = 351,

        [System.Runtime.Serialization.EnumMember(Value = @"VNM_VIETTELPOST")]
        VNM_VIETTELPOST = 352,

        [System.Runtime.Serialization.EnumMember(Value = @"CJ_CENTURY")]
        CJ_CENTURY = 353,

        [System.Runtime.Serialization.EnumMember(Value = @"GSO")]
        GSO = 354,

        [System.Runtime.Serialization.EnumMember(Value = @"VIWO")]
        VIWO = 355,

        [System.Runtime.Serialization.EnumMember(Value = @"SKYBOX")]
        SKYBOX = 356,

        [System.Runtime.Serialization.EnumMember(Value = @"KERRYTJ")]
        KERRYTJ = 357,

        [System.Runtime.Serialization.EnumMember(Value = @"NTLOGISTICS_VN")]
        NTLOGISTICS_VN = 358,

        [System.Runtime.Serialization.EnumMember(Value = @"SDH_SCM")]
        SDH_SCM = 359,

        [System.Runtime.Serialization.EnumMember(Value = @"ZINC")]
        ZINC = 360,

        [System.Runtime.Serialization.EnumMember(Value = @"DPE_SOUTH_AFRC")]
        DPE_SOUTH_AFRC = 361,

        [System.Runtime.Serialization.EnumMember(Value = @"CESKA_CZ")]
        CESKA_CZ = 362,

        [System.Runtime.Serialization.EnumMember(Value = @"ACS_GR")]
        ACS_GR = 363,

        [System.Runtime.Serialization.EnumMember(Value = @"DEALERSEND")]
        DEALERSEND = 364,

        [System.Runtime.Serialization.EnumMember(Value = @"JOCOM")]
        JOCOM = 365,

        [System.Runtime.Serialization.EnumMember(Value = @"CSE")]
        CSE = 366,

        [System.Runtime.Serialization.EnumMember(Value = @"TFORCE_FINALMILE")]
        TFORCE_FINALMILE = 367,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIP_GATE")]
        SHIP_GATE = 368,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPTER")]
        SHIPTER = 369,

        [System.Runtime.Serialization.EnumMember(Value = @"NATIONAL_SAMEDAY")]
        NATIONAL_SAMEDAY = 370,

        [System.Runtime.Serialization.EnumMember(Value = @"YUNEXPRESS")]
        YUNEXPRESS = 371,

        [System.Runtime.Serialization.EnumMember(Value = @"CAINIAO")]
        CAINIAO = 372,

        [System.Runtime.Serialization.EnumMember(Value = @"DMS_MATRIX")]
        DMS_MATRIX = 373,

        [System.Runtime.Serialization.EnumMember(Value = @"DIRECTLOG")]
        DIRECTLOG = 374,

        [System.Runtime.Serialization.EnumMember(Value = @"ASENDIA_US")]
        ASENDIA_US = 375,

        [System.Runtime.Serialization.EnumMember(Value = @"_3JMSLOGISTICS")]
        _3JMSLOGISTICS = 376,

        [System.Runtime.Serialization.EnumMember(Value = @"LICCARDI_EXPRESS")]
        LICCARDI_EXPRESS = 377,

        [System.Runtime.Serialization.EnumMember(Value = @"SKY_POSTAL")]
        SKY_POSTAL = 378,

        [System.Runtime.Serialization.EnumMember(Value = @"CNWANGTONG")]
        CNWANGTONG = 379,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTNORD_LOGISTICS_DK")]
        POSTNORD_LOGISTICS_DK = 380,

        [System.Runtime.Serialization.EnumMember(Value = @"LOGISTIKA")]
        LOGISTIKA = 381,

        [System.Runtime.Serialization.EnumMember(Value = @"CELERITAS")]
        CELERITAS = 382,

        [System.Runtime.Serialization.EnumMember(Value = @"PRESSIODE")]
        PRESSIODE = 383,

        [System.Runtime.Serialization.EnumMember(Value = @"SHREE_MARUTI")]
        SHREE_MARUTI = 384,

        [System.Runtime.Serialization.EnumMember(Value = @"LOGISTICSWORLDWIDE_HK")]
        LOGISTICSWORLDWIDE_HK = 385,

        [System.Runtime.Serialization.EnumMember(Value = @"EFEX")]
        EFEX = 386,

        [System.Runtime.Serialization.EnumMember(Value = @"LOTTE")]
        LOTTE = 387,

        [System.Runtime.Serialization.EnumMember(Value = @"LONESTAR")]
        LONESTAR = 388,

        [System.Runtime.Serialization.EnumMember(Value = @"APRISAEXPRESS")]
        APRISAEXPRESS = 389,

        [System.Runtime.Serialization.EnumMember(Value = @"BEL_RS")]
        BEL_RS = 390,

        [System.Runtime.Serialization.EnumMember(Value = @"OSM_WORLDWIDE")]
        OSM_WORLDWIDE = 391,

        [System.Runtime.Serialization.EnumMember(Value = @"WESTGATE_GL")]
        WESTGATE_GL = 392,

        [System.Runtime.Serialization.EnumMember(Value = @"FASTRACK")]
        FASTRACK = 393,

        [System.Runtime.Serialization.EnumMember(Value = @"DTD_EXPR")]
        DTD_EXPR = 394,

        [System.Runtime.Serialization.EnumMember(Value = @"ALFATREX")]
        ALFATREX = 395,

        [System.Runtime.Serialization.EnumMember(Value = @"PROMEDDELIVERY")]
        PROMEDDELIVERY = 396,

        [System.Runtime.Serialization.EnumMember(Value = @"THABIT_LOGISTICS")]
        THABIT_LOGISTICS = 397,

        [System.Runtime.Serialization.EnumMember(Value = @"HCT_LOGISTICS")]
        HCT_LOGISTICS = 398,

        [System.Runtime.Serialization.EnumMember(Value = @"CARRY_FLAP")]
        CARRY_FLAP = 399,

        [System.Runtime.Serialization.EnumMember(Value = @"US_OLD_DOMINION")]
        US_OLD_DOMINION = 400,

        [System.Runtime.Serialization.EnumMember(Value = @"ANICAM_BOX")]
        ANICAM_BOX = 401,

        [System.Runtime.Serialization.EnumMember(Value = @"WANBEXPRESS")]
        WANBEXPRESS = 402,

        [System.Runtime.Serialization.EnumMember(Value = @"AN_POST")]
        AN_POST = 403,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_LOCAL")]
        DPD_LOCAL = 404,

        [System.Runtime.Serialization.EnumMember(Value = @"STALLIONEXPRESS")]
        STALLIONEXPRESS = 405,

        [System.Runtime.Serialization.EnumMember(Value = @"RAIDEREX")]
        RAIDEREX = 406,

        [System.Runtime.Serialization.EnumMember(Value = @"SHOPFANS")]
        SHOPFANS = 407,

        [System.Runtime.Serialization.EnumMember(Value = @"KYUNGDONG_PARCEL")]
        KYUNGDONG_PARCEL = 408,

        [System.Runtime.Serialization.EnumMember(Value = @"CHAMPION_LOGISTICS")]
        CHAMPION_LOGISTICS = 409,

        [System.Runtime.Serialization.EnumMember(Value = @"PICKUPP_SGP")]
        PICKUPP_SGP = 410,

        [System.Runtime.Serialization.EnumMember(Value = @"MORNING_EXPRESS")]
        MORNING_EXPRESS = 411,

        [System.Runtime.Serialization.EnumMember(Value = @"NACEX")]
        NACEX = 412,

        [System.Runtime.Serialization.EnumMember(Value = @"THENILE_WEBHOOK")]
        THENILE_WEBHOOK = 413,

        [System.Runtime.Serialization.EnumMember(Value = @"HOLISOL")]
        HOLISOL = 414,

        [System.Runtime.Serialization.EnumMember(Value = @"LBCEXPRESS_FTP")]
        LBCEXPRESS_FTP = 415,

        [System.Runtime.Serialization.EnumMember(Value = @"KURASI")]
        KURASI = 416,

        [System.Runtime.Serialization.EnumMember(Value = @"USF_REDDAWAY")]
        USF_REDDAWAY = 417,

        [System.Runtime.Serialization.EnumMember(Value = @"APG")]
        APG = 418,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_BOXC")]
        CN_BOXC = 419,

        [System.Runtime.Serialization.EnumMember(Value = @"ECOSCOOTING")]
        ECOSCOOTING = 420,

        [System.Runtime.Serialization.EnumMember(Value = @"MAINWAY")]
        MAINWAY = 421,

        [System.Runtime.Serialization.EnumMember(Value = @"PAPERFLY")]
        PAPERFLY = 422,

        [System.Runtime.Serialization.EnumMember(Value = @"HOUNDEXPRESS")]
        HOUNDEXPRESS = 423,

        [System.Runtime.Serialization.EnumMember(Value = @"BOX_BERRY")]
        BOX_BERRY = 424,

        [System.Runtime.Serialization.EnumMember(Value = @"EP_BOX")]
        EP_BOX = 425,

        [System.Runtime.Serialization.EnumMember(Value = @"PLUS_LOG_UK")]
        PLUS_LOG_UK = 426,

        [System.Runtime.Serialization.EnumMember(Value = @"FULFILLA")]
        FULFILLA = 427,

        [System.Runtime.Serialization.EnumMember(Value = @"ASE")]
        ASE = 428,

        [System.Runtime.Serialization.EnumMember(Value = @"MAIL_PLUS")]
        MAIL_PLUS = 429,

        [System.Runtime.Serialization.EnumMember(Value = @"XPO_LOGISTICS")]
        XPO_LOGISTICS = 430,

        [System.Runtime.Serialization.EnumMember(Value = @"WNDIRECT")]
        WNDIRECT = 431,

        [System.Runtime.Serialization.EnumMember(Value = @"CLOUDWISH_ASIA")]
        CLOUDWISH_ASIA = 432,

        [System.Runtime.Serialization.EnumMember(Value = @"ZELERIS")]
        ZELERIS = 433,

        [System.Runtime.Serialization.EnumMember(Value = @"GIO_EXPRESS")]
        GIO_EXPRESS = 434,

        [System.Runtime.Serialization.EnumMember(Value = @"OCS_WORLDWIDE")]
        OCS_WORLDWIDE = 435,

        [System.Runtime.Serialization.EnumMember(Value = @"ARK_LOGISTICS")]
        ARK_LOGISTICS = 436,

        [System.Runtime.Serialization.EnumMember(Value = @"AQUILINE")]
        AQUILINE = 437,

        [System.Runtime.Serialization.EnumMember(Value = @"PILOT_FREIGHT")]
        PILOT_FREIGHT = 438,

        [System.Runtime.Serialization.EnumMember(Value = @"QWINTRY")]
        QWINTRY = 439,

        [System.Runtime.Serialization.EnumMember(Value = @"DANSKE_FRAGT")]
        DANSKE_FRAGT = 440,

        [System.Runtime.Serialization.EnumMember(Value = @"CARRIERS")]
        CARRIERS = 441,

        [System.Runtime.Serialization.EnumMember(Value = @"AIR_CANADA_GLOBAL")]
        AIR_CANADA_GLOBAL = 442,

        [System.Runtime.Serialization.EnumMember(Value = @"PRESIDENT_TRANS")]
        PRESIDENT_TRANS = 443,

        [System.Runtime.Serialization.EnumMember(Value = @"STEPFORWARDFS")]
        STEPFORWARDFS = 444,

        [System.Runtime.Serialization.EnumMember(Value = @"SKYNET_UK")]
        SKYNET_UK = 445,

        [System.Runtime.Serialization.EnumMember(Value = @"PITTOHIO")]
        PITTOHIO = 446,

        [System.Runtime.Serialization.EnumMember(Value = @"CORREOS_EXPRESS")]
        CORREOS_EXPRESS = 447,

        [System.Runtime.Serialization.EnumMember(Value = @"RL_US")]
        RL_US = 448,

        [System.Runtime.Serialization.EnumMember(Value = @"MARA_XPRESS")]
        MARA_XPRESS = 449,

        [System.Runtime.Serialization.EnumMember(Value = @"DESTINY")]
        DESTINY = 450,

        [System.Runtime.Serialization.EnumMember(Value = @"UK_YODEL")]
        UK_YODEL = 451,

        [System.Runtime.Serialization.EnumMember(Value = @"COMET_TECH")]
        COMET_TECH = 452,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_PARCEL_RU")]
        DHL_PARCEL_RU = 453,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_REFR")]
        TNT_REFR = 454,

        [System.Runtime.Serialization.EnumMember(Value = @"SHREE_ANJANI_COURIER")]
        SHREE_ANJANI_COURIER = 455,

        [System.Runtime.Serialization.EnumMember(Value = @"MIKROPAKKET_BE")]
        MIKROPAKKET_BE = 456,

        [System.Runtime.Serialization.EnumMember(Value = @"ETS_EXPRESS")]
        ETS_EXPRESS = 457,

        [System.Runtime.Serialization.EnumMember(Value = @"COLIS_PRIVE")]
        COLIS_PRIVE = 458,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_YUNDA")]
        CN_YUNDA = 459,

        [System.Runtime.Serialization.EnumMember(Value = @"AAA_COOPER")]
        AAA_COOPER = 460,

        [System.Runtime.Serialization.EnumMember(Value = @"ROCKET_PARCEL")]
        ROCKET_PARCEL = 461,

        [System.Runtime.Serialization.EnumMember(Value = @"_360LION")]
        _360LION = 462,

        [System.Runtime.Serialization.EnumMember(Value = @"PANDU")]
        PANDU = 463,

        [System.Runtime.Serialization.EnumMember(Value = @"PROFESSIONAL_COURIERS")]
        PROFESSIONAL_COURIERS = 464,

        [System.Runtime.Serialization.EnumMember(Value = @"FLYTEXPRESS")]
        FLYTEXPRESS = 465,

        [System.Runtime.Serialization.EnumMember(Value = @"LOGISTICSWORLDWIDE_MY")]
        LOGISTICSWORLDWIDE_MY = 466,

        [System.Runtime.Serialization.EnumMember(Value = @"CORREOS_DE_ESPANA")]
        CORREOS_DE_ESPANA = 467,

        [System.Runtime.Serialization.EnumMember(Value = @"IMX")]
        IMX = 468,

        [System.Runtime.Serialization.EnumMember(Value = @"FOUR_PX_EXPRESS")]
        FOUR_PX_EXPRESS = 469,

        [System.Runtime.Serialization.EnumMember(Value = @"XPRESSBEES")]
        XPRESSBEES = 470,

        [System.Runtime.Serialization.EnumMember(Value = @"PICKUPP_VNM")]
        PICKUPP_VNM = 471,

        [System.Runtime.Serialization.EnumMember(Value = @"STARTRACK_EXPRESS")]
        STARTRACK_EXPRESS = 472,

        [System.Runtime.Serialization.EnumMember(Value = @"FR_COLISSIMO")]
        FR_COLISSIMO = 473,

        [System.Runtime.Serialization.EnumMember(Value = @"NACEX_SPAIN_REFERENCE")]
        NACEX_SPAIN_REFERENCE = 474,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_SUPPLY_CHAIN_AU")]
        DHL_SUPPLY_CHAIN_AU = 475,

        [System.Runtime.Serialization.EnumMember(Value = @"ESHIPPING")]
        ESHIPPING = 476,

        [System.Runtime.Serialization.EnumMember(Value = @"SHREETIRUPATI")]
        SHREETIRUPATI = 477,

        [System.Runtime.Serialization.EnumMember(Value = @"HX_EXPRESS")]
        HX_EXPRESS = 478,

        [System.Runtime.Serialization.EnumMember(Value = @"INDOPAKET")]
        INDOPAKET = 479,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_17POST")]
        CN_17POST = 480,

        [System.Runtime.Serialization.EnumMember(Value = @"K1_EXPRESS")]
        K1_EXPRESS = 481,

        [System.Runtime.Serialization.EnumMember(Value = @"CJ_GLS")]
        CJ_GLS = 482,

        [System.Runtime.Serialization.EnumMember(Value = @"MYS_GDEX")]
        MYS_GDEX = 483,

        [System.Runtime.Serialization.EnumMember(Value = @"NATIONEX")]
        NATIONEX = 484,

        [System.Runtime.Serialization.EnumMember(Value = @"ANJUN")]
        ANJUN = 485,

        [System.Runtime.Serialization.EnumMember(Value = @"FARGOOD")]
        FARGOOD = 486,

        [System.Runtime.Serialization.EnumMember(Value = @"SMG_EXPRESS")]
        SMG_EXPRESS = 487,

        [System.Runtime.Serialization.EnumMember(Value = @"RZYEXPRESS")]
        RZYEXPRESS = 488,

        [System.Runtime.Serialization.EnumMember(Value = @"SEFL")]
        SEFL = 489,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_CLICK_IT")]
        TNT_CLICK_IT = 490,

        [System.Runtime.Serialization.EnumMember(Value = @"HDB")]
        HDB = 491,

        [System.Runtime.Serialization.EnumMember(Value = @"HIPSHIPPER")]
        HIPSHIPPER = 492,

        [System.Runtime.Serialization.EnumMember(Value = @"RPXLOGISTICS")]
        RPXLOGISTICS = 493,

        [System.Runtime.Serialization.EnumMember(Value = @"KUEHNE")]
        KUEHNE = 494,

        [System.Runtime.Serialization.EnumMember(Value = @"IT_NEXIVE")]
        IT_NEXIVE = 495,

        [System.Runtime.Serialization.EnumMember(Value = @"PTS")]
        PTS = 496,

        [System.Runtime.Serialization.EnumMember(Value = @"SWISS_POST_FTP")]
        SWISS_POST_FTP = 497,

        [System.Runtime.Serialization.EnumMember(Value = @"FASTRK_SERV")]
        FASTRK_SERV = 498,

        [System.Runtime.Serialization.EnumMember(Value = @"_4_72")]
        _4_72 = 499,

        [System.Runtime.Serialization.EnumMember(Value = @"US_YRC")]
        US_YRC = 500,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTNL_INTL_3S")]
        POSTNL_INTL_3S = 501,

        [System.Runtime.Serialization.EnumMember(Value = @"ELIAN_POST")]
        ELIAN_POST = 502,

        [System.Runtime.Serialization.EnumMember(Value = @"CUBYN")]
        CUBYN = 503,

        [System.Runtime.Serialization.EnumMember(Value = @"SAU_SAUDI_POST")]
        SAU_SAUDI_POST = 504,

        [System.Runtime.Serialization.EnumMember(Value = @"ABXEXPRESS_MY")]
        ABXEXPRESS_MY = 505,

        [System.Runtime.Serialization.EnumMember(Value = @"HUAHAN_EXPRESS")]
        HUAHAN_EXPRESS = 506,

        [System.Runtime.Serialization.EnumMember(Value = @"IND_JAYONEXPRESS")]
        IND_JAYONEXPRESS = 507,

        [System.Runtime.Serialization.EnumMember(Value = @"ZES_EXPRESS")]
        ZES_EXPRESS = 508,

        [System.Runtime.Serialization.EnumMember(Value = @"ZEPTO_EXPRESS")]
        ZEPTO_EXPRESS = 509,

        [System.Runtime.Serialization.EnumMember(Value = @"SKYNET_ZA")]
        SKYNET_ZA = 510,

        [System.Runtime.Serialization.EnumMember(Value = @"ZEEK_2_DOOR")]
        ZEEK_2_DOOR = 511,

        [System.Runtime.Serialization.EnumMember(Value = @"BLINKLASTMILE")]
        BLINKLASTMILE = 512,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTA_UKR")]
        POSTA_UKR = 513,

        [System.Runtime.Serialization.EnumMember(Value = @"CHROBINSON")]
        CHROBINSON = 514,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_POST56")]
        CN_POST56 = 515,

        [System.Runtime.Serialization.EnumMember(Value = @"COURANT_PLUS")]
        COURANT_PLUS = 516,

        [System.Runtime.Serialization.EnumMember(Value = @"SCUDEX_EXPRESS")]
        SCUDEX_EXPRESS = 517,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPENTEGRA")]
        SHIPENTEGRA = 518,

        [System.Runtime.Serialization.EnumMember(Value = @"B_TWO_C_EUROPE")]
        B_TWO_C_EUROPE = 519,

        [System.Runtime.Serialization.EnumMember(Value = @"COPE")]
        COPE = 520,

        [System.Runtime.Serialization.EnumMember(Value = @"IND_GATI")]
        IND_GATI = 521,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_WISHPOST")]
        CN_WISHPOST = 522,

        [System.Runtime.Serialization.EnumMember(Value = @"NACEX_ES")]
        NACEX_ES = 523,

        [System.Runtime.Serialization.EnumMember(Value = @"TAQBIN_HK")]
        TAQBIN_HK = 524,

        [System.Runtime.Serialization.EnumMember(Value = @"GLOBALTRANZ")]
        GLOBALTRANZ = 525,

        [System.Runtime.Serialization.EnumMember(Value = @"HKD")]
        HKD = 526,

        [System.Runtime.Serialization.EnumMember(Value = @"BJSHOMEDELIVERY")]
        BJSHOMEDELIVERY = 527,

        [System.Runtime.Serialization.EnumMember(Value = @"OMNIVA")]
        OMNIVA = 528,

        [System.Runtime.Serialization.EnumMember(Value = @"SUTTON")]
        SUTTON = 529,

        [System.Runtime.Serialization.EnumMember(Value = @"PANTHER_REFERENCE")]
        PANTHER_REFERENCE = 530,

        [System.Runtime.Serialization.EnumMember(Value = @"SFCSERVICE")]
        SFCSERVICE = 531,

        [System.Runtime.Serialization.EnumMember(Value = @"LTL")]
        LTL = 532,

        [System.Runtime.Serialization.EnumMember(Value = @"PARKNPARCEL")]
        PARKNPARCEL = 533,

        [System.Runtime.Serialization.EnumMember(Value = @"SPRING_GDS")]
        SPRING_GDS = 534,

        [System.Runtime.Serialization.EnumMember(Value = @"ECEXPRESS")]
        ECEXPRESS = 535,

        [System.Runtime.Serialization.EnumMember(Value = @"INTERPARCEL_AU")]
        INTERPARCEL_AU = 536,

        [System.Runtime.Serialization.EnumMember(Value = @"AGILITY")]
        AGILITY = 537,

        [System.Runtime.Serialization.EnumMember(Value = @"XL_EXPRESS")]
        XL_EXPRESS = 538,

        [System.Runtime.Serialization.EnumMember(Value = @"ADERONLINE")]
        ADERONLINE = 539,

        [System.Runtime.Serialization.EnumMember(Value = @"DIRECTCOURIERS")]
        DIRECTCOURIERS = 540,

        [System.Runtime.Serialization.EnumMember(Value = @"PLANZER")]
        PLANZER = 541,

        [System.Runtime.Serialization.EnumMember(Value = @"SENDING")]
        SENDING = 542,

        [System.Runtime.Serialization.EnumMember(Value = @"NINJAVAN_WB")]
        NINJAVAN_WB = 543,

        [System.Runtime.Serialization.EnumMember(Value = @"NATIONWIDE_MY")]
        NATIONWIDE_MY = 544,

        [System.Runtime.Serialization.EnumMember(Value = @"SENDIT")]
        SENDIT = 545,

        [System.Runtime.Serialization.EnumMember(Value = @"GB_ARROW")]
        GB_ARROW = 546,

        [System.Runtime.Serialization.EnumMember(Value = @"IND_GOJAVAS")]
        IND_GOJAVAS = 547,

        [System.Runtime.Serialization.EnumMember(Value = @"KPOST")]
        KPOST = 548,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_FREIGHT")]
        DHL_FREIGHT = 549,

        [System.Runtime.Serialization.EnumMember(Value = @"BLUECARE")]
        BLUECARE = 550,

        [System.Runtime.Serialization.EnumMember(Value = @"JINDOUYUN")]
        JINDOUYUN = 551,

        [System.Runtime.Serialization.EnumMember(Value = @"TRACKON")]
        TRACKON = 552,

        [System.Runtime.Serialization.EnumMember(Value = @"GB_TUFFNELLS")]
        GB_TUFFNELLS = 553,

        [System.Runtime.Serialization.EnumMember(Value = @"TRUMPCARD")]
        TRUMPCARD = 554,

        [System.Runtime.Serialization.EnumMember(Value = @"ETOTAL")]
        ETOTAL = 555,

        [System.Runtime.Serialization.EnumMember(Value = @"SFPLUS_WEBHOOK")]
        SFPLUS_WEBHOOK = 556,

        [System.Runtime.Serialization.EnumMember(Value = @"SEKOLOGISTICS")]
        SEKOLOGISTICS = 557,

        [System.Runtime.Serialization.EnumMember(Value = @"HERMES_2MANN_HANDLING")]
        HERMES_2MANN_HANDLING = 558,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_LOCAL_REF")]
        DPD_LOCAL_REF = 559,

        [System.Runtime.Serialization.EnumMember(Value = @"UDS")]
        UDS = 560,

        [System.Runtime.Serialization.EnumMember(Value = @"ZA_SPECIALISED_FREIGHT")]
        ZA_SPECIALISED_FREIGHT = 561,

        [System.Runtime.Serialization.EnumMember(Value = @"THA_KERRY")]
        THA_KERRY = 562,

        [System.Runtime.Serialization.EnumMember(Value = @"PRT_INT_SEUR")]
        PRT_INT_SEUR = 563,

        [System.Runtime.Serialization.EnumMember(Value = @"BRA_CORREIOS")]
        BRA_CORREIOS = 564,

        [System.Runtime.Serialization.EnumMember(Value = @"NZ_NZ_POST")]
        NZ_NZ_POST = 565,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_EQUICK")]
        CN_EQUICK = 566,

        [System.Runtime.Serialization.EnumMember(Value = @"MYS_EMS")]
        MYS_EMS = 567,

        [System.Runtime.Serialization.EnumMember(Value = @"GB_NORSK")]
        GB_NORSK = 568,

        [System.Runtime.Serialization.EnumMember(Value = @"ESP_MRW")]
        ESP_MRW = 569,

        [System.Runtime.Serialization.EnumMember(Value = @"ESP_PACKLINK")]
        ESP_PACKLINK = 570,

        [System.Runtime.Serialization.EnumMember(Value = @"KANGAROO_MY")]
        KANGAROO_MY = 571,

        [System.Runtime.Serialization.EnumMember(Value = @"RPX")]
        RPX = 572,

        [System.Runtime.Serialization.EnumMember(Value = @"XDP_UK_REFERENCE")]
        XDP_UK_REFERENCE = 573,

        [System.Runtime.Serialization.EnumMember(Value = @"NINJAVAN_MY")]
        NINJAVAN_MY = 574,

        [System.Runtime.Serialization.EnumMember(Value = @"ADICIONAL")]
        ADICIONAL = 575,

        [System.Runtime.Serialization.EnumMember(Value = @"NINJAVAN_ID")]
        NINJAVAN_ID = 576,

        [System.Runtime.Serialization.EnumMember(Value = @"ROADBULL")]
        ROADBULL = 577,

        [System.Runtime.Serialization.EnumMember(Value = @"YAKIT")]
        YAKIT = 578,

        [System.Runtime.Serialization.EnumMember(Value = @"MAILAMERICAS")]
        MAILAMERICAS = 579,

        [System.Runtime.Serialization.EnumMember(Value = @"MIKROPAKKET")]
        MIKROPAKKET = 580,

        [System.Runtime.Serialization.EnumMember(Value = @"DYNALOGIC")]
        DYNALOGIC = 581,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_ES")]
        DHL_ES = 582,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_PARCEL_NL")]
        DHL_PARCEL_NL = 583,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_GLOBAL_MAIL_ASIA")]
        DHL_GLOBAL_MAIL_ASIA = 584,

        [System.Runtime.Serialization.EnumMember(Value = @"DAWN_WING")]
        DAWN_WING = 585,

        [System.Runtime.Serialization.EnumMember(Value = @"GENIKI_GR")]
        GENIKI_GR = 586,

        [System.Runtime.Serialization.EnumMember(Value = @"HERMESWORLD_UK")]
        HERMESWORLD_UK = 587,

        [System.Runtime.Serialization.EnumMember(Value = @"ALPHAFAST")]
        ALPHAFAST = 588,

        [System.Runtime.Serialization.EnumMember(Value = @"BUYLOGIC")]
        BUYLOGIC = 589,

        [System.Runtime.Serialization.EnumMember(Value = @"EKART")]
        EKART = 590,

        [System.Runtime.Serialization.EnumMember(Value = @"MEX_SENDA")]
        MEX_SENDA = 591,

        [System.Runtime.Serialization.EnumMember(Value = @"SFC_LOGISTICS")]
        SFC_LOGISTICS = 592,

        [System.Runtime.Serialization.EnumMember(Value = @"POST_SERBIA")]
        POST_SERBIA = 593,

        [System.Runtime.Serialization.EnumMember(Value = @"IND_DELHIVERY")]
        IND_DELHIVERY = 594,

        [System.Runtime.Serialization.EnumMember(Value = @"DE_DPD_DELISTRACK")]
        DE_DPD_DELISTRACK = 595,

        [System.Runtime.Serialization.EnumMember(Value = @"RPD2MAN")]
        RPD2MAN = 596,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_SF_EXPRESS")]
        CN_SF_EXPRESS = 597,

        [System.Runtime.Serialization.EnumMember(Value = @"YANWEN")]
        YANWEN = 598,

        [System.Runtime.Serialization.EnumMember(Value = @"MYS_SKYNET")]
        MYS_SKYNET = 599,

        [System.Runtime.Serialization.EnumMember(Value = @"CORREOS_DE_MEXICO")]
        CORREOS_DE_MEXICO = 600,

        [System.Runtime.Serialization.EnumMember(Value = @"CBL_LOGISTICA")]
        CBL_LOGISTICA = 601,

        [System.Runtime.Serialization.EnumMember(Value = @"MEX_ESTAFETA")]
        MEX_ESTAFETA = 602,

        [System.Runtime.Serialization.EnumMember(Value = @"AU_AUSTRIAN_POST")]
        AU_AUSTRIAN_POST = 603,

        [System.Runtime.Serialization.EnumMember(Value = @"RINCOS")]
        RINCOS = 604,

        [System.Runtime.Serialization.EnumMember(Value = @"NLD_DHL")]
        NLD_DHL = 605,

        [System.Runtime.Serialization.EnumMember(Value = @"RUSSIAN_POST")]
        RUSSIAN_POST = 606,

        [System.Runtime.Serialization.EnumMember(Value = @"COURIERS_PLEASE")]
        COURIERS_PLEASE = 607,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTNORD_LOGISTICS")]
        POSTNORD_LOGISTICS = 608,

        [System.Runtime.Serialization.EnumMember(Value = @"FEDEX")]
        FEDEX = 609,

        [System.Runtime.Serialization.EnumMember(Value = @"DPE_EXPRESS")]
        DPE_EXPRESS = 610,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD")]
        DPD = 611,

        [System.Runtime.Serialization.EnumMember(Value = @"ADSONE")]
        ADSONE = 612,

        [System.Runtime.Serialization.EnumMember(Value = @"IDN_JNE")]
        IDN_JNE = 613,

        [System.Runtime.Serialization.EnumMember(Value = @"THECOURIERGUY")]
        THECOURIERGUY = 614,

        [System.Runtime.Serialization.EnumMember(Value = @"CNEXPS")]
        CNEXPS = 615,

        [System.Runtime.Serialization.EnumMember(Value = @"PRT_CHRONOPOST")]
        PRT_CHRONOPOST = 616,

        [System.Runtime.Serialization.EnumMember(Value = @"LANDMARK_GLOBAL")]
        LANDMARK_GLOBAL = 617,

        [System.Runtime.Serialization.EnumMember(Value = @"IT_DHL_ECOMMERCE")]
        IT_DHL_ECOMMERCE = 618,

        [System.Runtime.Serialization.EnumMember(Value = @"ESP_NACEX")]
        ESP_NACEX = 619,

        [System.Runtime.Serialization.EnumMember(Value = @"PRT_CTT")]
        PRT_CTT = 620,

        [System.Runtime.Serialization.EnumMember(Value = @"BE_KIALA")]
        BE_KIALA = 621,

        [System.Runtime.Serialization.EnumMember(Value = @"ASENDIA_UK")]
        ASENDIA_UK = 622,

        [System.Runtime.Serialization.EnumMember(Value = @"GLOBAL_TNT")]
        GLOBAL_TNT = 623,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTUR_IS")]
        POSTUR_IS = 624,

        [System.Runtime.Serialization.EnumMember(Value = @"EPARCEL_KR")]
        EPARCEL_KR = 625,

        [System.Runtime.Serialization.EnumMember(Value = @"INPOST_PACZKOMATY")]
        INPOST_PACZKOMATY = 626,

        [System.Runtime.Serialization.EnumMember(Value = @"IT_POSTE_ITALIA")]
        IT_POSTE_ITALIA = 627,

        [System.Runtime.Serialization.EnumMember(Value = @"BE_BPOST")]
        BE_BPOST = 628,

        [System.Runtime.Serialization.EnumMember(Value = @"PL_POCZTA_POLSKA")]
        PL_POCZTA_POLSKA = 629,

        [System.Runtime.Serialization.EnumMember(Value = @"MYS_MYS_POST")]
        MYS_MYS_POST = 630,

        [System.Runtime.Serialization.EnumMember(Value = @"SG_SG_POST")]
        SG_SG_POST = 631,

        [System.Runtime.Serialization.EnumMember(Value = @"THA_THAILAND_POST")]
        THA_THAILAND_POST = 632,

        [System.Runtime.Serialization.EnumMember(Value = @"LEXSHIP")]
        LEXSHIP = 633,

        [System.Runtime.Serialization.EnumMember(Value = @"FASTWAY_NZ")]
        FASTWAY_NZ = 634,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_AU")]
        DHL_AU = 635,

        [System.Runtime.Serialization.EnumMember(Value = @"COSTMETICSNOW")]
        COSTMETICSNOW = 636,

        [System.Runtime.Serialization.EnumMember(Value = @"PFLOGISTICS")]
        PFLOGISTICS = 637,

        [System.Runtime.Serialization.EnumMember(Value = @"LOOMIS_EXPRESS")]
        LOOMIS_EXPRESS = 638,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS_ITALY")]
        GLS_ITALY = 639,

        [System.Runtime.Serialization.EnumMember(Value = @"LINE")]
        LINE = 640,

        [System.Runtime.Serialization.EnumMember(Value = @"GEL_EXPRESS")]
        GEL_EXPRESS = 641,

        [System.Runtime.Serialization.EnumMember(Value = @"HUODULL")]
        HUODULL = 642,

        [System.Runtime.Serialization.EnumMember(Value = @"NINJAVAN_SG")]
        NINJAVAN_SG = 643,

        [System.Runtime.Serialization.EnumMember(Value = @"JANIO")]
        JANIO = 644,

        [System.Runtime.Serialization.EnumMember(Value = @"AO_COURIER")]
        AO_COURIER = 645,

        [System.Runtime.Serialization.EnumMember(Value = @"BRT_IT_SENDER_REF")]
        BRT_IT_SENDER_REF = 646,

        [System.Runtime.Serialization.EnumMember(Value = @"SAILPOST")]
        SAILPOST = 647,

        [System.Runtime.Serialization.EnumMember(Value = @"LALAMOVE")]
        LALAMOVE = 648,

        [System.Runtime.Serialization.EnumMember(Value = @"NEWZEALAND_COURIERS")]
        NEWZEALAND_COURIERS = 649,

        [System.Runtime.Serialization.EnumMember(Value = @"ETOMARS")]
        ETOMARS = 650,

        [System.Runtime.Serialization.EnumMember(Value = @"VIRTRANSPORT")]
        VIRTRANSPORT = 651,

        [System.Runtime.Serialization.EnumMember(Value = @"WIZMO")]
        WIZMO = 652,

        [System.Runtime.Serialization.EnumMember(Value = @"PALLETWAYS")]
        PALLETWAYS = 653,

        [System.Runtime.Serialization.EnumMember(Value = @"I_DIKA")]
        I_DIKA = 654,

        [System.Runtime.Serialization.EnumMember(Value = @"CFL_LOGISTICS")]
        CFL_LOGISTICS = 655,

        [System.Runtime.Serialization.EnumMember(Value = @"GEMWORLDWIDE")]
        GEMWORLDWIDE = 656,

        [System.Runtime.Serialization.EnumMember(Value = @"GLOBAL_EXPRESS")]
        GLOBAL_EXPRESS = 657,

        [System.Runtime.Serialization.EnumMember(Value = @"LOGISTYX_TRANSGROUP")]
        LOGISTYX_TRANSGROUP = 658,

        [System.Runtime.Serialization.EnumMember(Value = @"WESTBANK_COURIER")]
        WESTBANK_COURIER = 659,

        [System.Runtime.Serialization.EnumMember(Value = @"ARCO_SPEDIZIONI")]
        ARCO_SPEDIZIONI = 660,

        [System.Runtime.Serialization.EnumMember(Value = @"YDH_EXPRESS")]
        YDH_EXPRESS = 661,

        [System.Runtime.Serialization.EnumMember(Value = @"PARCELINKLOGISTICS")]
        PARCELINKLOGISTICS = 662,

        [System.Runtime.Serialization.EnumMember(Value = @"CNDEXPRESS")]
        CNDEXPRESS = 663,

        [System.Runtime.Serialization.EnumMember(Value = @"NOX_NIGHT_TIME_EXPRESS")]
        NOX_NIGHT_TIME_EXPRESS = 664,

        [System.Runtime.Serialization.EnumMember(Value = @"AERONET")]
        AERONET = 665,

        [System.Runtime.Serialization.EnumMember(Value = @"LTIANEXP")]
        LTIANEXP = 666,

        [System.Runtime.Serialization.EnumMember(Value = @"INTEGRA2_FTP")]
        INTEGRA2_FTP = 667,

        [System.Runtime.Serialization.EnumMember(Value = @"PARCELONE")]
        PARCELONE = 668,

        [System.Runtime.Serialization.EnumMember(Value = @"NOX_NACHTEXPRESS")]
        NOX_NACHTEXPRESS = 669,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_CHINA_POST_EMS")]
        CN_CHINA_POST_EMS = 670,

        [System.Runtime.Serialization.EnumMember(Value = @"CHUKOU1")]
        CHUKOU1 = 671,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS_SLOV")]
        GLS_SLOV = 672,

        [System.Runtime.Serialization.EnumMember(Value = @"ORANGE_DS")]
        ORANGE_DS = 673,

        [System.Runtime.Serialization.EnumMember(Value = @"JOOM_LOGIS")]
        JOOM_LOGIS = 674,

        [System.Runtime.Serialization.EnumMember(Value = @"AUS_STARTRACK")]
        AUS_STARTRACK = 675,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL")]
        DHL = 676,

        [System.Runtime.Serialization.EnumMember(Value = @"GB_APC")]
        GB_APC = 677,

        [System.Runtime.Serialization.EnumMember(Value = @"BONDSCOURIERS")]
        BONDSCOURIERS = 678,

        [System.Runtime.Serialization.EnumMember(Value = @"JPN_JAPAN_POST")]
        JPN_JAPAN_POST = 679,

        [System.Runtime.Serialization.EnumMember(Value = @"USPS")]
        USPS = 680,

        [System.Runtime.Serialization.EnumMember(Value = @"WINIT")]
        WINIT = 681,

        [System.Runtime.Serialization.EnumMember(Value = @"ARG_OCA")]
        ARG_OCA = 682,

        [System.Runtime.Serialization.EnumMember(Value = @"TW_TAIWAN_POST")]
        TW_TAIWAN_POST = 683,

        [System.Runtime.Serialization.EnumMember(Value = @"DMM_NETWORK")]
        DMM_NETWORK = 684,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT")]
        TNT = 685,

        [System.Runtime.Serialization.EnumMember(Value = @"BH_POSTA")]
        BH_POSTA = 686,

        [System.Runtime.Serialization.EnumMember(Value = @"SWE_POSTNORD")]
        SWE_POSTNORD = 687,

        [System.Runtime.Serialization.EnumMember(Value = @"CA_CANADA_POST")]
        CA_CANADA_POST = 688,

        [System.Runtime.Serialization.EnumMember(Value = @"WISELOADS")]
        WISELOADS = 689,

        [System.Runtime.Serialization.EnumMember(Value = @"ASENDIA_HK")]
        ASENDIA_HK = 690,

        [System.Runtime.Serialization.EnumMember(Value = @"NLD_GLS")]
        NLD_GLS = 691,

        [System.Runtime.Serialization.EnumMember(Value = @"MEX_REDPACK")]
        MEX_REDPACK = 692,

        [System.Runtime.Serialization.EnumMember(Value = @"JET_SHIP")]
        JET_SHIP = 693,

        [System.Runtime.Serialization.EnumMember(Value = @"DE_DHL_EXPRESS")]
        DE_DHL_EXPRESS = 694,

        [System.Runtime.Serialization.EnumMember(Value = @"NINJAVAN_THAI")]
        NINJAVAN_THAI = 695,

        [System.Runtime.Serialization.EnumMember(Value = @"RABEN_GROUP")]
        RABEN_GROUP = 696,

        [System.Runtime.Serialization.EnumMember(Value = @"ESP_ASM")]
        ESP_ASM = 697,

        [System.Runtime.Serialization.EnumMember(Value = @"HRV_HRVATSKA")]
        HRV_HRVATSKA = 698,

        [System.Runtime.Serialization.EnumMember(Value = @"GLOBAL_ESTES")]
        GLOBAL_ESTES = 699,

        [System.Runtime.Serialization.EnumMember(Value = @"LTU_LIETUVOS")]
        LTU_LIETUVOS = 700,

        [System.Runtime.Serialization.EnumMember(Value = @"BEL_DHL")]
        BEL_DHL = 701,

        [System.Runtime.Serialization.EnumMember(Value = @"AU_AU_POST")]
        AU_AU_POST = 702,

        [System.Runtime.Serialization.EnumMember(Value = @"SPEEDEXCOURIER")]
        SPEEDEXCOURIER = 703,

        [System.Runtime.Serialization.EnumMember(Value = @"FR_COLIS")]
        FR_COLIS = 704,

        [System.Runtime.Serialization.EnumMember(Value = @"ARAMEX")]
        ARAMEX = 705,

        [System.Runtime.Serialization.EnumMember(Value = @"DPEX")]
        DPEX = 706,

        [System.Runtime.Serialization.EnumMember(Value = @"MYS_AIRPAK")]
        MYS_AIRPAK = 707,

        [System.Runtime.Serialization.EnumMember(Value = @"CUCKOOEXPRESS")]
        CUCKOOEXPRESS = 708,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_POLAND")]
        DPD_POLAND = 709,

        [System.Runtime.Serialization.EnumMember(Value = @"NLD_POSTNL")]
        NLD_POSTNL = 710,

        [System.Runtime.Serialization.EnumMember(Value = @"NIM_EXPRESS")]
        NIM_EXPRESS = 711,

        [System.Runtime.Serialization.EnumMember(Value = @"QUANTIUM")]
        QUANTIUM = 712,

        [System.Runtime.Serialization.EnumMember(Value = @"SENDLE")]
        SENDLE = 713,

        [System.Runtime.Serialization.EnumMember(Value = @"ESP_REDUR")]
        ESP_REDUR = 714,

        [System.Runtime.Serialization.EnumMember(Value = @"MATKAHUOLTO")]
        MATKAHUOLTO = 715,

        [System.Runtime.Serialization.EnumMember(Value = @"CPACKET")]
        CPACKET = 716,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTI")]
        POSTI = 717,

        [System.Runtime.Serialization.EnumMember(Value = @"HUNTER_EXPRESS")]
        HUNTER_EXPRESS = 718,

        [System.Runtime.Serialization.EnumMember(Value = @"CHOIR_EXP")]
        CHOIR_EXP = 719,

        [System.Runtime.Serialization.EnumMember(Value = @"LEGION_EXPRESS")]
        LEGION_EXPRESS = 720,

        [System.Runtime.Serialization.EnumMember(Value = @"AUSTRIAN_POST_EXPRESS")]
        AUSTRIAN_POST_EXPRESS = 721,

        [System.Runtime.Serialization.EnumMember(Value = @"GRUPO")]
        GRUPO = 722,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTA_RO")]
        POSTA_RO = 723,

        [System.Runtime.Serialization.EnumMember(Value = @"INTERPARCEL_UK")]
        INTERPARCEL_UK = 724,

        [System.Runtime.Serialization.EnumMember(Value = @"GLOBAL_ABF")]
        GLOBAL_ABF = 725,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTEN_NORGE")]
        POSTEN_NORGE = 726,

        [System.Runtime.Serialization.EnumMember(Value = @"XPERT_DELIVERY")]
        XPERT_DELIVERY = 727,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_REFR")]
        DHL_REFR = 728,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_HK")]
        DHL_HK = 729,

        [System.Runtime.Serialization.EnumMember(Value = @"SKYNET_UAE")]
        SKYNET_UAE = 730,

        [System.Runtime.Serialization.EnumMember(Value = @"GOJEK")]
        GOJEK = 731,

        [System.Runtime.Serialization.EnumMember(Value = @"YODEL_INTNL")]
        YODEL_INTNL = 732,

        [System.Runtime.Serialization.EnumMember(Value = @"JANCO")]
        JANCO = 733,

        [System.Runtime.Serialization.EnumMember(Value = @"YTO")]
        YTO = 734,

        [System.Runtime.Serialization.EnumMember(Value = @"WISE_EXPRESS")]
        WISE_EXPRESS = 735,

        [System.Runtime.Serialization.EnumMember(Value = @"JTEXPRESS_VN")]
        JTEXPRESS_VN = 736,

        [System.Runtime.Serialization.EnumMember(Value = @"FEDEX_INTL_MLSERV")]
        FEDEX_INTL_MLSERV = 737,

        [System.Runtime.Serialization.EnumMember(Value = @"VAMOX")]
        VAMOX = 738,

        [System.Runtime.Serialization.EnumMember(Value = @"AMS_GRP")]
        AMS_GRP = 739,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_JP")]
        DHL_JP = 740,

        [System.Runtime.Serialization.EnumMember(Value = @"HRPARCEL")]
        HRPARCEL = 741,

        [System.Runtime.Serialization.EnumMember(Value = @"GESWL")]
        GESWL = 742,

        [System.Runtime.Serialization.EnumMember(Value = @"BLUESTAR")]
        BLUESTAR = 743,

        [System.Runtime.Serialization.EnumMember(Value = @"CDEK_TR")]
        CDEK_TR = 744,

        [System.Runtime.Serialization.EnumMember(Value = @"DESCARTES")]
        DESCARTES = 745,

        [System.Runtime.Serialization.EnumMember(Value = @"DELTEC_UK")]
        DELTEC_UK = 746,

        [System.Runtime.Serialization.EnumMember(Value = @"DTDC_EXPRESS")]
        DTDC_EXPRESS = 747,

        [System.Runtime.Serialization.EnumMember(Value = @"TOURLINE")]
        TOURLINE = 748,

        [System.Runtime.Serialization.EnumMember(Value = @"BH_WORLDWIDE")]
        BH_WORLDWIDE = 749,

        [System.Runtime.Serialization.EnumMember(Value = @"OCS")]
        OCS = 750,

        [System.Runtime.Serialization.EnumMember(Value = @"YINGNUO_LOGISTICS")]
        YINGNUO_LOGISTICS = 751,

        [System.Runtime.Serialization.EnumMember(Value = @"UPS")]
        UPS = 752,

        [System.Runtime.Serialization.EnumMember(Value = @"TOLL")]
        TOLL = 753,

        [System.Runtime.Serialization.EnumMember(Value = @"PRT_SEUR")]
        PRT_SEUR = 754,

        [System.Runtime.Serialization.EnumMember(Value = @"DTDC_AU")]
        DTDC_AU = 755,

        [System.Runtime.Serialization.EnumMember(Value = @"THA_DYNAMIC_LOGISTICS")]
        THA_DYNAMIC_LOGISTICS = 756,

        [System.Runtime.Serialization.EnumMember(Value = @"UBI_LOGISTICS")]
        UBI_LOGISTICS = 757,

        [System.Runtime.Serialization.EnumMember(Value = @"FEDEX_CROSSBORDER")]
        FEDEX_CROSSBORDER = 758,

        [System.Runtime.Serialization.EnumMember(Value = @"A1POST")]
        A1POST = 759,

        [System.Runtime.Serialization.EnumMember(Value = @"TAZMANIAN_FREIGHT")]
        TAZMANIAN_FREIGHT = 760,

        [System.Runtime.Serialization.EnumMember(Value = @"CJ_INT_MY")]
        CJ_INT_MY = 761,

        [System.Runtime.Serialization.EnumMember(Value = @"SAIA_FREIGHT")]
        SAIA_FREIGHT = 762,

        [System.Runtime.Serialization.EnumMember(Value = @"SG_QXPRESS")]
        SG_QXPRESS = 763,

        [System.Runtime.Serialization.EnumMember(Value = @"NHANS_SOLUTIONS")]
        NHANS_SOLUTIONS = 764,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_FR")]
        DPD_FR = 765,

        [System.Runtime.Serialization.EnumMember(Value = @"COORDINADORA")]
        COORDINADORA = 766,

        [System.Runtime.Serialization.EnumMember(Value = @"ANDREANI")]
        ANDREANI = 767,

        [System.Runtime.Serialization.EnumMember(Value = @"DOORA")]
        DOORA = 768,

        [System.Runtime.Serialization.EnumMember(Value = @"INTERPARCEL_NZ")]
        INTERPARCEL_NZ = 769,

        [System.Runtime.Serialization.EnumMember(Value = @"PHL_JAMEXPRESS")]
        PHL_JAMEXPRESS = 770,

        [System.Runtime.Serialization.EnumMember(Value = @"BEL_BELGIUM_POST")]
        BEL_BELGIUM_POST = 771,

        [System.Runtime.Serialization.EnumMember(Value = @"US_APC")]
        US_APC = 772,

        [System.Runtime.Serialization.EnumMember(Value = @"IDN_POS")]
        IDN_POS = 773,

        [System.Runtime.Serialization.EnumMember(Value = @"FR_MONDIAL")]
        FR_MONDIAL = 774,

        [System.Runtime.Serialization.EnumMember(Value = @"DE_DHL")]
        DE_DHL = 775,

        [System.Runtime.Serialization.EnumMember(Value = @"HK_RPX")]
        HK_RPX = 776,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_PIECEID")]
        DHL_PIECEID = 777,

        [System.Runtime.Serialization.EnumMember(Value = @"VNPOST_EMS")]
        VNPOST_EMS = 778,

        [System.Runtime.Serialization.EnumMember(Value = @"RRDONNELLEY")]
        RRDONNELLEY = 779,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_DE")]
        DPD_DE = 780,

        [System.Runtime.Serialization.EnumMember(Value = @"DELCART_IN")]
        DELCART_IN = 781,

        [System.Runtime.Serialization.EnumMember(Value = @"IMEXGLOBALSOLUTIONS")]
        IMEXGLOBALSOLUTIONS = 782,

        [System.Runtime.Serialization.EnumMember(Value = @"ACOMMERCE")]
        ACOMMERCE = 783,

        [System.Runtime.Serialization.EnumMember(Value = @"EURODIS")]
        EURODIS = 784,

        [System.Runtime.Serialization.EnumMember(Value = @"CANPAR")]
        CANPAR = 785,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS")]
        GLS = 786,

        [System.Runtime.Serialization.EnumMember(Value = @"IND_ECOM")]
        IND_ECOM = 787,

        [System.Runtime.Serialization.EnumMember(Value = @"ESP_ENVIALIA")]
        ESP_ENVIALIA = 788,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_UK")]
        DHL_UK = 789,

        [System.Runtime.Serialization.EnumMember(Value = @"SMSA_EXPRESS")]
        SMSA_EXPRESS = 790,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_FR")]
        TNT_FR = 791,

        [System.Runtime.Serialization.EnumMember(Value = @"DEX_I")]
        DEX_I = 792,

        [System.Runtime.Serialization.EnumMember(Value = @"BUDBEE_WEBHOOK")]
        BUDBEE_WEBHOOK = 793,

        [System.Runtime.Serialization.EnumMember(Value = @"COPA_COURIER")]
        COPA_COURIER = 794,

        [System.Runtime.Serialization.EnumMember(Value = @"VNM_VIETNAM_POST")]
        VNM_VIETNAM_POST = 795,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_HK")]
        DPD_HK = 796,

        [System.Runtime.Serialization.EnumMember(Value = @"TOLL_NZ")]
        TOLL_NZ = 797,

        [System.Runtime.Serialization.EnumMember(Value = @"ECHO")]
        ECHO = 798,

        [System.Runtime.Serialization.EnumMember(Value = @"FEDEX_FR")]
        FEDEX_FR = 799,

        [System.Runtime.Serialization.EnumMember(Value = @"BORDEREXPRESS")]
        BORDEREXPRESS = 800,

        [System.Runtime.Serialization.EnumMember(Value = @"MAILPLUS_JPN")]
        MAILPLUS_JPN = 801,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_UK_REFR")]
        TNT_UK_REFR = 802,

        [System.Runtime.Serialization.EnumMember(Value = @"KEC")]
        KEC = 803,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_RO")]
        DPD_RO = 804,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_JP")]
        TNT_JP = 805,

        [System.Runtime.Serialization.EnumMember(Value = @"TH_CJ")]
        TH_CJ = 806,

        [System.Runtime.Serialization.EnumMember(Value = @"EC_CN")]
        EC_CN = 807,

        [System.Runtime.Serialization.EnumMember(Value = @"FASTWAY_UK")]
        FASTWAY_UK = 808,

        [System.Runtime.Serialization.EnumMember(Value = @"FASTWAY_US")]
        FASTWAY_US = 809,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS_DE")]
        GLS_DE = 810,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS_ES")]
        GLS_ES = 811,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS_FR")]
        GLS_FR = 812,

        [System.Runtime.Serialization.EnumMember(Value = @"MONDIAL_BE")]
        MONDIAL_BE = 813,

        [System.Runtime.Serialization.EnumMember(Value = @"SGT_IT")]
        SGT_IT = 814,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_CN")]
        TNT_CN = 815,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_DE")]
        TNT_DE = 816,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_ES")]
        TNT_ES = 817,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_PL")]
        TNT_PL = 818,

        [System.Runtime.Serialization.EnumMember(Value = @"PARCELFORCE")]
        PARCELFORCE = 819,

        [System.Runtime.Serialization.EnumMember(Value = @"SWISS_POST")]
        SWISS_POST = 820,

        [System.Runtime.Serialization.EnumMember(Value = @"TOLL_IPEC")]
        TOLL_IPEC = 821,

        [System.Runtime.Serialization.EnumMember(Value = @"AIR_21")]
        AIR_21 = 822,

        [System.Runtime.Serialization.EnumMember(Value = @"AIRSPEED")]
        AIRSPEED = 823,

        [System.Runtime.Serialization.EnumMember(Value = @"BERT")]
        BERT = 824,

        [System.Runtime.Serialization.EnumMember(Value = @"BLUEDART")]
        BLUEDART = 825,

        [System.Runtime.Serialization.EnumMember(Value = @"COLLECTPLUS")]
        COLLECTPLUS = 826,

        [System.Runtime.Serialization.EnumMember(Value = @"COURIERPLUS")]
        COURIERPLUS = 827,

        [System.Runtime.Serialization.EnumMember(Value = @"COURIER_POST")]
        COURIER_POST = 828,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_GLOBAL_MAIL")]
        DHL_GLOBAL_MAIL = 829,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_UK")]
        DPD_UK = 830,

        [System.Runtime.Serialization.EnumMember(Value = @"DELTEC_DE")]
        DELTEC_DE = 831,

        [System.Runtime.Serialization.EnumMember(Value = @"DEUTSCHE_DE")]
        DEUTSCHE_DE = 832,

        [System.Runtime.Serialization.EnumMember(Value = @"DOTZOT")]
        DOTZOT = 833,

        [System.Runtime.Serialization.EnumMember(Value = @"ELTA_GR")]
        ELTA_GR = 834,

        [System.Runtime.Serialization.EnumMember(Value = @"EMS_CN")]
        EMS_CN = 835,

        [System.Runtime.Serialization.EnumMember(Value = @"ECARGO")]
        ECARGO = 836,

        [System.Runtime.Serialization.EnumMember(Value = @"ENSENDA")]
        ENSENDA = 837,

        [System.Runtime.Serialization.EnumMember(Value = @"FERCAM_IT")]
        FERCAM_IT = 838,

        [System.Runtime.Serialization.EnumMember(Value = @"FASTWAY_ZA")]
        FASTWAY_ZA = 839,

        [System.Runtime.Serialization.EnumMember(Value = @"FASTWAY_AU")]
        FASTWAY_AU = 840,

        [System.Runtime.Serialization.EnumMember(Value = @"FIRST_LOGISITCS")]
        FIRST_LOGISITCS = 841,

        [System.Runtime.Serialization.EnumMember(Value = @"GEODIS")]
        GEODIS = 842,

        [System.Runtime.Serialization.EnumMember(Value = @"GLOBEGISTICS")]
        GLOBEGISTICS = 843,

        [System.Runtime.Serialization.EnumMember(Value = @"GREYHOUND")]
        GREYHOUND = 844,

        [System.Runtime.Serialization.EnumMember(Value = @"JETSHIP_MY")]
        JETSHIP_MY = 845,

        [System.Runtime.Serialization.EnumMember(Value = @"LION_PARCEL")]
        LION_PARCEL = 846,

        [System.Runtime.Serialization.EnumMember(Value = @"AEROFLASH")]
        AEROFLASH = 847,

        [System.Runtime.Serialization.EnumMember(Value = @"ONTRAC")]
        ONTRAC = 848,

        [System.Runtime.Serialization.EnumMember(Value = @"SAGAWA")]
        SAGAWA = 849,

        [System.Runtime.Serialization.EnumMember(Value = @"SIODEMKA")]
        SIODEMKA = 850,

        [System.Runtime.Serialization.EnumMember(Value = @"STARTRACK")]
        STARTRACK = 851,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_AU")]
        TNT_AU = 852,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_IT")]
        TNT_IT = 853,

        [System.Runtime.Serialization.EnumMember(Value = @"TRANSMISSION")]
        TRANSMISSION = 854,

        [System.Runtime.Serialization.EnumMember(Value = @"YAMATO")]
        YAMATO = 855,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_IT")]
        DHL_IT = 856,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_AT")]
        DHL_AT = 857,

        [System.Runtime.Serialization.EnumMember(Value = @"LOGISTICSWORLDWIDE_KR")]
        LOGISTICSWORLDWIDE_KR = 858,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS_SPAIN")]
        GLS_SPAIN = 859,

        [System.Runtime.Serialization.EnumMember(Value = @"AMAZON_UK_API")]
        AMAZON_UK_API = 860,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_FR_REFERENCE")]
        DPD_FR_REFERENCE = 861,

        [System.Runtime.Serialization.EnumMember(Value = @"DHLPARCEL_UK")]
        DHLPARCEL_UK = 862,

        [System.Runtime.Serialization.EnumMember(Value = @"MEGASAVE")]
        MEGASAVE = 863,

        [System.Runtime.Serialization.EnumMember(Value = @"QUALITYPOST")]
        QUALITYPOST = 864,

        [System.Runtime.Serialization.EnumMember(Value = @"IDS_LOGISTICS")]
        IDS_LOGISTICS = 865,

        [System.Runtime.Serialization.EnumMember(Value = @"JOYINGBOX")]
        JOYINGBOX = 866,

        [System.Runtime.Serialization.EnumMember(Value = @"PANTHER_ORDER_NUMBER")]
        PANTHER_ORDER_NUMBER = 867,

        [System.Runtime.Serialization.EnumMember(Value = @"WATKINS_SHEPARD")]
        WATKINS_SHEPARD = 868,

        [System.Runtime.Serialization.EnumMember(Value = @"FASTTRACK")]
        FASTTRACK = 869,

        [System.Runtime.Serialization.EnumMember(Value = @"UP_EXPRESS")]
        UP_EXPRESS = 870,

        [System.Runtime.Serialization.EnumMember(Value = @"ELOGISTICA")]
        ELOGISTICA = 871,

        [System.Runtime.Serialization.EnumMember(Value = @"ECOURIER")]
        ECOURIER = 872,

        [System.Runtime.Serialization.EnumMember(Value = @"CJ_PHILIPPINES")]
        CJ_PHILIPPINES = 873,

        [System.Runtime.Serialization.EnumMember(Value = @"SPEEDEX")]
        SPEEDEX = 874,

        [System.Runtime.Serialization.EnumMember(Value = @"ORANGECONNEX")]
        ORANGECONNEX = 875,

        [System.Runtime.Serialization.EnumMember(Value = @"TECOR")]
        TECOR = 876,

        [System.Runtime.Serialization.EnumMember(Value = @"SAEE")]
        SAEE = 877,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS_ITALY_FTP")]
        GLS_ITALY_FTP = 878,

        [System.Runtime.Serialization.EnumMember(Value = @"DELIVERE")]
        DELIVERE = 879,

        [System.Runtime.Serialization.EnumMember(Value = @"YYCOM")]
        YYCOM = 880,

        [System.Runtime.Serialization.EnumMember(Value = @"ADICIONAL_PT")]
        ADICIONAL_PT = 881,

        [System.Runtime.Serialization.EnumMember(Value = @"DKSH")]
        DKSH = 882,

        [System.Runtime.Serialization.EnumMember(Value = @"NIPPON_EXPRESS_FTP")]
        NIPPON_EXPRESS_FTP = 883,

        [System.Runtime.Serialization.EnumMember(Value = @"GOLS")]
        GOLS = 884,

        [System.Runtime.Serialization.EnumMember(Value = @"FUJEXP")]
        FUJEXP = 885,

        [System.Runtime.Serialization.EnumMember(Value = @"QTRACK")]
        QTRACK = 886,

        [System.Runtime.Serialization.EnumMember(Value = @"OMLOGISTICS_API")]
        OMLOGISTICS_API = 887,

        [System.Runtime.Serialization.EnumMember(Value = @"GDPHARM")]
        GDPHARM = 888,

        [System.Runtime.Serialization.EnumMember(Value = @"MISUMI_CN")]
        MISUMI_CN = 889,

        [System.Runtime.Serialization.EnumMember(Value = @"AIR_CANADA")]
        AIR_CANADA = 890,

        [System.Runtime.Serialization.EnumMember(Value = @"CITY56_WEBHOOK")]
        CITY56_WEBHOOK = 891,

        [System.Runtime.Serialization.EnumMember(Value = @"SAGAWA_API")]
        SAGAWA_API = 892,

        [System.Runtime.Serialization.EnumMember(Value = @"KEDAEX")]
        KEDAEX = 893,

        [System.Runtime.Serialization.EnumMember(Value = @"PGEON_API")]
        PGEON_API = 894,

        [System.Runtime.Serialization.EnumMember(Value = @"WEWORLDEXPRESS")]
        WEWORLDEXPRESS = 895,

        [System.Runtime.Serialization.EnumMember(Value = @"JT_LOGISTICS")]
        JT_LOGISTICS = 896,

        [System.Runtime.Serialization.EnumMember(Value = @"TRUSK")]
        TRUSK = 897,

        [System.Runtime.Serialization.EnumMember(Value = @"VIAXPRESS")]
        VIAXPRESS = 898,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_SUPPLYCHAIN_ID")]
        DHL_SUPPLYCHAIN_ID = 899,

        [System.Runtime.Serialization.EnumMember(Value = @"ZUELLIGPHARMA_SFTP")]
        ZUELLIGPHARMA_SFTP = 900,

        [System.Runtime.Serialization.EnumMember(Value = @"MEEST")]
        MEEST = 901,

        [System.Runtime.Serialization.EnumMember(Value = @"TOLL_PRIORITY")]
        TOLL_PRIORITY = 902,

        [System.Runtime.Serialization.EnumMember(Value = @"MOTHERSHIP_API")]
        MOTHERSHIP_API = 903,

        [System.Runtime.Serialization.EnumMember(Value = @"CAPITAL")]
        CAPITAL = 904,

        [System.Runtime.Serialization.EnumMember(Value = @"EUROPAKET_API")]
        EUROPAKET_API = 905,

        [System.Runtime.Serialization.EnumMember(Value = @"HFD")]
        HFD = 906,

        [System.Runtime.Serialization.EnumMember(Value = @"TOURLINE_REFERENCE")]
        TOURLINE_REFERENCE = 907,

        [System.Runtime.Serialization.EnumMember(Value = @"GIO_ECOURIER")]
        GIO_ECOURIER = 908,

        [System.Runtime.Serialization.EnumMember(Value = @"CN_LOGISTICS")]
        CN_LOGISTICS = 909,

        [System.Runtime.Serialization.EnumMember(Value = @"PANDION")]
        PANDION = 910,

        [System.Runtime.Serialization.EnumMember(Value = @"BPOST_API")]
        BPOST_API = 911,

        [System.Runtime.Serialization.EnumMember(Value = @"PASSPORTSHIPPING")]
        PASSPORTSHIPPING = 912,

        [System.Runtime.Serialization.EnumMember(Value = @"PAKAJO")]
        PAKAJO = 913,

        [System.Runtime.Serialization.EnumMember(Value = @"DACHSER")]
        DACHSER = 914,

        [System.Runtime.Serialization.EnumMember(Value = @"YUSEN_SFTP")]
        YUSEN_SFTP = 915,

        [System.Runtime.Serialization.EnumMember(Value = @"SHYPLITE")]
        SHYPLITE = 916,

        [System.Runtime.Serialization.EnumMember(Value = @"XYY")]
        XYY = 917,

        [System.Runtime.Serialization.EnumMember(Value = @"MWD")]
        MWD = 918,

        [System.Runtime.Serialization.EnumMember(Value = @"FAXECARGO")]
        FAXECARGO = 919,

        [System.Runtime.Serialization.EnumMember(Value = @"MAZET")]
        MAZET = 920,

        [System.Runtime.Serialization.EnumMember(Value = @"FIRST_LOGISTICS_API")]
        FIRST_LOGISTICS_API = 921,

        [System.Runtime.Serialization.EnumMember(Value = @"SPRINT_PACK")]
        SPRINT_PACK = 922,

        [System.Runtime.Serialization.EnumMember(Value = @"HERMES_DE_FTP")]
        HERMES_DE_FTP = 923,

        [System.Runtime.Serialization.EnumMember(Value = @"CONCISE")]
        CONCISE = 924,

        [System.Runtime.Serialization.EnumMember(Value = @"KERRY_EXPRESS_TW_API")]
        KERRY_EXPRESS_TW_API = 925,

        [System.Runtime.Serialization.EnumMember(Value = @"EWE")]
        EWE = 926,

        [System.Runtime.Serialization.EnumMember(Value = @"FASTDESPATCH")]
        FASTDESPATCH = 927,

        [System.Runtime.Serialization.EnumMember(Value = @"ABCUSTOM_SFTP")]
        ABCUSTOM_SFTP = 928,

        [System.Runtime.Serialization.EnumMember(Value = @"CHAZKI")]
        CHAZKI = 929,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPPIE")]
        SHIPPIE = 930,

        [System.Runtime.Serialization.EnumMember(Value = @"GEODIS_API")]
        GEODIS_API = 931,

        [System.Runtime.Serialization.EnumMember(Value = @"NAQEL_EXPRESS")]
        NAQEL_EXPRESS = 932,

        [System.Runtime.Serialization.EnumMember(Value = @"PAPA_WEBHOOK")]
        PAPA_WEBHOOK = 933,

        [System.Runtime.Serialization.EnumMember(Value = @"FORWARDAIR")]
        FORWARDAIR = 934,

        [System.Runtime.Serialization.EnumMember(Value = @"DIALOGO_LOGISTICA_API")]
        DIALOGO_LOGISTICA_API = 935,

        [System.Runtime.Serialization.EnumMember(Value = @"LALAMOVE_API")]
        LALAMOVE_API = 936,

        [System.Runtime.Serialization.EnumMember(Value = @"TOMYDOOR")]
        TOMYDOOR = 937,

        [System.Runtime.Serialization.EnumMember(Value = @"KRONOS_WEBHOOK")]
        KRONOS_WEBHOOK = 938,

        [System.Runtime.Serialization.EnumMember(Value = @"JTCARGO")]
        JTCARGO = 939,

        [System.Runtime.Serialization.EnumMember(Value = @"T_CAT")]
        T_CAT = 940,

        [System.Runtime.Serialization.EnumMember(Value = @"CONCISE_WEBHOOK")]
        CONCISE_WEBHOOK = 941,

        [System.Runtime.Serialization.EnumMember(Value = @"TELEPORT_WEBHOOK")]
        TELEPORT_WEBHOOK = 942,

        [System.Runtime.Serialization.EnumMember(Value = @"CUSTOMCO_API")]
        CUSTOMCO_API = 943,

        [System.Runtime.Serialization.EnumMember(Value = @"SPX_TH")]
        SPX_TH = 944,

        [System.Runtime.Serialization.EnumMember(Value = @"BOLLORE_LOGISTICS")]
        BOLLORE_LOGISTICS = 945,

        [System.Runtime.Serialization.EnumMember(Value = @"CLICKLINK_SFTP")]
        CLICKLINK_SFTP = 946,

        [System.Runtime.Serialization.EnumMember(Value = @"M3LOGISTICS")]
        M3LOGISTICS = 947,

        [System.Runtime.Serialization.EnumMember(Value = @"VNPOST_API")]
        VNPOST_API = 948,

        [System.Runtime.Serialization.EnumMember(Value = @"AXLEHIRE_FTP")]
        AXLEHIRE_FTP = 949,

        [System.Runtime.Serialization.EnumMember(Value = @"SHADOWFAX")]
        SHADOWFAX = 950,

        [System.Runtime.Serialization.EnumMember(Value = @"MYHERMES_UK_API")]
        MYHERMES_UK_API = 951,

        [System.Runtime.Serialization.EnumMember(Value = @"DAIICHI")]
        DAIICHI = 952,

        [System.Runtime.Serialization.EnumMember(Value = @"MENSAJEROSURBANOS_API")]
        MENSAJEROSURBANOS_API = 953,

        [System.Runtime.Serialization.EnumMember(Value = @"POLARSPEED")]
        POLARSPEED = 954,

        [System.Runtime.Serialization.EnumMember(Value = @"IDEXPRESS_ID")]
        IDEXPRESS_ID = 955,

        [System.Runtime.Serialization.EnumMember(Value = @"PAYO")]
        PAYO = 956,

        [System.Runtime.Serialization.EnumMember(Value = @"WHISTL_SFTP")]
        WHISTL_SFTP = 957,

        [System.Runtime.Serialization.EnumMember(Value = @"INTEX_DE")]
        INTEX_DE = 958,

        [System.Runtime.Serialization.EnumMember(Value = @"TRANS2U")]
        TRANS2U = 959,

        [System.Runtime.Serialization.EnumMember(Value = @"PRODUCTCAREGROUP_SFTP")]
        PRODUCTCAREGROUP_SFTP = 960,

        [System.Runtime.Serialization.EnumMember(Value = @"BIGSMART")]
        BIGSMART = 961,

        [System.Runtime.Serialization.EnumMember(Value = @"EXPEDITORS_API_REF")]
        EXPEDITORS_API_REF = 962,

        [System.Runtime.Serialization.EnumMember(Value = @"AITWORLDWIDE_API")]
        AITWORLDWIDE_API = 963,

        [System.Runtime.Serialization.EnumMember(Value = @"WORLDCOURIER")]
        WORLDCOURIER = 964,

        [System.Runtime.Serialization.EnumMember(Value = @"QUIQUP")]
        QUIQUP = 965,

        [System.Runtime.Serialization.EnumMember(Value = @"AGEDISS_SFTP")]
        AGEDISS_SFTP = 966,

        [System.Runtime.Serialization.EnumMember(Value = @"ANDREANI_API")]
        ANDREANI_API = 967,

        [System.Runtime.Serialization.EnumMember(Value = @"CRLEXPRESS")]
        CRLEXPRESS = 968,

        [System.Runtime.Serialization.EnumMember(Value = @"SMARTCAT")]
        SMARTCAT = 969,

        [System.Runtime.Serialization.EnumMember(Value = @"CROSSFLIGHT")]
        CROSSFLIGHT = 970,

        [System.Runtime.Serialization.EnumMember(Value = @"PROCARRIER")]
        PROCARRIER = 971,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_REFERENCE_API")]
        DHL_REFERENCE_API = 972,

        [System.Runtime.Serialization.EnumMember(Value = @"SEINO_API")]
        SEINO_API = 973,

        [System.Runtime.Serialization.EnumMember(Value = @"WSPEXPRESS")]
        WSPEXPRESS = 974,

        [System.Runtime.Serialization.EnumMember(Value = @"KRONOS")]
        KRONOS = 975,

        [System.Runtime.Serialization.EnumMember(Value = @"TOTAL_EXPRESS_API")]
        TOTAL_EXPRESS_API = 976,

        [System.Runtime.Serialization.EnumMember(Value = @"PARCLL")]
        PARCLL = 977,

        [System.Runtime.Serialization.EnumMember(Value = @"XPEDIGO")]
        XPEDIGO = 978,

        [System.Runtime.Serialization.EnumMember(Value = @"STAR_TRACK_WEBHOOK")]
        STAR_TRACK_WEBHOOK = 979,

        [System.Runtime.Serialization.EnumMember(Value = @"GPOST")]
        GPOST = 980,

        [System.Runtime.Serialization.EnumMember(Value = @"UCS")]
        UCS = 981,

        [System.Runtime.Serialization.EnumMember(Value = @"DMFGROUP")]
        DMFGROUP = 982,

        [System.Runtime.Serialization.EnumMember(Value = @"COORDINADORA_API")]
        COORDINADORA_API = 983,

        [System.Runtime.Serialization.EnumMember(Value = @"MARKEN")]
        MARKEN = 984,

        [System.Runtime.Serialization.EnumMember(Value = @"NTL")]
        NTL = 985,

        [System.Runtime.Serialization.EnumMember(Value = @"REDJEPAKKETJE")]
        REDJEPAKKETJE = 986,

        [System.Runtime.Serialization.EnumMember(Value = @"ALLIED_EXPRESS_FTP")]
        ALLIED_EXPRESS_FTP = 987,

        [System.Runtime.Serialization.EnumMember(Value = @"MONDIALRELAY_ES")]
        MONDIALRELAY_ES = 988,

        [System.Runtime.Serialization.EnumMember(Value = @"NAEKO_FTP")]
        NAEKO_FTP = 989,

        [System.Runtime.Serialization.EnumMember(Value = @"MHI")]
        MHI = 990,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPPIFY")]
        SHIPPIFY = 991,

        [System.Runtime.Serialization.EnumMember(Value = @"MALCA_AMIT_API")]
        MALCA_AMIT_API = 992,

        [System.Runtime.Serialization.EnumMember(Value = @"JTEXPRESS_SG_API")]
        JTEXPRESS_SG_API = 993,

        [System.Runtime.Serialization.EnumMember(Value = @"DACHSER_WEB")]
        DACHSER_WEB = 994,

        [System.Runtime.Serialization.EnumMember(Value = @"FLIGHTLG")]
        FLIGHTLG = 995,

        [System.Runtime.Serialization.EnumMember(Value = @"CAGO")]
        CAGO = 996,

        [System.Runtime.Serialization.EnumMember(Value = @"COM1EXPRESS")]
        COM1EXPRESS = 997,

        [System.Runtime.Serialization.EnumMember(Value = @"TONAMI_FTP")]
        TONAMI_FTP = 998,

        [System.Runtime.Serialization.EnumMember(Value = @"PACKFLEET")]
        PACKFLEET = 999,

        [System.Runtime.Serialization.EnumMember(Value = @"PUROLATOR_INTERNATIONAL")]
        PUROLATOR_INTERNATIONAL = 1000,

        [System.Runtime.Serialization.EnumMember(Value = @"WINESHIPPING_WEBHOOK")]
        WINESHIPPING_WEBHOOK = 1001,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_ES_SFTP")]
        DHL_ES_SFTP = 1002,

        [System.Runtime.Serialization.EnumMember(Value = @"PCHOME_API")]
        PCHOME_API = 1003,

        [System.Runtime.Serialization.EnumMember(Value = @"CESKAPOSTA_API")]
        CESKAPOSTA_API = 1004,

        [System.Runtime.Serialization.EnumMember(Value = @"GORUSH")]
        GORUSH = 1005,

        [System.Runtime.Serialization.EnumMember(Value = @"HOMERUNNER")]
        HOMERUNNER = 1006,

        [System.Runtime.Serialization.EnumMember(Value = @"AMAZON_ORDER")]
        AMAZON_ORDER = 1007,

        [System.Runtime.Serialization.EnumMember(Value = @"EFWNOW_API")]
        EFWNOW_API = 1008,

        [System.Runtime.Serialization.EnumMember(Value = @"CBL_LOGISTICA_API")]
        CBL_LOGISTICA_API = 1009,

        [System.Runtime.Serialization.EnumMember(Value = @"NIMBUSPOST")]
        NIMBUSPOST = 1010,

        [System.Runtime.Serialization.EnumMember(Value = @"LOGWIN_LOGISTICS")]
        LOGWIN_LOGISTICS = 1011,

        [System.Runtime.Serialization.EnumMember(Value = @"NOWLOG_API")]
        NOWLOG_API = 1012,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_NL")]
        DPD_NL = 1013,

        [System.Runtime.Serialization.EnumMember(Value = @"GODEPENDABLE")]
        GODEPENDABLE = 1014,

        [System.Runtime.Serialization.EnumMember(Value = @"ESDEX")]
        ESDEX = 1015,

        [System.Runtime.Serialization.EnumMember(Value = @"LOGISYSTEMS_SFTP")]
        LOGISYSTEMS_SFTP = 1016,

        [System.Runtime.Serialization.EnumMember(Value = @"EXPEDITORS")]
        EXPEDITORS = 1017,

        [System.Runtime.Serialization.EnumMember(Value = @"SNTGLOBAL_API")]
        SNTGLOBAL_API = 1018,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPX")]
        SHIPX = 1019,

        [System.Runtime.Serialization.EnumMember(Value = @"QINTL_API")]
        QINTL_API = 1020,

        [System.Runtime.Serialization.EnumMember(Value = @"PACKS")]
        PACKS = 1021,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTNL_INTERNATIONAL")]
        POSTNL_INTERNATIONAL = 1022,

        [System.Runtime.Serialization.EnumMember(Value = @"AMAZON_EMAIL_PUSH")]
        AMAZON_EMAIL_PUSH = 1023,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_API")]
        DHL_API = 1024,

        [System.Runtime.Serialization.EnumMember(Value = @"SPX")]
        SPX = 1025,

        [System.Runtime.Serialization.EnumMember(Value = @"AXLEHIRE")]
        AXLEHIRE = 1026,

        [System.Runtime.Serialization.EnumMember(Value = @"ICSCOURIER")]
        ICSCOURIER = 1027,

        [System.Runtime.Serialization.EnumMember(Value = @"DIALOGO_LOGISTICA")]
        DIALOGO_LOGISTICA = 1028,

        [System.Runtime.Serialization.EnumMember(Value = @"SHUNBANG_EXPRESS")]
        SHUNBANG_EXPRESS = 1029,

        [System.Runtime.Serialization.EnumMember(Value = @"TCS_API")]
        TCS_API = 1030,

        [System.Runtime.Serialization.EnumMember(Value = @"SF_EXPRESS_CN")]
        SF_EXPRESS_CN = 1031,

        [System.Runtime.Serialization.EnumMember(Value = @"PACKETA")]
        PACKETA = 1032,

        [System.Runtime.Serialization.EnumMember(Value = @"SIC_TELIWAY")]
        SIC_TELIWAY = 1033,

        [System.Runtime.Serialization.EnumMember(Value = @"MONDIALRELAY_FR")]
        MONDIALRELAY_FR = 1034,

        [System.Runtime.Serialization.EnumMember(Value = @"INTIME_FTP")]
        INTIME_FTP = 1035,

        [System.Runtime.Serialization.EnumMember(Value = @"JD_EXPRESS")]
        JD_EXPRESS = 1036,

        [System.Runtime.Serialization.EnumMember(Value = @"FASTBOX")]
        FASTBOX = 1037,

        [System.Runtime.Serialization.EnumMember(Value = @"PATHEON")]
        PATHEON = 1038,

        [System.Runtime.Serialization.EnumMember(Value = @"INDIA_POST")]
        INDIA_POST = 1039,

        [System.Runtime.Serialization.EnumMember(Value = @"TIPSA_REF")]
        TIPSA_REF = 1040,

        [System.Runtime.Serialization.EnumMember(Value = @"ECOFREIGHT")]
        ECOFREIGHT = 1041,

        [System.Runtime.Serialization.EnumMember(Value = @"VOX")]
        VOX = 1042,

        [System.Runtime.Serialization.EnumMember(Value = @"DIRECTFREIGHT_AU_REF")]
        DIRECTFREIGHT_AU_REF = 1043,

        [System.Runtime.Serialization.EnumMember(Value = @"BESTTRANSPORT_SFTP")]
        BESTTRANSPORT_SFTP = 1044,

        [System.Runtime.Serialization.EnumMember(Value = @"AUSTRALIA_POST_API")]
        AUSTRALIA_POST_API = 1045,

        [System.Runtime.Serialization.EnumMember(Value = @"FRAGILEPAK_SFTP")]
        FRAGILEPAK_SFTP = 1046,

        [System.Runtime.Serialization.EnumMember(Value = @"FLIPXP")]
        FLIPXP = 1047,

        [System.Runtime.Serialization.EnumMember(Value = @"VALUE_WEBHOOK")]
        VALUE_WEBHOOK = 1048,

        [System.Runtime.Serialization.EnumMember(Value = @"DAESHIN")]
        DAESHIN = 1049,

        [System.Runtime.Serialization.EnumMember(Value = @"SHERPA")]
        SHERPA = 1050,

        [System.Runtime.Serialization.EnumMember(Value = @"MWD_API")]
        MWD_API = 1051,

        [System.Runtime.Serialization.EnumMember(Value = @"SMARTKARGO")]
        SMARTKARGO = 1052,

        [System.Runtime.Serialization.EnumMember(Value = @"DNJ_EXPRESS")]
        DNJ_EXPRESS = 1053,

        [System.Runtime.Serialization.EnumMember(Value = @"GOPEOPLE")]
        GOPEOPLE = 1054,

        [System.Runtime.Serialization.EnumMember(Value = @"MYSENDLE_API")]
        MYSENDLE_API = 1055,

        [System.Runtime.Serialization.EnumMember(Value = @"ARAMEX_API")]
        ARAMEX_API = 1056,

        [System.Runtime.Serialization.EnumMember(Value = @"PIDGE")]
        PIDGE = 1057,

        [System.Runtime.Serialization.EnumMember(Value = @"THAIPARCELS")]
        THAIPARCELS = 1058,

        [System.Runtime.Serialization.EnumMember(Value = @"PANTHER_REFERENCE_API")]
        PANTHER_REFERENCE_API = 1059,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTAPLUS")]
        POSTAPLUS = 1060,

        [System.Runtime.Serialization.EnumMember(Value = @"BUFFALO")]
        BUFFALO = 1061,

        [System.Runtime.Serialization.EnumMember(Value = @"U_ENVIOS")]
        U_ENVIOS = 1062,

        [System.Runtime.Serialization.EnumMember(Value = @"ELITE_CO")]
        ELITE_CO = 1063,

        [System.Runtime.Serialization.EnumMember(Value = @"BARQEXP")]
        BARQEXP = 1064,

        [System.Runtime.Serialization.EnumMember(Value = @"ROCHE_INTERNAL_SFTP")]
        ROCHE_INTERNAL_SFTP = 1065,

        [System.Runtime.Serialization.EnumMember(Value = @"DBSCHENKER_ICELAND")]
        DBSCHENKER_ICELAND = 1066,

        [System.Runtime.Serialization.EnumMember(Value = @"TNT_FR_REFERENCE")]
        TNT_FR_REFERENCE = 1067,

        [System.Runtime.Serialization.EnumMember(Value = @"NEWGISTICSAPI")]
        NEWGISTICSAPI = 1068,

        [System.Runtime.Serialization.EnumMember(Value = @"GLOVO")]
        GLOVO = 1069,

        [System.Runtime.Serialization.EnumMember(Value = @"GWLOGIS_API")]
        GWLOGIS_API = 1070,

        [System.Runtime.Serialization.EnumMember(Value = @"SPREETAIL_API")]
        SPREETAIL_API = 1071,

        [System.Runtime.Serialization.EnumMember(Value = @"MOOVA")]
        MOOVA = 1072,

        [System.Runtime.Serialization.EnumMember(Value = @"PLYCONGROUP")]
        PLYCONGROUP = 1073,

        [System.Runtime.Serialization.EnumMember(Value = @"USPS_WEBHOOK")]
        USPS_WEBHOOK = 1074,

        [System.Runtime.Serialization.EnumMember(Value = @"REIMAGINEDELIVERY")]
        REIMAGINEDELIVERY = 1075,

        [System.Runtime.Serialization.EnumMember(Value = @"EDF_FTP")]
        EDF_FTP = 1076,

        [System.Runtime.Serialization.EnumMember(Value = @"DAO365")]
        DAO365 = 1077,

        [System.Runtime.Serialization.EnumMember(Value = @"BIOCAIR_FTP")]
        BIOCAIR_FTP = 1078,

        [System.Runtime.Serialization.EnumMember(Value = @"RANSA_WEBHOOK")]
        RANSA_WEBHOOK = 1079,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPXPRES")]
        SHIPXPRES = 1080,

        [System.Runtime.Serialization.EnumMember(Value = @"COURANT_PLUS_API")]
        COURANT_PLUS_API = 1081,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPA")]
        SHIPA = 1082,

        [System.Runtime.Serialization.EnumMember(Value = @"HOMELOGISTICS")]
        HOMELOGISTICS = 1083,

        [System.Runtime.Serialization.EnumMember(Value = @"DX")]
        DX = 1084,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTE_ITALIANE_PACCOCELERE")]
        POSTE_ITALIANE_PACCOCELERE = 1085,

        [System.Runtime.Serialization.EnumMember(Value = @"TOLL_WEBHOOK")]
        TOLL_WEBHOOK = 1086,

        [System.Runtime.Serialization.EnumMember(Value = @"LCTBR_API")]
        LCTBR_API = 1087,

        [System.Runtime.Serialization.EnumMember(Value = @"DX_FREIGHT")]
        DX_FREIGHT = 1088,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_SFTP")]
        DHL_SFTP = 1089,

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPROCKET")]
        SHIPROCKET = 1090,

        [System.Runtime.Serialization.EnumMember(Value = @"UBER_WEBHOOK")]
        UBER_WEBHOOK = 1091,

        [System.Runtime.Serialization.EnumMember(Value = @"STATOVERNIGHT")]
        STATOVERNIGHT = 1092,

        [System.Runtime.Serialization.EnumMember(Value = @"BURD")]
        BURD = 1093,

        [System.Runtime.Serialization.EnumMember(Value = @"FASTSHIP")]
        FASTSHIP = 1094,

        [System.Runtime.Serialization.EnumMember(Value = @"IBVENTURE_WEBHOOK")]
        IBVENTURE_WEBHOOK = 1095,

        [System.Runtime.Serialization.EnumMember(Value = @"GATI_KWE_API")]
        GATI_KWE_API = 1096,

        [System.Runtime.Serialization.EnumMember(Value = @"CRYOPDP_FTP")]
        CRYOPDP_FTP = 1097,

        [System.Runtime.Serialization.EnumMember(Value = @"HUBBED")]
        HUBBED = 1098,

        [System.Runtime.Serialization.EnumMember(Value = @"TIPSA_API")]
        TIPSA_API = 1099,

        [System.Runtime.Serialization.EnumMember(Value = @"ARASKARGO")]
        ARASKARGO = 1100,

        [System.Runtime.Serialization.EnumMember(Value = @"THIJS_NL")]
        THIJS_NL = 1101,

        [System.Runtime.Serialization.EnumMember(Value = @"ATSHEALTHCARE_REFERENCE")]
        ATSHEALTHCARE_REFERENCE = 1102,

        [System.Runtime.Serialization.EnumMember(Value = @"99MINUTOS")]
        _99MINUTOS = 1103,

        [System.Runtime.Serialization.EnumMember(Value = @"HELLENIC_POST")]
        HELLENIC_POST = 1104,

        [System.Runtime.Serialization.EnumMember(Value = @"HSM_GLOBAL")]
        HSM_GLOBAL = 1105,

        [System.Runtime.Serialization.EnumMember(Value = @"MNX")]
        MNX = 1106,

        [System.Runtime.Serialization.EnumMember(Value = @"NMTRANSFER")]
        NMTRANSFER = 1107,

        [System.Runtime.Serialization.EnumMember(Value = @"LOGYSTO")]
        LOGYSTO = 1108,

        [System.Runtime.Serialization.EnumMember(Value = @"INDIA_POST_INT")]
        INDIA_POST_INT = 1109,

        [System.Runtime.Serialization.EnumMember(Value = @"AMAZON_FBA_SWISHIP_IN")]
        AMAZON_FBA_SWISHIP_IN = 1110,

        [System.Runtime.Serialization.EnumMember(Value = @"SRT_TRANSPORT")]
        SRT_TRANSPORT = 1111,

        [System.Runtime.Serialization.EnumMember(Value = @"BOMI")]
        BOMI = 1112,

        [System.Runtime.Serialization.EnumMember(Value = @"DELIVERR_SFTP")]
        DELIVERR_SFTP = 1113,

        [System.Runtime.Serialization.EnumMember(Value = @"HSDEXPRESS")]
        HSDEXPRESS = 1114,

        [System.Runtime.Serialization.EnumMember(Value = @"SIMPLETIRE_WEBHOOK")]
        SIMPLETIRE_WEBHOOK = 1115,

        [System.Runtime.Serialization.EnumMember(Value = @"HUNTER_EXPRESS_SFTP")]
        HUNTER_EXPRESS_SFTP = 1116,

        [System.Runtime.Serialization.EnumMember(Value = @"UPS_API")]
        UPS_API = 1117,

        [System.Runtime.Serialization.EnumMember(Value = @"WOOYOUNG_LOGISTICS_SFTP")]
        WOOYOUNG_LOGISTICS_SFTP = 1118,

        [System.Runtime.Serialization.EnumMember(Value = @"PHSE_API")]
        PHSE_API = 1119,

        [System.Runtime.Serialization.EnumMember(Value = @"WISH_EMAIL_PUSH")]
        WISH_EMAIL_PUSH = 1120,

        [System.Runtime.Serialization.EnumMember(Value = @"NORTHLINE")]
        NORTHLINE = 1121,

        [System.Runtime.Serialization.EnumMember(Value = @"MEDAFRICA")]
        MEDAFRICA = 1122,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_AT_SFTP")]
        DPD_AT_SFTP = 1123,

        [System.Runtime.Serialization.EnumMember(Value = @"ANTERAJA")]
        ANTERAJA = 1124,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_GLOBAL_FORWARDING_API")]
        DHL_GLOBAL_FORWARDING_API = 1125,

        [System.Runtime.Serialization.EnumMember(Value = @"LBCEXPRESS_API")]
        LBCEXPRESS_API = 1126,

        [System.Runtime.Serialization.EnumMember(Value = @"SIMSGLOBAL")]
        SIMSGLOBAL = 1127,

        [System.Runtime.Serialization.EnumMember(Value = @"CDLDELIVERS")]
        CDLDELIVERS = 1128,

        [System.Runtime.Serialization.EnumMember(Value = @"TYP")]
        TYP = 1129,

        [System.Runtime.Serialization.EnumMember(Value = @"TESTING_COURIER_WEBHOOK")]
        TESTING_COURIER_WEBHOOK = 1130,

        [System.Runtime.Serialization.EnumMember(Value = @"PANDAGO_API")]
        PANDAGO_API = 1131,

        [System.Runtime.Serialization.EnumMember(Value = @"ROYAL_MAIL_FTP")]
        ROYAL_MAIL_FTP = 1132,

        [System.Runtime.Serialization.EnumMember(Value = @"THUNDEREXPRESS")]
        THUNDEREXPRESS = 1133,

        [System.Runtime.Serialization.EnumMember(Value = @"SECRETLAB_WEBHOOK")]
        SECRETLAB_WEBHOOK = 1134,

        [System.Runtime.Serialization.EnumMember(Value = @"SETEL")]
        SETEL = 1135,

        [System.Runtime.Serialization.EnumMember(Value = @"JD_WORLDWIDE")]
        JD_WORLDWIDE = 1136,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_RU_API")]
        DPD_RU_API = 1137,

        [System.Runtime.Serialization.EnumMember(Value = @"ARGENTS_WEBHOOK")]
        ARGENTS_WEBHOOK = 1138,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTONE")]
        POSTONE = 1139,

        [System.Runtime.Serialization.EnumMember(Value = @"TUSKLOGISTICS")]
        TUSKLOGISTICS = 1140,

        [System.Runtime.Serialization.EnumMember(Value = @"RHENUS_UK_API")]
        RHENUS_UK_API = 1141,

        [System.Runtime.Serialization.EnumMember(Value = @"TAQBIN_SG_API")]
        TAQBIN_SG_API = 1142,

        [System.Runtime.Serialization.EnumMember(Value = @"INNTRALOG_SFTP")]
        INNTRALOG_SFTP = 1143,

        [System.Runtime.Serialization.EnumMember(Value = @"DAYROSS")]
        DAYROSS = 1144,

        [System.Runtime.Serialization.EnumMember(Value = @"CORREOSEXPRESS_API")]
        CORREOSEXPRESS_API = 1145,

        [System.Runtime.Serialization.EnumMember(Value = @"INTERNATIONAL_SEUR_API")]
        INTERNATIONAL_SEUR_API = 1146,

        [System.Runtime.Serialization.EnumMember(Value = @"YODEL_API")]
        YODEL_API = 1147,

        [System.Runtime.Serialization.EnumMember(Value = @"HEROEXPRESS")]
        HEROEXPRESS = 1148,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_SUPPLYCHAIN_IN")]
        DHL_SUPPLYCHAIN_IN = 1149,

        [System.Runtime.Serialization.EnumMember(Value = @"URGENT_CARGUS")]
        URGENT_CARGUS = 1150,

        [System.Runtime.Serialization.EnumMember(Value = @"FRONTDOORCORP")]
        FRONTDOORCORP = 1151,

        [System.Runtime.Serialization.EnumMember(Value = @"JTEXPRESS_PH")]
        JTEXPRESS_PH = 1152,

        [System.Runtime.Serialization.EnumMember(Value = @"PARCELSTARS_WEBHOOK")]
        PARCELSTARS_WEBHOOK = 1153,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_SK_SFTP")]
        DPD_SK_SFTP = 1154,

        [System.Runtime.Serialization.EnumMember(Value = @"MOVIANTO")]
        MOVIANTO = 1155,

        [System.Runtime.Serialization.EnumMember(Value = @"OZEPARTS_SHIPPING")]
        OZEPARTS_SHIPPING = 1156,

        [System.Runtime.Serialization.EnumMember(Value = @"KARGOMKOLAY")]
        KARGOMKOLAY = 1157,

        [System.Runtime.Serialization.EnumMember(Value = @"TRUNKRS")]
        TRUNKRS = 1158,

        [System.Runtime.Serialization.EnumMember(Value = @"OMNIRPS_WEBHOOK")]
        OMNIRPS_WEBHOOK = 1159,

        [System.Runtime.Serialization.EnumMember(Value = @"CHILEXPRESS")]
        CHILEXPRESS = 1160,

        [System.Runtime.Serialization.EnumMember(Value = @"TESTING_COURIER")]
        TESTING_COURIER = 1161,

        [System.Runtime.Serialization.EnumMember(Value = @"JNE_API")]
        JNE_API = 1162,

        [System.Runtime.Serialization.EnumMember(Value = @"BJSHOMEDELIVERY_FTP")]
        BJSHOMEDELIVERY_FTP = 1163,

        [System.Runtime.Serialization.EnumMember(Value = @"DEXPRESS_WEBHOOK")]
        DEXPRESS_WEBHOOK = 1164,

        [System.Runtime.Serialization.EnumMember(Value = @"USPS_API")]
        USPS_API = 1165,

        [System.Runtime.Serialization.EnumMember(Value = @"TRANSVIRTUAL")]
        TRANSVIRTUAL = 1166,

        [System.Runtime.Serialization.EnumMember(Value = @"SOLISTICA_API")]
        SOLISTICA_API = 1167,

        [System.Runtime.Serialization.EnumMember(Value = @"CHIENVENTURE_WEBHOOK")]
        CHIENVENTURE_WEBHOOK = 1168,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_UK_SFTP")]
        DPD_UK_SFTP = 1169,

        [System.Runtime.Serialization.EnumMember(Value = @"INPOST_UK")]
        INPOST_UK = 1170,

        [System.Runtime.Serialization.EnumMember(Value = @"JAVIT")]
        JAVIT = 1171,

        [System.Runtime.Serialization.EnumMember(Value = @"ZTO_DOMESTIC")]
        ZTO_DOMESTIC = 1172,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_GT_API")]
        DHL_GT_API = 1173,

        [System.Runtime.Serialization.EnumMember(Value = @"CEVA_TRACKING")]
        CEVA_TRACKING = 1174,

        [System.Runtime.Serialization.EnumMember(Value = @"KOMON_EXPRESS")]
        KOMON_EXPRESS = 1175,

        [System.Runtime.Serialization.EnumMember(Value = @"EASTWESTCOURIER_FTP")]
        EASTWESTCOURIER_FTP = 1176,

        [System.Runtime.Serialization.EnumMember(Value = @"DANNIAO")]
        DANNIAO = 1177,

        [System.Runtime.Serialization.EnumMember(Value = @"SPECTRAN")]
        SPECTRAN = 1178,

        [System.Runtime.Serialization.EnumMember(Value = @"DELIVER_IT")]
        DELIVER_IT = 1179,

        [System.Runtime.Serialization.EnumMember(Value = @"RELAISCOLIS")]
        RELAISCOLIS = 1180,

        [System.Runtime.Serialization.EnumMember(Value = @"GLS_SPAIN_API")]
        GLS_SPAIN_API = 1181,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTPLUS")]
        POSTPLUS = 1182,

        [System.Runtime.Serialization.EnumMember(Value = @"AIRTERRA")]
        AIRTERRA = 1183,

        [System.Runtime.Serialization.EnumMember(Value = @"GIO_ECOURIER_API")]
        GIO_ECOURIER_API = 1184,

        [System.Runtime.Serialization.EnumMember(Value = @"DPD_CH_SFTP")]
        DPD_CH_SFTP = 1185,

        [System.Runtime.Serialization.EnumMember(Value = @"FEDEX_API")]
        FEDEX_API = 1186,

        [System.Runtime.Serialization.EnumMember(Value = @"INTERSMARTTRANS")]
        INTERSMARTTRANS = 1187,

        [System.Runtime.Serialization.EnumMember(Value = @"HERMES_UK_SFTP")]
        HERMES_UK_SFTP = 1188,

        [System.Runtime.Serialization.EnumMember(Value = @"EXELOT_FTP")]
        EXELOT_FTP = 1189,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_PA_API")]
        DHL_PA_API = 1190,

        [System.Runtime.Serialization.EnumMember(Value = @"VIRTRANSPORT_SFTP")]
        VIRTRANSPORT_SFTP = 1191,

        [System.Runtime.Serialization.EnumMember(Value = @"WORLDNET")]
        WORLDNET = 1192,

        [System.Runtime.Serialization.EnumMember(Value = @"INSTABOX_WEBHOOK")]
        INSTABOX_WEBHOOK = 1193,

        [System.Runtime.Serialization.EnumMember(Value = @"KNG")]
        KNG = 1194,

        [System.Runtime.Serialization.EnumMember(Value = @"FLASHEXPRESS_WEBHOOK")]
        FLASHEXPRESS_WEBHOOK = 1195,

        [System.Runtime.Serialization.EnumMember(Value = @"MAGYAR_POSTA_API")]
        MAGYAR_POSTA_API = 1196,

        [System.Runtime.Serialization.EnumMember(Value = @"WESHIP_API")]
        WESHIP_API = 1197,

        [System.Runtime.Serialization.EnumMember(Value = @"OHI_WEBHOOK")]
        OHI_WEBHOOK = 1198,

        [System.Runtime.Serialization.EnumMember(Value = @"MUDITA")]
        MUDITA = 1199,

        [System.Runtime.Serialization.EnumMember(Value = @"BLUEDART_API")]
        BLUEDART_API = 1200,

        [System.Runtime.Serialization.EnumMember(Value = @"T_CAT_API")]
        T_CAT_API = 1201,

        [System.Runtime.Serialization.EnumMember(Value = @"ADS")]
        ADS = 1202,

        [System.Runtime.Serialization.EnumMember(Value = @"HERMES_IT")]
        HERMES_IT = 1203,

        [System.Runtime.Serialization.EnumMember(Value = @"FITZMARK_API")]
        FITZMARK_API = 1204,

        [System.Runtime.Serialization.EnumMember(Value = @"POSTI_API")]
        POSTI_API = 1205,

        [System.Runtime.Serialization.EnumMember(Value = @"SMSA_EXPRESS_WEBHOOK")]
        SMSA_EXPRESS_WEBHOOK = 1206,

        [System.Runtime.Serialization.EnumMember(Value = @"TAMERGROUP_WEBHOOK")]
        TAMERGROUP_WEBHOOK = 1207,

        [System.Runtime.Serialization.EnumMember(Value = @"LIVRAPIDE")]
        LIVRAPIDE = 1208,

        [System.Runtime.Serialization.EnumMember(Value = @"NIPPON_EXPRESS")]
        NIPPON_EXPRESS = 1209,

        [System.Runtime.Serialization.EnumMember(Value = @"BETTERTRUCKS")]
        BETTERTRUCKS = 1210,

        [System.Runtime.Serialization.EnumMember(Value = @"FAN")]
        FAN = 1211,

        [System.Runtime.Serialization.EnumMember(Value = @"PB_USPSFLATS_FTP")]
        PB_USPSFLATS_FTP = 1212,

        [System.Runtime.Serialization.EnumMember(Value = @"PARCELRIGHT")]
        PARCELRIGHT = 1213,

        [System.Runtime.Serialization.EnumMember(Value = @"ITHINKLOGISTICS")]
        ITHINKLOGISTICS = 1214,

        [System.Runtime.Serialization.EnumMember(Value = @"KERRY_EXPRESS_TH_WEBHOOK")]
        KERRY_EXPRESS_TH_WEBHOOK = 1215,

        [System.Runtime.Serialization.EnumMember(Value = @"ECOUTIER")]
        ECOUTIER = 1216,

        [System.Runtime.Serialization.EnumMember(Value = @"SHOWL")]
        SHOWL = 1217,

        [System.Runtime.Serialization.EnumMember(Value = @"BRT_IT_API")]
        BRT_IT_API = 1218,

        [System.Runtime.Serialization.EnumMember(Value = @"RIXONHK_API")]
        RIXONHK_API = 1219,

        [System.Runtime.Serialization.EnumMember(Value = @"DBSCHENKER_API")]
        DBSCHENKER_API = 1220,

        [System.Runtime.Serialization.EnumMember(Value = @"ILYANGLOGIS")]
        ILYANGLOGIS = 1221,

        [System.Runtime.Serialization.EnumMember(Value = @"MAIL_BOX_ETC")]
        MAIL_BOX_ETC = 1222,

        [System.Runtime.Serialization.EnumMember(Value = @"WESHIP")]
        WESHIP = 1223,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_GLOBAL_MAIL_API")]
        DHL_GLOBAL_MAIL_API = 1224,

        [System.Runtime.Serialization.EnumMember(Value = @"ACTIVOS24_API")]
        ACTIVOS24_API = 1225,

        [System.Runtime.Serialization.EnumMember(Value = @"ATSHEALTHCARE")]
        ATSHEALTHCARE = 1226,

        [System.Runtime.Serialization.EnumMember(Value = @"LUWJISTIK")]
        LUWJISTIK = 1227,

        [System.Runtime.Serialization.EnumMember(Value = @"GW_WORLD")]
        GW_WORLD = 1228,

        [System.Runtime.Serialization.EnumMember(Value = @"FAIRSENDEN_API")]
        FAIRSENDEN_API = 1229,

        [System.Runtime.Serialization.EnumMember(Value = @"SERVIP_WEBHOOK")]
        SERVIP_WEBHOOK = 1230,

        [System.Runtime.Serialization.EnumMember(Value = @"SWISHIP")]
        SWISHIP = 1231,

        [System.Runtime.Serialization.EnumMember(Value = @"TANET")]
        TANET = 1232,

        [System.Runtime.Serialization.EnumMember(Value = @"HOTSIN_CARGO")]
        HOTSIN_CARGO = 1233,

        [System.Runtime.Serialization.EnumMember(Value = @"DIREX")]
        DIREX = 1234,

        [System.Runtime.Serialization.EnumMember(Value = @"HUANTONG")]
        HUANTONG = 1235,

        [System.Runtime.Serialization.EnumMember(Value = @"IMILE_API")]
        IMILE_API = 1236,

        [System.Runtime.Serialization.EnumMember(Value = @"BDMNET")]
        BDMNET = 1237,

        [System.Runtime.Serialization.EnumMember(Value = @"AUEXPRESS")]
        AUEXPRESS = 1238,

        [System.Runtime.Serialization.EnumMember(Value = @"NYTLOGISTICS")]
        NYTLOGISTICS = 1239,

        [System.Runtime.Serialization.EnumMember(Value = @"DSV_REFERENCE")]
        DSV_REFERENCE = 1240,

        [System.Runtime.Serialization.EnumMember(Value = @"NOVOFARMA_WEBHOOK")]
        NOVOFARMA_WEBHOOK = 1241,

        [System.Runtime.Serialization.EnumMember(Value = @"AITWORLDWIDE_SFTP")]
        AITWORLDWIDE_SFTP = 1242,

        [System.Runtime.Serialization.EnumMember(Value = @"SHOPOLIVE")]
        SHOPOLIVE = 1243,

        [System.Runtime.Serialization.EnumMember(Value = @"FNF_ZA")]
        FNF_ZA = 1244,

        [System.Runtime.Serialization.EnumMember(Value = @"DHL_ECOMMERCE_GC")]
        DHL_ECOMMERCE_GC = 1245,

        [System.Runtime.Serialization.EnumMember(Value = @"FETCHR")]
        FETCHR = 1246,

        [System.Runtime.Serialization.EnumMember(Value = @"STARLINKS_API")]
        STARLINKS_API = 1247,

        [System.Runtime.Serialization.EnumMember(Value = @"YYEXPRESS")]
        YYEXPRESS = 1248,

        [System.Runtime.Serialization.EnumMember(Value = @"SERVIENTREGA")]
        SERVIENTREGA = 1249,

        [System.Runtime.Serialization.EnumMember(Value = @"HANJIN")]
        HANJIN = 1250,

        [System.Runtime.Serialization.EnumMember(Value = @"SPANISH_SEUR_FTP")]
        SPANISH_SEUR_FTP = 1251,

        [System.Runtime.Serialization.EnumMember(Value = @"DX_B2B_CONNUM")]
        DX_B2B_CONNUM = 1252,

        [System.Runtime.Serialization.EnumMember(Value = @"HELTHJEM_API")]
        HELTHJEM_API = 1253,

        [System.Runtime.Serialization.EnumMember(Value = @"INEXPOST")]
        INEXPOST = 1254,

        [System.Runtime.Serialization.EnumMember(Value = @"A2B_BA")]
        A2B_BA = 1255,

        [System.Runtime.Serialization.EnumMember(Value = @"RHENUS_GROUP")]
        RHENUS_GROUP = 1256,

        [System.Runtime.Serialization.EnumMember(Value = @"SBERLOGISTICS_RU")]
        SBERLOGISTICS_RU = 1257,

        [System.Runtime.Serialization.EnumMember(Value = @"MALCA_AMIT")]
        MALCA_AMIT = 1258,

        [System.Runtime.Serialization.EnumMember(Value = @"PPL")]
        PPL = 1259,

        [System.Runtime.Serialization.EnumMember(Value = @"OSM_WORLDWIDE_SFTP")]
        OSM_WORLDWIDE_SFTP = 1260,

        [System.Runtime.Serialization.EnumMember(Value = @"ACILOGISTIX")]
        ACILOGISTIX = 1261,

        [System.Runtime.Serialization.EnumMember(Value = @"OPTIMACOURIER")]
        OPTIMACOURIER = 1262,

        [System.Runtime.Serialization.EnumMember(Value = @"NOVA_POSHTA_API")]
        NOVA_POSHTA_API = 1263,

        [System.Runtime.Serialization.EnumMember(Value = @"LOGGI")]
        LOGGI = 1264,

        [System.Runtime.Serialization.EnumMember(Value = @"YIFAN")]
        YIFAN = 1265,

        [System.Runtime.Serialization.EnumMember(Value = @"MYDYNALOGIC")]
        MYDYNALOGIC = 1266,

        [System.Runtime.Serialization.EnumMember(Value = @"MORNINGLOBAL")]
        MORNINGLOBAL = 1267,

        [System.Runtime.Serialization.EnumMember(Value = @"CONCISE_API")]
        CONCISE_API = 1268,

        [System.Runtime.Serialization.EnumMember(Value = @"FXTRAN")]
        FXTRAN = 1269,

        [System.Runtime.Serialization.EnumMember(Value = @"DELIVERYOURPARCEL_ZA")]
        DELIVERYOURPARCEL_ZA = 1270,

        [System.Runtime.Serialization.EnumMember(Value = @"UPARCEL")]
        UPARCEL = 1271,

        [System.Runtime.Serialization.EnumMember(Value = @"MOBI_BR")]
        MOBI_BR = 1272,

        [System.Runtime.Serialization.EnumMember(Value = @"LOGINEXT_WEBHOOK")]
        LOGINEXT_WEBHOOK = 1273,

        [System.Runtime.Serialization.EnumMember(Value = @"EMS")]
        EMS = 1274,

        [System.Runtime.Serialization.EnumMember(Value = @"SPEEDY")]
        SPEEDY = 1275,

    }

    /// <summary>
    /// The tracking information for a shipment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Shipment_tracker
    {
        /// <summary>
        /// The PayPal transaction ID.
        /// </summary>

        [JsonPropertyName("transaction_id")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]*$")]
        public string Transaction_id { get; set; }

        /// <summary>
        /// The tracking number for the shipment. This property supports Unicode.
        /// </summary>

        [JsonPropertyName("tracking_number")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
        public string Tracking_number { get; set; }

        /// <summary>
        /// The type of tracking number.
        /// </summary>

        [JsonPropertyName("tracking_number_type")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Shipment_tracking_number_type Tracking_number_type { get; set; }

        [JsonPropertyName("status")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Shipment_tracking_status Status { get; set; }

        /// <summary>
        /// The date when the shipment occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("shipment_date")]
        [System.ComponentModel.DataAnnotations.StringLength(10, MinimumLength = 10)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$")]
        public string Shipment_date { get; set; }

        [JsonPropertyName("carrier")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Shipment_carrier Carrier { get; set; }

        /// <summary>
        /// The name of the carrier for the shipment. Provide this value only if the carrier parameter is OTHER. This property supports Unicode.
        /// </summary>

        [JsonPropertyName("carrier_name_other")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
        public string Carrier_name_other { get; set; }

        /// <summary>
        /// The postage payment ID. This property supports Unicode.
        /// </summary>

        [JsonPropertyName("postage_payment_id")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
        public string Postage_payment_id { get; set; }

        /// <summary>
        /// If true, sends an email notification to the buyer of the PayPal transaction. The email contains the tracking information that was uploaded through the API.
        /// </summary>

        [JsonPropertyName("notify_buyer")]
        public bool Notify_buyer { get; set; } = false;

        /// <summary>
        /// The quantity of items shipped.
        /// </summary>

        [JsonPropertyName("quantity")]
        [System.ComponentModel.DataAnnotations.Range(1, 100)]
        public int Quantity { get; set; }

        /// <summary>
        /// Indicates whether the carrier validated the tracking number.
        /// </summary>

        [JsonPropertyName("tracking_number_validated")]
        public bool Tracking_number_validated { get; set; }

        /// <summary>
        /// The date and time when the tracking information was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("last_updated_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Last_updated_time { get; set; }

        /// <summary>
        /// To denote whether the shipment is sent forward to the receiver or returned back.
        /// </summary>

        [JsonPropertyName("shipment_direction")]
        [System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Shipment_trackerShipment_direction Shipment_direction { get; set; }

        /// <summary>
        /// To denote which party uploaded the shipment tracking info.
        /// </summary>

        [JsonPropertyName("shipment_uploader")]
        [System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Shipment_trackerShipment_uploader Shipment_uploader { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The tracking details of an order.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Order_tracker_request : Shipment_tracker
    {
        /// <summary>
        /// The PayPal capture ID.
        /// </summary>

        [JsonPropertyName("capture_id")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]*$")]
        public string Capture_id { get; set; }

        /// <summary>
        /// If true, sends an email notification to the payer of the PayPal transaction. The email contains the tracking information that was uploaded through the API.
        /// </summary>

        [JsonPropertyName("notify_payer")]
        public bool Notify_payer { get; set; } = false;

        /// <summary>
        /// An array of details of items in the shipment.
        /// </summary>

        [JsonPropertyName("items")]
        public ICollection<Tracker_item> Items { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Create400
    {

        [JsonPropertyName("details")]
        public ICollection<details15> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Create403
    {

        [JsonPropertyName("details")]
        public ICollection<details16> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Create422
    {

        [JsonPropertyName("details")]
        public ICollection<details17> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class patch_400
    {

        [JsonPropertyName("details")]
        public ICollection<details18> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Patch403
    {

        [JsonPropertyName("details")]
        public ICollection<details19> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Patch404
    {

        [JsonPropertyName("details")]
        public ICollection<details20> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class patch_422
    {

        [JsonPropertyName("details")]
        public ICollection<details21> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response : Error_default
    {

        [JsonPropertyName("details")]
        public ICollection<Details> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response2 : Error_401
    {

        [JsonPropertyName("details")]
        public ICollection<details> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response3 : Error_422
    {

        [JsonPropertyName("details")]
        public ICollection<details4> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response4 : Error_401
    {

        [JsonPropertyName("details")]
        public ICollection<details> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response5 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response6 : Error_default
    {

        [JsonPropertyName("details")]
        public ICollection<details5> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response7 : Error_401
    {

        [JsonPropertyName("details")]
        public ICollection<details> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response8 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response9 : Error_422
    {

        [JsonPropertyName("details")]
        public ICollection<details6> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response10 : Error_default
    {

        [JsonPropertyName("details")]
        public ICollection<details7> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response11 : Error_403
    {

        [JsonPropertyName("details")]
        public ICollection<details2> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response12 : Error_422
    {

        [JsonPropertyName("details")]
        public ICollection<details8> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response13 : Error_default
    {

        [JsonPropertyName("details")]
        public ICollection<details9> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response14 : Error_401
    {

        [JsonPropertyName("details")]
        public ICollection<details> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response15 : Error_403
    {

        [JsonPropertyName("details")]
        public ICollection<details10> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response16 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response17 : Error_422
    {

        [JsonPropertyName("details")]
        public ICollection<details11> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response18 : Error_default
    {

        [JsonPropertyName("details")]
        public ICollection<details12> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response19 : Error_401
    {

        [JsonPropertyName("details")]
        public ICollection<details> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response20 : Error_403
    {

        [JsonPropertyName("details")]
        public ICollection<details13> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response21 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response22 : Error_422
    {

        [JsonPropertyName("details")]
        public ICollection<details14> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response23 : Error_default
    {

        [JsonPropertyName("details")]
        public ICollection<details15> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response24 : Error_403
    {

        [JsonPropertyName("details")]
        public ICollection<details16> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response25 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response26 : Error_422
    {

        [JsonPropertyName("details")]
        public ICollection<details17> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response27 : Error_default
    {

        [JsonPropertyName("details")]
        public ICollection<details18> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response28 : Error_403
    {

        [JsonPropertyName("details")]
        public ICollection<details19> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response29 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details20> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response30 : Error_422
    {

        [JsonPropertyName("details")]
        public ICollection<details21> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Details
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
#pragma warning disable CS8981
    public partial class details
#pragma warning restore CS8981
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details2
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details3
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details4
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_defaultName
    {

        [System.Runtime.Serialization.EnumMember(Value = @"INVALID_REQUEST")]
        INVALID_REQUEST = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_defaultMessage
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Request is not well-formed, syntactically incorrect, or violates schema.")]
        Request_is_not_wellFormed__syntactically_incorrect__or_violates_schema_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_link_descriptionMethod
    {

        [System.Runtime.Serialization.EnumMember(Value = @"GET")]
        GET = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"POST")]
        POST = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PUT")]
        PUT = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"DELETE")]
        DELETE = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"PATCH")]
        PATCH = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_401Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"AUTHENTICATION_FAILURE")]
        AUTHENTICATION_FAILURE = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_401Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Authentication failed due to missing authorization header, or invalid authentication credentials.")]
        Authentication_failed_due_to_missing_authorization_header__or_invalid_authentication_credentials_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_403Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_AUTHORIZED")]
        NOT_AUTHORIZED = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_403Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Authorization failed due to insufficient permissions.")]
        Authorization_failed_due_to_insufficient_permissions_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_404Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"RESOURCE_NOT_FOUND")]
        RESOURCE_NOT_FOUND = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_404Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"The specified resource does not exist.")]
        The_specified_resource_does_not_exist_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_409Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"RESOURCE_CONFLICT")]
        RESOURCE_CONFLICT = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_409Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"The server has detected a conflict while processing this request.")]
        The_server_has_detected_a_conflict_while_processing_this_request_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_415Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNSUPPORTED_MEDIA_TYPE")]
        UNSUPPORTED_MEDIA_TYPE = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_415Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"The server does not support the request payload's media type.")]
        The_server_does_not_support_the_request_payload_s_media_type_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_422Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNPROCESSABLE_ENTITY")]
        UNPROCESSABLE_ENTITY = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_422Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"The requested action could not be performed, semantically incorrect, or failed business validation.")]
        The_requested_action_could_not_be_performed__semantically_incorrect__or_failed_business_validation_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_500Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"INTERNAL_SERVER_ERROR")]
        INTERNAL_SERVER_ERROR = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_500Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"An internal server error occurred.")]
        An_internal_server_error_occurred_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_503Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"SERVICE_UNAVAILABLE")]
        SERVICE_UNAVAILABLE = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_503Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Service Unavailable.")]
        Service_Unavailable_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Tax_infoTax_id_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"BR_CPF")]
        BR_CPF = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"BR_CNPJ")]
        BR_CNPJ = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Address_details
    {
        /// <summary>
        /// The street number.
        /// </summary>

        [JsonPropertyName("street_number")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Street_number { get; set; }

        /// <summary>
        /// The street name. Just `Drury` in `Drury Lane`.
        /// </summary>

        [JsonPropertyName("street_name")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Street_name { get; set; }

        /// <summary>
        /// The street type. For example, avenue, boulevard, road, or expressway.
        /// </summary>

        [JsonPropertyName("street_type")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Street_type { get; set; }

        /// <summary>
        /// The delivery service. Post office box, bag number, or post office name.
        /// </summary>

        [JsonPropertyName("delivery_service")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Delivery_service { get; set; }

        /// <summary>
        /// A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, &lt;code&gt;Craven House&lt;/code&gt;.
        /// </summary>

        [JsonPropertyName("building_name")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Building_name { get; set; }

        /// <summary>
        /// The first-order entity below a named building or location that represents the sub-premises. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.
        /// </summary>

        [JsonPropertyName("sub_building")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Sub_building { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ItemCategory
    {

        [System.Runtime.Serialization.EnumMember(Value = @"DIGITAL_GOODS")]
        DIGITAL_GOODS = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PHYSICAL_GOODS")]
        PHYSICAL_GOODS = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DONATION")]
        DONATION = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Shipping_detailType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"SHIPPING")]
        SHIPPING = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PICKUP_IN_PERSON")]
        PICKUP_IN_PERSON = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PICKUP_IN_STORE")]
        PICKUP_IN_STORE = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PICKUP_FROM_PERSON")]
        PICKUP_FROM_PERSON = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TokenType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"BILLING_AGREEMENT")]
        BILLING_AGREEMENT = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Address_details2
    {
        /// <summary>
        /// The street number.
        /// </summary>

        [JsonPropertyName("street_number")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Street_number { get; set; }

        /// <summary>
        /// The street name. Just `Drury` in `Drury Lane`.
        /// </summary>

        [JsonPropertyName("street_name")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Street_name { get; set; }

        /// <summary>
        /// The street type. For example, avenue, boulevard, road, or expressway.
        /// </summary>

        [JsonPropertyName("street_type")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Street_type { get; set; }

        /// <summary>
        /// The delivery service. Post office box, bag number, or post office name.
        /// </summary>

        [JsonPropertyName("delivery_service")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Delivery_service { get; set; }

        /// <summary>
        /// A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, &lt;code&gt;Craven House&lt;/code&gt;.
        /// </summary>

        [JsonPropertyName("building_name")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Building_name { get; set; }

        /// <summary>
        /// The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.
        /// </summary>

        [JsonPropertyName("sub_building")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Sub_building { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Vault_paypal_wallet_baseUsage_pattern
    {

        [System.Runtime.Serialization.EnumMember(Value = @"IMMEDIATE")]
        IMMEDIATE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"DEFERRED")]
        DEFERRED = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"RECURRING_PREPAID")]
        RECURRING_PREPAID = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"RECURRING_POSTPAID")]
        RECURRING_POSTPAID = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"THRESHOLD_PREPAID")]
        THRESHOLD_PREPAID = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"THRESHOLD_POSTPAID")]
        THRESHOLD_POSTPAID = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Vault_paypal_wallet_baseUsage_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"MERCHANT")]
        MERCHANT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PLATFORM")]
        PLATFORM = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Vault_paypal_wallet_baseCustomer_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CONSUMER")]
        CONSUMER = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS")]
        BUSINESS = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Paypal_wallet_experience_contextShipping_preference
    {

        [System.Runtime.Serialization.EnumMember(Value = @"GET_FROM_FILE")]
        GET_FROM_FILE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"NO_SHIPPING")]
        NO_SHIPPING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"SET_PROVIDED_ADDRESS")]
        SET_PROVIDED_ADDRESS = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Paypal_wallet_experience_contextLanding_page
    {

        [System.Runtime.Serialization.EnumMember(Value = @"LOGIN")]
        LOGIN = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"GUEST_CHECKOUT")]
        GUEST_CHECKOUT = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"NO_PREFERENCE")]
        NO_PREFERENCE = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Paypal_wallet_experience_contextUser_action
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CONTINUE")]
        CONTINUE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PAY_NOW")]
        PAY_NOW = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Paypal_wallet_experience_contextPayment_method_preference
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNRESTRICTED")]
        UNRESTRICTED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"IMMEDIATE_PAYMENT_REQUIRED")]
        IMMEDIATE_PAYMENT_REQUIRED = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Experience_context_baseShipping_preference
    {

        [System.Runtime.Serialization.EnumMember(Value = @"GET_FROM_FILE")]
        GET_FROM_FILE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"NO_SHIPPING")]
        NO_SHIPPING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"SET_PROVIDED_ADDRESS")]
        SET_PROVIDED_ADDRESS = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Apple_pay_decrypted_token_dataPayment_data_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"3DSECURE")]
        _3DSECURE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"EMV")]
        EMV = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Venmo_wallet_experience_contextShipping_preference
    {

        [System.Runtime.Serialization.EnumMember(Value = @"GET_FROM_FILE")]
        GET_FROM_FILE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"NO_SHIPPING")]
        NO_SHIPPING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"SET_PROVIDED_ADDRESS")]
        SET_PROVIDED_ADDRESS = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Vault_venmo_wallet_baseUsage_pattern
    {

        [System.Runtime.Serialization.EnumMember(Value = @"IMMEDIATE")]
        IMMEDIATE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"DEFERRED")]
        DEFERRED = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"RECURRING_PREPAID")]
        RECURRING_PREPAID = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"RECURRING_POSTPAID")]
        RECURRING_POSTPAID = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"THRESHOLD_PREPAID")]
        THRESHOLD_PREPAID = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"THRESHOLD_POSTPAID")]
        THRESHOLD_POSTPAID = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Vault_venmo_wallet_baseUsage_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"MERCHANT")]
        MERCHANT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PLATFORM")]
        PLATFORM = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Vault_venmo_wallet_baseCustomer_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CONSUMER")]
        CONSUMER = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"BUSINESS")]
        BUSINESS = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Payment_methodStandard_entry_class_code
    {

        [System.Runtime.Serialization.EnumMember(Value = @"TEL")]
        TEL = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"WEB")]
        WEB = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"CCD")]
        CCD = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PPD")]
        PPD = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Order_application_contextLanding_page
    {

        [System.Runtime.Serialization.EnumMember(Value = @"LOGIN")]
        LOGIN = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"BILLING")]
        BILLING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"NO_PREFERENCE")]
        NO_PREFERENCE = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Order_application_contextShipping_preference
    {

        [System.Runtime.Serialization.EnumMember(Value = @"GET_FROM_FILE")]
        GET_FROM_FILE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"NO_SHIPPING")]
        NO_SHIPPING = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"SET_PROVIDED_ADDRESS")]
        SET_PROVIDED_ADDRESS = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Order_application_contextUser_action
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CONTINUE")]
        CONTINUE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PAY_NOW")]
        PAY_NOW = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Link_descriptionMethod
    {

        [System.Runtime.Serialization.EnumMember(Value = @"GET")]
        GET = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"POST")]
        POST = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PUT")]
        PUT = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"DELETE")]
        DELETE = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"HEAD")]
        HEAD = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"CONNECT")]
        CONNECT = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"OPTIONS")]
        OPTIONS = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"PATCH")]
        PATCH = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Vault_responseStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"VAULTED")]
        VAULTED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CREATED")]
        CREATED = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"APPROVED")]
        APPROVED = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Card_responseType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREDIT")]
        CREDIT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"DEBIT")]
        DEBIT = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PREPAID")]
        PREPAID = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"UNKNOWN")]
        UNKNOWN = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Paypal_wallet_responseAccount_status
    {

        [System.Runtime.Serialization.EnumMember(Value = @"VERIFIED")]
        VERIFIED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"UNVERIFIED")]
        UNVERIFIED = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Authorization_status_detailsReason
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING_REVIEW")]
        PENDING_REVIEW = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Authorization_statusStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATED")]
        CREATED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CAPTURED")]
        CAPTURED = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DENIED")]
        DENIED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PARTIALLY_CAPTURED")]
        PARTIALLY_CAPTURED = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"VOIDED")]
        VOIDED = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
        PENDING = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Seller_protectionStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ELIGIBLE")]
        ELIGIBLE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PARTIALLY_ELIGIBLE")]
        PARTIALLY_ELIGIBLE = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_ELIGIBLE")]
        NOT_ELIGIBLE = 2,

    }

    /// <summary>
    /// The condition that is covered for the transaction.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Dispute_categories
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ITEM_NOT_RECEIVED")]
        ITEM_NOT_RECEIVED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"UNAUTHORIZED_TRANSACTION")]
        UNAUTHORIZED_TRANSACTION = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Processor_responseAvs_code
    {

        [System.Runtime.Serialization.EnumMember(Value = @"A")]
        A = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"B")]
        B = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"C")]
        C = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"D")]
        D = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"E")]
        E = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"F")]
        F = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"G")]
        G = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"I")]
        I = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"M")]
        M = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"N")]
        N = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"P")]
        P = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"R")]
        R = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"S")]
        S = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"U")]
        U = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"W")]
        W = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"X")]
        X = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"Y")]
        Y = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"Z")]
        Z = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"Null")]
        Null = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"0")]
        _0 = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        _1 = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        _2 = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        _3 = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        _4 = 23,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Processor_responseCvv_code
    {

        [System.Runtime.Serialization.EnumMember(Value = @"E")]
        E = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"I")]
        I = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"M")]
        M = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"N")]
        N = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"P")]
        P = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"S")]
        S = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"U")]
        U = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"X")]
        X = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"All others")]
        All_others = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"0")]
        _0 = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        _1 = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        _2 = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        _3 = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        _4 = 13,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Processor_responseResponse_code
    {

        [System.Runtime.Serialization.EnumMember(Value = @"0000")]
        _0000 = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"00N7")]
        _00N7 = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"0100")]
        _0100 = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"0390")]
        _0390 = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"0500")]
        _0500 = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"0580")]
        _0580 = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"0800")]
        _0800 = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"0880")]
        _0880 = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"0890")]
        _0890 = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"0960")]
        _0960 = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"0R00")]
        _0R00 = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"1000")]
        _1000 = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"10BR")]
        _10BR = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"1300")]
        _1300 = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"1310")]
        _1310 = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"1312")]
        _1312 = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"1317")]
        _1317 = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"1320")]
        _1320 = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"1330")]
        _1330 = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"1335")]
        _1335 = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"1340")]
        _1340 = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"1350")]
        _1350 = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"1352")]
        _1352 = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"1360")]
        _1360 = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"1370")]
        _1370 = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"1380")]
        _1380 = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"1382")]
        _1382 = 26,

        [System.Runtime.Serialization.EnumMember(Value = @"1384")]
        _1384 = 27,

        [System.Runtime.Serialization.EnumMember(Value = @"1390")]
        _1390 = 28,

        [System.Runtime.Serialization.EnumMember(Value = @"1393")]
        _1393 = 29,

        [System.Runtime.Serialization.EnumMember(Value = @"5100")]
        _5100 = 30,

        [System.Runtime.Serialization.EnumMember(Value = @"5110")]
        _5110 = 31,

        [System.Runtime.Serialization.EnumMember(Value = @"5120")]
        _5120 = 32,

        [System.Runtime.Serialization.EnumMember(Value = @"5130")]
        _5130 = 33,

        [System.Runtime.Serialization.EnumMember(Value = @"5135")]
        _5135 = 34,

        [System.Runtime.Serialization.EnumMember(Value = @"5140")]
        _5140 = 35,

        [System.Runtime.Serialization.EnumMember(Value = @"5150")]
        _5150 = 36,

        [System.Runtime.Serialization.EnumMember(Value = @"5160")]
        _5160 = 37,

        [System.Runtime.Serialization.EnumMember(Value = @"5170")]
        _5170 = 38,

        [System.Runtime.Serialization.EnumMember(Value = @"5180")]
        _5180 = 39,

        [System.Runtime.Serialization.EnumMember(Value = @"5190")]
        _5190 = 40,

        [System.Runtime.Serialization.EnumMember(Value = @"5200")]
        _5200 = 41,

        [System.Runtime.Serialization.EnumMember(Value = @"5210")]
        _5210 = 42,

        [System.Runtime.Serialization.EnumMember(Value = @"5400")]
        _5400 = 43,

        [System.Runtime.Serialization.EnumMember(Value = @"5500")]
        _5500 = 44,

        [System.Runtime.Serialization.EnumMember(Value = @"5650")]
        _5650 = 45,

        [System.Runtime.Serialization.EnumMember(Value = @"5700")]
        _5700 = 46,

        [System.Runtime.Serialization.EnumMember(Value = @"5710")]
        _5710 = 47,

        [System.Runtime.Serialization.EnumMember(Value = @"5800")]
        _5800 = 48,

        [System.Runtime.Serialization.EnumMember(Value = @"5900")]
        _5900 = 49,

        [System.Runtime.Serialization.EnumMember(Value = @"5910")]
        _5910 = 50,

        [System.Runtime.Serialization.EnumMember(Value = @"5920")]
        _5920 = 51,

        [System.Runtime.Serialization.EnumMember(Value = @"5930")]
        _5930 = 52,

        [System.Runtime.Serialization.EnumMember(Value = @"5950")]
        _5950 = 53,

        [System.Runtime.Serialization.EnumMember(Value = @"6300")]
        _6300 = 54,

        [System.Runtime.Serialization.EnumMember(Value = @"7600")]
        _7600 = 55,

        [System.Runtime.Serialization.EnumMember(Value = @"7700")]
        _7700 = 56,

        [System.Runtime.Serialization.EnumMember(Value = @"7710")]
        _7710 = 57,

        [System.Runtime.Serialization.EnumMember(Value = @"7800")]
        _7800 = 58,

        [System.Runtime.Serialization.EnumMember(Value = @"7900")]
        _7900 = 59,

        [System.Runtime.Serialization.EnumMember(Value = @"8000")]
        _8000 = 60,

        [System.Runtime.Serialization.EnumMember(Value = @"8010")]
        _8010 = 61,

        [System.Runtime.Serialization.EnumMember(Value = @"8020")]
        _8020 = 62,

        [System.Runtime.Serialization.EnumMember(Value = @"8030")]
        _8030 = 63,

        [System.Runtime.Serialization.EnumMember(Value = @"8100")]
        _8100 = 64,

        [System.Runtime.Serialization.EnumMember(Value = @"8110")]
        _8110 = 65,

        [System.Runtime.Serialization.EnumMember(Value = @"8220")]
        _8220 = 66,

        [System.Runtime.Serialization.EnumMember(Value = @"9100")]
        _9100 = 67,

        [System.Runtime.Serialization.EnumMember(Value = @"9500")]
        _9500 = 68,

        [System.Runtime.Serialization.EnumMember(Value = @"9510")]
        _9510 = 69,

        [System.Runtime.Serialization.EnumMember(Value = @"9520")]
        _9520 = 70,

        [System.Runtime.Serialization.EnumMember(Value = @"9530")]
        _9530 = 71,

        [System.Runtime.Serialization.EnumMember(Value = @"9540")]
        _9540 = 72,

        [System.Runtime.Serialization.EnumMember(Value = @"9600")]
        _9600 = 73,

        [System.Runtime.Serialization.EnumMember(Value = @"PCNR")]
        PCNR = 74,

        [System.Runtime.Serialization.EnumMember(Value = @"PCVV")]
        PCVV = 75,

        [System.Runtime.Serialization.EnumMember(Value = @"PP06")]
        PP06 = 76,

        [System.Runtime.Serialization.EnumMember(Value = @"PPRN")]
        PPRN = 77,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAD")]
        PPAD = 78,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAB")]
        PPAB = 79,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAE")]
        PPAE = 80,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAG")]
        PPAG = 81,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAI")]
        PPAI = 82,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAR")]
        PPAR = 83,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAU")]
        PPAU = 84,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAV")]
        PPAV = 85,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAX")]
        PPAX = 86,

        [System.Runtime.Serialization.EnumMember(Value = @"PPBG")]
        PPBG = 87,

        [System.Runtime.Serialization.EnumMember(Value = @"PPC2")]
        PPC2 = 88,

        [System.Runtime.Serialization.EnumMember(Value = @"PPCE")]
        PPCE = 89,

        [System.Runtime.Serialization.EnumMember(Value = @"PPCO")]
        PPCO = 90,

        [System.Runtime.Serialization.EnumMember(Value = @"PPCR")]
        PPCR = 91,

        [System.Runtime.Serialization.EnumMember(Value = @"PPCT")]
        PPCT = 92,

        [System.Runtime.Serialization.EnumMember(Value = @"PPCU")]
        PPCU = 93,

        [System.Runtime.Serialization.EnumMember(Value = @"PPD3")]
        PPD3 = 94,

        [System.Runtime.Serialization.EnumMember(Value = @"PPDC")]
        PPDC = 95,

        [System.Runtime.Serialization.EnumMember(Value = @"PPDI")]
        PPDI = 96,

        [System.Runtime.Serialization.EnumMember(Value = @"PPDV")]
        PPDV = 97,

        [System.Runtime.Serialization.EnumMember(Value = @"PPDT")]
        PPDT = 98,

        [System.Runtime.Serialization.EnumMember(Value = @"PPEF")]
        PPEF = 99,

        [System.Runtime.Serialization.EnumMember(Value = @"PPEL")]
        PPEL = 100,

        [System.Runtime.Serialization.EnumMember(Value = @"PPER")]
        PPER = 101,

        [System.Runtime.Serialization.EnumMember(Value = @"PPEX")]
        PPEX = 102,

        [System.Runtime.Serialization.EnumMember(Value = @"PPFE")]
        PPFE = 103,

        [System.Runtime.Serialization.EnumMember(Value = @"PPFI")]
        PPFI = 104,

        [System.Runtime.Serialization.EnumMember(Value = @"PPFR")]
        PPFR = 105,

        [System.Runtime.Serialization.EnumMember(Value = @"PPFV")]
        PPFV = 106,

        [System.Runtime.Serialization.EnumMember(Value = @"PPGR")]
        PPGR = 107,

        [System.Runtime.Serialization.EnumMember(Value = @"PPH1")]
        PPH1 = 108,

        [System.Runtime.Serialization.EnumMember(Value = @"PPIF")]
        PPIF = 109,

        [System.Runtime.Serialization.EnumMember(Value = @"PPII")]
        PPII = 110,

        [System.Runtime.Serialization.EnumMember(Value = @"PPIM")]
        PPIM = 111,

        [System.Runtime.Serialization.EnumMember(Value = @"PPIT")]
        PPIT = 112,

        [System.Runtime.Serialization.EnumMember(Value = @"PPLR")]
        PPLR = 113,

        [System.Runtime.Serialization.EnumMember(Value = @"PPLS")]
        PPLS = 114,

        [System.Runtime.Serialization.EnumMember(Value = @"PPMB")]
        PPMB = 115,

        [System.Runtime.Serialization.EnumMember(Value = @"PPMC")]
        PPMC = 116,

        [System.Runtime.Serialization.EnumMember(Value = @"PPMD")]
        PPMD = 117,

        [System.Runtime.Serialization.EnumMember(Value = @"PPNC")]
        PPNC = 118,

        [System.Runtime.Serialization.EnumMember(Value = @"PPNL")]
        PPNL = 119,

        [System.Runtime.Serialization.EnumMember(Value = @"PPNM")]
        PPNM = 120,

        [System.Runtime.Serialization.EnumMember(Value = @"PPNT")]
        PPNT = 121,

        [System.Runtime.Serialization.EnumMember(Value = @"PPPH")]
        PPPH = 122,

        [System.Runtime.Serialization.EnumMember(Value = @"PPPI")]
        PPPI = 123,

        [System.Runtime.Serialization.EnumMember(Value = @"PPPM")]
        PPPM = 124,

        [System.Runtime.Serialization.EnumMember(Value = @"PPQC")]
        PPQC = 125,

        [System.Runtime.Serialization.EnumMember(Value = @"PPRE")]
        PPRE = 126,

        [System.Runtime.Serialization.EnumMember(Value = @"PPRF")]
        PPRF = 127,

        [System.Runtime.Serialization.EnumMember(Value = @"PPRR")]
        PPRR = 128,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS0")]
        PPS0 = 129,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS1")]
        PPS1 = 130,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS2")]
        PPS2 = 131,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS3")]
        PPS3 = 132,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS4")]
        PPS4 = 133,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS5")]
        PPS5 = 134,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS6")]
        PPS6 = 135,

        [System.Runtime.Serialization.EnumMember(Value = @"PPSC")]
        PPSC = 136,

        [System.Runtime.Serialization.EnumMember(Value = @"PPSD")]
        PPSD = 137,

        [System.Runtime.Serialization.EnumMember(Value = @"PPSE")]
        PPSE = 138,

        [System.Runtime.Serialization.EnumMember(Value = @"PPTE")]
        PPTE = 139,

        [System.Runtime.Serialization.EnumMember(Value = @"PPTF")]
        PPTF = 140,

        [System.Runtime.Serialization.EnumMember(Value = @"PPTI")]
        PPTI = 141,

        [System.Runtime.Serialization.EnumMember(Value = @"PPTR")]
        PPTR = 142,

        [System.Runtime.Serialization.EnumMember(Value = @"PPTT")]
        PPTT = 143,

        [System.Runtime.Serialization.EnumMember(Value = @"PPTV")]
        PPTV = 144,

        [System.Runtime.Serialization.EnumMember(Value = @"PPUA")]
        PPUA = 145,

        [System.Runtime.Serialization.EnumMember(Value = @"PPUC")]
        PPUC = 146,

        [System.Runtime.Serialization.EnumMember(Value = @"PPUE")]
        PPUE = 147,

        [System.Runtime.Serialization.EnumMember(Value = @"PPUI")]
        PPUI = 148,

        [System.Runtime.Serialization.EnumMember(Value = @"PPUP")]
        PPUP = 149,

        [System.Runtime.Serialization.EnumMember(Value = @"PPUR")]
        PPUR = 150,

        [System.Runtime.Serialization.EnumMember(Value = @"PPVC")]
        PPVC = 151,

        [System.Runtime.Serialization.EnumMember(Value = @"PPVE")]
        PPVE = 152,

        [System.Runtime.Serialization.EnumMember(Value = @"PPVT")]
        PPVT = 153,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Processor_responsePayment_advice_code
    {

        [System.Runtime.Serialization.EnumMember(Value = @"01")]
        _01 = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"02")]
        _02 = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"03")]
        _03 = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"21")]
        _21 = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Capture_status_detailsReason
    {

        [System.Runtime.Serialization.EnumMember(Value = @"BUYER_COMPLAINT")]
        BUYER_COMPLAINT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CHARGEBACK")]
        CHARGEBACK = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"ECHECK")]
        ECHECK = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"INTERNATIONAL_WITHDRAWAL")]
        INTERNATIONAL_WITHDRAWAL = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
        OTHER = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING_REVIEW")]
        PENDING_REVIEW = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION")]
        RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"REFUNDED")]
        REFUNDED = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"TRANSACTION_APPROVED_AWAITING_FUNDING")]
        TRANSACTION_APPROVED_AWAITING_FUNDING = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"UNILATERAL")]
        UNILATERAL = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"VERIFICATION_REQUIRED")]
        VERIFICATION_REQUIRED = 10,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Capture_statusStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETED")]
        COMPLETED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"DECLINED")]
        DECLINED = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PARTIALLY_REFUNDED")]
        PARTIALLY_REFUNDED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
        PENDING = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"REFUNDED")]
        REFUNDED = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"FAILED")]
        FAILED = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Refund_status_detailsReason
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ECHECK")]
        ECHECK = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Refund_statusStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CANCELLED")]
        CANCELLED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"FAILED")]
        FAILED = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
        PENDING = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETED")]
        COMPLETED = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Seller_payable_breakdown
    {
        /// <summary>
        /// The amount that the payee refunded to the payer.
        /// </summary>

        [JsonPropertyName("gross_amount")]
        public Money Gross_amount { get; set; }

        /// <summary>
        /// The PayPal fee that was refunded to the payer in the currency of the transaction. This fee might not match the PayPal fee that the payee paid when the payment was captured.
        /// </summary>

        [JsonPropertyName("paypal_fee")]
        public Money Paypal_fee { get; set; }

        /// <summary>
        /// The PayPal fee that was refunded to the payer in the receivable currency. Returned only in cases when the receivable currency is different from transaction currency. Example 'CNY'.
        /// </summary>

        [JsonPropertyName("paypal_fee_in_receivable_currency")]
        public Money Paypal_fee_in_receivable_currency { get; set; }

        /// <summary>
        /// The net amount that the payee's account is debited in the transaction currency. The net amount is calculated as &lt;code&gt;gross_amount&lt;/code&gt; minus &lt;code&gt;paypal_fee&lt;/code&gt; minus &lt;code&gt;platform_fees&lt;/code&gt;.
        /// </summary>

        [JsonPropertyName("net_amount")]
        public Money Net_amount { get; set; }

        /// <summary>
        /// The net amount that the payee's account is debited in the receivable currency. Returned only in cases when the receivable currency is different from transaction currency. Example 'CNY'.
        /// </summary>

        [JsonPropertyName("net_amount_in_receivable_currency")]
        public Money Net_amount_in_receivable_currency { get; set; }

        /// <summary>
        /// An array of platform or partner fees, commissions, or brokerage fees for the refund.
        /// </summary>

        [JsonPropertyName("platform_fees")]
        [System.ComponentModel.DataAnnotations.MaxLength(1)]
        public ICollection<Platform_fee> Platform_fees { get; set; }

        /// <summary>
        /// An array of breakdown values for the net amount. Returned when the currency of the refund is different from the currency of the PayPal account where the payee holds their funds.
        /// </summary>

        [JsonPropertyName("net_amount_breakdown")]
        public ICollection<Net_amount_breakdown_item> Net_amount_breakdown { get; set; }

        /// <summary>
        /// The total amount refunded from the original capture to date. For example, if a payer makes a $100 purchase and was refunded $20 a week ago and was refunded $30 in this refund, the `gross_amount` is $30 for this refund and the `total_refunded_amount` is $50.
        /// </summary>

        [JsonPropertyName("total_refunded_amount")]
        public Money Total_refunded_amount { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum PatchOp
    {

        [System.Runtime.Serialization.EnumMember(Value = @"add")]
        Add = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"remove")]
        Remove = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"replace")]
        Replace = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"move")]
        Move = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"copy")]
        Copy = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"test")]
        Test = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details5
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details6
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details7
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details8
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details9
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details10
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details11
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details12
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details13
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details14
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Shipment_trackerShipment_direction
    {

        [System.Runtime.Serialization.EnumMember(Value = @"FORWARD")]
        FORWARD = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"RETURN")]
        RETURN = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Shipment_trackerShipment_uploader
    {

        [System.Runtime.Serialization.EnumMember(Value = @"MERCHANT")]
        MERCHANT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CONSUMER")]
        CONSUMER = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PARTNER")]
        PARTNER = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details15
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details16
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details17
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details18
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details19
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details20
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details21
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 108
#pragma warning restore 114
#pragma warning restore 472
#pragma warning restore 612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625