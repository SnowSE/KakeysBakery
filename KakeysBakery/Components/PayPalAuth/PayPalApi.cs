
// <auto-generated>
//     This code was generated by Refitter.
// </auto-generated>


using GeneratedCode;
using Refit;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using System.Threading.Tasks;

namespace KakeysBakery.Components.PayPalAuth
{
    [System.CodeDom.Compiler.GeneratedCode("Refitter", "0.9.9.0")]
    public partial interface IPayments
    {
        /// <summary>Show details for authorized payment</summary>
        /// <remarks>Shows details for an authorized payment, by ID.</remarks>
        /// <param name="authorization_id">The PayPal-generated ID for the authorized payment to void.</param>
        /// <returns>A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body that shows authorization details.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>401</term>
        /// <description>Authentication failed due to missing authorization header, or invalid authentication credentials.</description>
        /// </item>
        /// <item>
        /// <term>403</term>
        /// <description>The request failed because the caller has insufficient permissions.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The request failed because the resource does not exist.</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>The request failed because an internal server error occurred.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Get("/v2/payments/authorizations/{authorization_id}")]
        Task<Authorization2> AuthorizationsGet(string authorization_id);

        /// <summary>Capture authorized payment</summary>
        /// <remarks>Captures an authorized payment, by ID.</remarks>
        /// <param name="authorization_id">The PayPal-generated ID for the authorized payment to void.</param>
        /// <param name="payPal_Request_Id">The server stores keys for 45 days.</param>
        /// <param name="prefer">The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul></param>
        /// <returns>A successful request returns the HTTP <code>201 Created</code> status code and a JSON response body that shows captured payment details.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>400</term>
        /// <description>The request failed because it is not well-formed or is syntactically incorrect or violates schema.</description>
        /// </item>
        /// <item>
        /// <term>401</term>
        /// <description>Authentication failed due to missing authorization header, or invalid authentication credentials.</description>
        /// </item>
        /// <item>
        /// <term>403</term>
        /// <description>The request failed because the caller has insufficient permissions.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The request failed because the resource does not exist.</description>
        /// </item>
        /// <item>
        /// <term>422</term>
        /// <description>The request failed because it is semantically incorrect or failed business validation.</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>The request failed because an internal server error occurred.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Post("/v2/payments/authorizations/{authorization_id}/capture")]
        Task<Capture2> AuthorizationsCapture(string authorization_id, [Body] Capture_request body, [Header("PayPal-Request-Id")] string payPal_Request_Id, [Header("Prefer")] string prefer);

        /// <summary>Reauthorize authorized payment</summary>
        /// <remarks>Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment from 4 to 29 days after the 3-day honor period. The allowed amount depends on context and geography, for example in US it is up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote></remarks>
        /// <param name="authorization_id">The PayPal-generated ID for the authorized payment to void.</param>
        /// <param name="payPal_Request_Id">The server stores keys for 45 days.</param>
        /// <param name="prefer">The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul></param>
        /// <returns>A successful request returns the HTTP <code>201 Created</code> status code and a JSON response body that shows the reauthorized payment details.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>400</term>
        /// <description>The request failed because it is not well-formed or is syntactically incorrect or violates schema.</description>
        /// </item>
        /// <item>
        /// <term>401</term>
        /// <description>Authentication failed due to missing authorization header, or invalid authentication credentials.</description>
        /// </item>
        /// <item>
        /// <term>403</term>
        /// <description>The request failed because the caller has insufficient permissions.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The request failed because the resource does not exist.</description>
        /// </item>
        /// <item>
        /// <term>422</term>
        /// <description>The request failed because it either is semantically incorrect or failed business validation.</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>The request failed because an internal server error occurred.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Post("/v2/payments/authorizations/{authorization_id}/reauthorize")]
        Task<Authorization2> AuthorizationsReauthorize(string authorization_id, [Body] Reauthorize_request body, [Header("PayPal-Request-Id")] string payPal_Request_Id, [Header("Prefer")] string prefer);

        /// <summary>Void authorized payment</summary>
        /// <remarks>Voids, or cancels, an authorized payment, by ID. You cannot void an authorized payment that has been fully captured.</remarks>
        /// <param name="authorization_id">The PayPal-generated ID for the authorized payment to void.</param>
        /// <param name="payPal_Auth_Assertion">An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see [PayPal-Auth-Assertion](/docs/api/reference/api-requests/#paypal-auth-assertion).<blockquote><strong>Note:</strong>For three party transactions in which a partner is managing the API calls on behalf of a merchant, the partner must identify the merchant using either a PayPal-Auth-Assertion header or an access token with target_subject.</blockquote></param>
        /// <param name="prefer">The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul></param>
        /// <returns>A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body that shows authorization details. This response is returned when the Prefer header is set to return=representation.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>400</term>
        /// <description>The request failed because it is not well-formed or is syntactically incorrect or violates schema.</description>
        /// </item>
        /// <item>
        /// <term>401</term>
        /// <description>Authentication failed due to missing authorization header, or invalid authentication credentials.</description>
        /// </item>
        /// <item>
        /// <term>403</term>
        /// <description>The request failed because the caller has insufficient permissions.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The request failed because the resource does not exist.</description>
        /// </item>
        /// <item>
        /// <term>409</term>
        /// <description>The request failed because a previous call for the given resource is in progress.</description>
        /// </item>
        /// <item>
        /// <term>422</term>
        /// <description>The request failed because it either is semantically incorrect or failed business validation.</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>The request failed because an internal server error occurred.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Post("/v2/payments/authorizations/{authorization_id}/void")]
        Task<Authorization2> AuthorizationsVoid(string authorization_id, [Header("PayPal-Auth-Assertion")] string payPal_Auth_Assertion, [Header("Prefer")] string prefer);

        /// <summary>Show captured payment details</summary>
        /// <remarks>Shows details for a captured payment, by ID.</remarks>
        /// <param name="capture_id">The PayPal-generated ID for the captured payment to refund.</param>
        /// <returns>A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body that shows captured payment details.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>401</term>
        /// <description>Authentication failed due to missing authorization header, or invalid authentication credentials.</description>
        /// </item>
        /// <item>
        /// <term>403</term>
        /// <description>The request failed because the caller has insufficient permissions.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The request failed because the resource does not exist.</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>The request failed because an internal server error occurred.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Get("/v2/payments/captures/{capture_id}")]
        Task<Capture2> CapturesGet(string capture_id);

        /// <summary>Refund captured payment</summary>
        /// <remarks>Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.</remarks>
        /// <param name="capture_id">The PayPal-generated ID for the captured payment to refund.</param>
        /// <param name="payPal_Request_Id">The server stores keys for 45 days.</param>
        /// <param name="prefer">The preferred server response upon successful completion of the request. Value is:<ul><li><code>return=minimal</code>. The server returns a minimal response to optimize communication between the API caller and the server. A minimal response includes the <code>id</code>, <code>status</code> and HATEOAS links.</li><li><code>return=representation</code>. The server returns a complete resource representation, including the current state of the resource.</li></ul></param>
        /// <param name="payPal_Auth_Assertion">An API-caller-provided JSON Web Token (JWT) assertion that identifies the merchant. For details, see [PayPal-Auth-Assertion](/docs/api/reference/api-requests/#paypal-auth-assertion).<blockquote><strong>Note:</strong>For three party transactions in which a partner is managing the API calls on behalf of a merchant, the partner must identify the merchant using either a PayPal-Auth-Assertion header or an access token with target_subject.</blockquote></param>
        /// <returns>A successful request returns the HTTP <code>201 Created</code> status code and a JSON response body that shows refund details.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>400</term>
        /// <description>The request failed because it is not well-formed or is syntactically incorrect or violates schema.</description>
        /// </item>
        /// <item>
        /// <term>401</term>
        /// <description>Authentication failed due to missing authorization header, or invalid authentication credentials.</description>
        /// </item>
        /// <item>
        /// <term>403</term>
        /// <description>The request failed because the caller has insufficient permissions.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The request failed because the resource does not exist.</description>
        /// </item>
        /// <item>
        /// <term>409</term>
        /// <description>The request failed because a previous call for the given resource is in progress.</description>
        /// </item>
        /// <item>
        /// <term>422</term>
        /// <description>The request failed because it either is semantically incorrect or failed business validation.</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>The request failed because an internal server error occurred.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Post("/v2/payments/captures/{capture_id}/refund")]
        Task<Refund> CapturesRefund(string capture_id, [Body] Refund_request body, [Header("PayPal-Request-Id")] string payPal_Request_Id, [Header("Prefer")] string prefer, [Header("PayPal-Auth-Assertion")] string payPal_Auth_Assertion);

        /// <summary>Show refund details</summary>
        /// <remarks>Shows details for a refund, by ID.</remarks>
        /// <param name="refund_id">The PayPal-generated ID for the refund for which to show details.</param>
        /// <returns>A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body that shows refund details.</returns>
        /// <exception cref="ApiException">
        /// Thrown when the request returns a non-success status code:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>401</term>
        /// <description>Authentication failed due to missing authorization header, or invalid authentication credentials.</description>
        /// </item>
        /// <item>
        /// <term>403</term>
        /// <description>The request failed because the caller has insufficient permissions.</description>
        /// </item>
        /// <item>
        /// <term>404</term>
        /// <description>The request failed because the resource does not exist.</description>
        /// </item>
        /// <item>
        /// <term>500</term>
        /// <description>The request failed because an internal server error occurred.</description>
        /// </item>
        /// </list>
        /// </exception>
        [Headers("Accept: application/json")]
        [Get("/v2/payments/refunds/{refund_id}")]
        Task<Refund> RefundsGet(string refund_id);


    }
}


//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"

namespace GeneratedCode
{
    using System = global::System;

    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _400
    {

        [JsonPropertyName("details")]
        public ICollection<Details> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _401
    {

        [JsonPropertyName("details")]
        public ICollection<details> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _403
    {

        [JsonPropertyName("details")]
        public ICollection<details2> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _409
    {

        [JsonPropertyName("details")]
        public ICollection<details4> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class _422
    {

        [JsonPropertyName("details")]
        public ICollection<details5> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The error details. Required for client-side `4XX` errors.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_details
    {
        /// <summary>
        /// The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors.
        /// </summary>

        [JsonPropertyName("field")]
        public string Field { get; set; }

        /// <summary>
        /// The value of the field that caused the error.
        /// </summary>

        [JsonPropertyName("value")]
        public string Value { get; set; }

        [JsonPropertyName("location")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_location Location { get; set; }

        /// <summary>
        /// The unique, fine-grained application-level error code.
        /// </summary>

        [JsonPropertyName("issue")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Issue { get; set; }

        /// <summary>
        /// The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value.
        /// </summary>

        [JsonPropertyName("description")]
        public string Description { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The location of the field that caused the error. Value is `body`, `path`, or `query`.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_location
    {

        [System.Runtime.Serialization.EnumMember(Value = @"body")]
        Body = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"path")]
        Path = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"query")]
        Query = 2,

    }

    /// <summary>
    /// Request is not well-formed, syntactically incorrect, or violates schema.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_default
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_defaultName Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_defaultMessage Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The request-related [HATEOAS link](/api/rest/responses/#hateoas-links) information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_link_description
    {
        /// <summary>
        /// The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.
        /// </summary>

        [JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(20000)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Href { get; set; }

        /// <summary>
        /// The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).
        /// </summary>

        [JsonPropertyName("rel")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Rel { get; set; }

        /// <summary>
        /// The HTTP method required to make the related call.
        /// </summary>

        [JsonPropertyName("method")]
        [System.ComponentModel.DataAnnotations.StringLength(6, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z]*$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_link_descriptionMethod Method { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Authentication failed due to missing Authorization header, or invalid authentication credentials.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_401
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_401Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_401Message Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The client is not authorized to access this resource, although it may have valid credentials. 
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_403
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_403Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_403Message Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The server has not found anything matching the request URI. This either means that the URI is incorrect or the resource is not available.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_404
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_404Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_404Message Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The server has detected a conflict while processing this request.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_409
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_409Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_409Message Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The server does not support the request payload's media type.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_415
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_415Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_415Message Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The requested action cannot be performed and may require interaction with APIs or processes outside of the current request. This is distinct from a 500 response in that there are no systemic problems limiting the API from performing the request.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_422
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_422Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_422Message Message { get; set; }

        [JsonPropertyName("details")]
        public ICollection<Error_details> Details { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// This is either a system or application error, and generally indicates that although the client appeared to provide a correct request, something unexpected has gone wrong on the server.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_500
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_500Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_500Message Message { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The server is temporarily unable to handle the request, for example, because of planned maintenance or downtime.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Error_503
    {

        [JsonPropertyName("name")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_503Name Name { get; set; }

        [JsonPropertyName("message")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Error_503Message Message { get; set; }

        /// <summary>
        /// The PayPal internal ID. Used for correlation purposes.
        /// </summary>

        [JsonPropertyName("debug_id")]
        public string Debug_id { get; set; }

        /// <summary>
        /// An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).
        /// </summary>

        [JsonPropertyName("links")]
        [System.ComponentModel.DataAnnotations.MaxLength(10000)]
        public ICollection<Error_link_description> Links { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The details of the authorized payment status.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authorization_status_details
    {
        /// <summary>
        /// The reason why the authorized status is `PENDING`.
        /// </summary>

        [JsonPropertyName("reason")]
        [System.ComponentModel.DataAnnotations.StringLength(24, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Authorization_status_detailsReason Reason { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The status fields for an authorized payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authorization_status
    {
        /// <summary>
        /// The status for the authorized payment.
        /// </summary>

        [JsonPropertyName("status")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Authorization_statusStatus Status { get; set; }

        /// <summary>
        /// The details of the authorized order pending status.
        /// </summary>

        [JsonPropertyName("status_details")]
        public Authorization_status_details Status_details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The currency and amount for a financial transaction, such as a balance or payment due.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Money
    {

        [JsonPropertyName("currency_code")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Currency_code { get; set; }

        /// <summary>
        /// The value, which might be:&lt;ul&gt;&lt;li&gt;An integer for currencies like `JPY` that are not typically fractional.&lt;/li&gt;&lt;li&gt;A decimal fraction for currencies like `TND` that are subdivided into thousandths.&lt;/li&gt;&lt;/ul&gt;For the required number of decimal places for a currency code, see [Currency Codes](/api/rest/reference/currency-codes/).
        /// </summary>

        [JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(32)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$")]
        public string Value { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The card network or brand. Applies to credit, debit, gift, and payment cards.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Card_brand
    {

        [System.Runtime.Serialization.EnumMember(Value = @"VISA")]
        VISA = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"MASTERCARD")]
        MASTERCARD = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DISCOVER")]
        DISCOVER = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"AMEX")]
        AMEX = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"SOLO")]
        SOLO = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"JCB")]
        JCB = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"STAR")]
        STAR = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"DELTA")]
        DELTA = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"SWITCH")]
        SWITCH = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"MAESTRO")]
        MAESTRO = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"CB_NATIONALE")]
        CB_NATIONALE = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"CONFIGOGA")]
        CONFIGOGA = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"CONFIDIS")]
        CONFIDIS = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"ELECTRON")]
        ELECTRON = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"CETELEM")]
        CETELEM = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"CHINA_UNION_PAY")]
        CHINA_UNION_PAY = 15,

    }

    /// <summary>
    /// Reference values used by the card network to identify a transaction.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Network_transaction_reference
    {
        /// <summary>
        /// Transaction reference id returned by the scheme. For Visa and Amex, this is the "Tran id" field in response. For MasterCard, this is the "BankNet reference id" field in response. For Discover, this is the "NRID" field in response. The pattern we expect for this field from Visa/Amex/CB/Discover is numeric, Mastercard/BNPP is alphanumeric and Paysecure is alphanumeric with special character -.
        /// </summary>

        [JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength = 9)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9-]+$")]
        public string Id { get; set; }

        /// <summary>
        /// The date that the transaction was authorized by the scheme. This field may not be returned for all networks. MasterCard refers to this field as "BankNet reference date.
        /// </summary>

        [JsonPropertyName("date")]
        [System.ComponentModel.DataAnnotations.StringLength(4, MinimumLength = 4)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]+$")]
        public string Date { get; set; }

        /// <summary>
        /// Name of the card network through which the transaction was routed.
        /// </summary>

        [JsonPropertyName("network")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Card_brand Network { get; set; }

        /// <summary>
        /// Reference ID issued for the card transaction. This ID can be used to track the transaction across processors, card brands and issuing banks.
        /// </summary>

        [JsonPropertyName("acquirer_reference_number")]
        [System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]+$")]
        public string Acquirer_reference_number { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The level of protection offered as defined by [PayPal Seller Protection for Merchants](https://www.paypal.com/us/webapps/mpp/security/seller-protection).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Seller_protection
    {
        /// <summary>
        /// Indicates whether the transaction is eligible for seller protection. For information, see [PayPal Seller Protection for Merchants](https://www.paypal.com/us/webapps/mpp/security/seller-protection).
        /// </summary>

        [JsonPropertyName("status")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Seller_protectionStatus Status { get; set; }

        /// <summary>
        /// An array of conditions that are covered for the transaction.
        /// </summary>

        [JsonPropertyName("dispute_categories")]

        // TODO(system.text.json): Add string enum item converter
        public ICollection<Dispute_categories> Dispute_categories { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The request-related [HATEOAS link](/api/rest/responses/#hateoas-links) information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Link_description
    {
        /// <summary>
        /// The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.
        /// </summary>

        [JsonPropertyName("href")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Href { get; set; }

        /// <summary>
        /// The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).
        /// </summary>

        [JsonPropertyName("rel")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Rel { get; set; }

        /// <summary>
        /// The HTTP method required to make the related call.
        /// </summary>

        [JsonPropertyName("method")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Link_descriptionMethod Method { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The date and time stamps that are common to authorized payment, captured payment, and refund transactions.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Activity_timestamps
    {
        /// <summary>
        /// The date and time when the transaction occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("create_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Create_time { get; set; }

        /// <summary>
        /// The date and time when the transaction was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("update_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Update_time { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The authorized payment transaction.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authorization : Authorization_status
    {
        /// <summary>
        /// The PayPal-generated ID for the authorized payment.
        /// </summary>

        [JsonPropertyName("id")]
        public string Id { get; set; }

        /// <summary>
        /// The amount for this authorized payment.
        /// </summary>

        [JsonPropertyName("amount")]
        public Money Amount { get; set; }

        /// <summary>
        /// The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("invoice_id")]
        public string Invoice_id { get; set; }

        /// <summary>
        /// The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
        /// </summary>

        [JsonPropertyName("custom_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127)]
        public string Custom_id { get; set; }

        [JsonPropertyName("network_transaction_reference")]
        public Network_transaction_reference Network_transaction_reference { get; set; }

        [JsonPropertyName("seller_protection")]
        public Seller_protection Seller_protection { get; set; }

        /// <summary>
        /// The date and time when the authorized payment expires, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("expiration_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Expiration_time { get; set; }

        /// <summary>
        /// An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
        /// </summary>

        [JsonPropertyName("links")]
        public ICollection<Link_description> Links { get; set; }

        /// <summary>
        /// The date and time when the transaction occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("create_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Create_time { get; set; }

        /// <summary>
        /// The date and time when the transaction was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("update_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Update_time { get; set; }

    }

    /// <summary>
    /// Identifiers related to a specific resource.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Related_ids
    {
        /// <summary>
        /// Order ID related to the resource.
        /// </summary>

        [JsonPropertyName("order_id")]
        [System.ComponentModel.DataAnnotations.StringLength(20, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z0-9]+$")]
        public string Order_id { get; set; }

        /// <summary>
        /// Authorization ID related to the resource.
        /// </summary>

        [JsonPropertyName("authorization_id")]
        [System.ComponentModel.DataAnnotations.StringLength(20, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z0-9]+$")]
        public string Authorization_id { get; set; }

        /// <summary>
        /// Capture ID related to the resource.
        /// </summary>

        [JsonPropertyName("capture_id")]
        [System.ComponentModel.DataAnnotations.StringLength(20, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z0-9]+$")]
        public string Capture_id { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The supplementary data.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Supplementary_data
    {
        /// <summary>
        /// Identifiers related to a specific resource.
        /// </summary>

        [JsonPropertyName("related_ids")]
        public Related_ids Related_ids { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The details for the merchant who receives the funds and fulfills the order. The merchant is also known as the payee.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payee_base
    {
        /// <summary>
        /// The email address of merchant.
        /// </summary>

        [JsonPropertyName("email_address")]
        [System.ComponentModel.DataAnnotations.StringLength(254, MinimumLength = 3)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])")]
        public string Email_address { get; set; }

        /// <summary>
        /// The encrypted PayPal account ID of the merchant.
        /// </summary>

        [JsonPropertyName("merchant_id")]
        [System.ComponentModel.DataAnnotations.StringLength(13, MinimumLength = 13)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[2-9A-HJ-NP-Z]{13}$")]
        public string Merchant_id { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The authorized payment transaction.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Authorization2 : Authorization
    {
        /// <summary>
        /// An object that provides supplementary/additional data related to a payment transaction.
        /// </summary>

        [JsonPropertyName("supplementary_data")]
        public Supplementary_data Supplementary_data { get; set; }

        /// <summary>
        /// The details associated with the merchant for this transaction.
        /// </summary>

        [JsonPropertyName("payee")]
        public Payee_base Payee { get; set; }

    }

    /// <summary>
    /// The capture identification-related fields. Includes the invoice ID, custom ID, note to payer, and soft descriptor.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Supplementary_purchase_data
    {
        /// <summary>
        /// The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("invoice_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.{1,127}$")]
        public string Invoice_id { get; set; }

        /// <summary>
        /// An informational note about this settlement. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("note_to_payer")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.{1,255}$")]
        public string Note_to_payer { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The platform or partner fee, commission, or brokerage fee that is associated with the transaction. Not a separate or isolated transaction leg from the external perspective. The platform fee is limited in scope and is always associated with the original payment for the purchase unit.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Platform_fee
    {
        /// <summary>
        /// The fee for this transaction.
        /// </summary>

        [JsonPropertyName("amount")]
        [System.ComponentModel.DataAnnotations.Required]
        public Money Amount { get; set; } = new Money();

        /// <summary>
        /// The recipient of the fee for this transaction. If you omit this value, the default is the API caller.
        /// </summary>

        [JsonPropertyName("payee")]
        public Payee_base Payee { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The funds that are held on behalf of the merchant.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Disbursement_mode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"INSTANT")]
        INSTANT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"DELAYED")]
        DELAYED = 1,

    }

    /// <summary>
    /// Any additional payment instructions to be consider during payment processing. This processing instruction is applicable for Capturing an order or Authorizing an Order.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payment_instruction
    {
        /// <summary>
        /// An array of various fees, commissions, tips, or donations. This field is only applicable to merchants that been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability.
        /// </summary>

        [JsonPropertyName("platform_fees")]
        [System.ComponentModel.DataAnnotations.MaxLength(1)]
        public ICollection<Platform_fee> Platform_fees { get; set; }

        /// <summary>
        /// The funds that are held payee by the marketplace/platform. This field is only applicable to merchants that been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability.
        /// </summary>

        [JsonPropertyName("disbursement_mode")]
        [System.ComponentModel.DataAnnotations.StringLength(16, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Disbursement_mode Disbursement_mode { get; set; }

        /// <summary>
        /// This field is only enabled for selected merchants/partners to use and provides the ability to trigger a specific pricing rate/plan for a payment transaction. The list of eligible 'payee_pricing_tier_id' would be provided to you by your Account Manager. Specifying values other than the one provided to you by your account manager would result in an error.
        /// </summary>

        [JsonPropertyName("payee_pricing_tier_id")]
        [System.ComponentModel.DataAnnotations.StringLength(20, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Payee_pricing_tier_id { get; set; }

        /// <summary>
        /// FX identifier generated returned by PayPal to be used for payment processing in order to honor FX rate (for eligible integrations) to be used when amount is settled/received into the payee account.
        /// </summary>

        [JsonPropertyName("payee_receivable_fx_rate_id")]
        [System.ComponentModel.DataAnnotations.StringLength(4000, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Payee_receivable_fx_rate_id { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Captures either a portion or the full authorized amount of an authorized payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Capture_request : Supplementary_purchase_data
    {
        /// <summary>
        /// The amount to capture. To capture a portion of the full authorized amount, specify an amount. If amount is not specified, the full authorized amount is captured. The amount must be a positive number and in the same currency as the authorization against which the payment is being captured.
        /// </summary>

        [JsonPropertyName("amount")]
        public Money Amount { get; set; }

        /// <summary>
        /// The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("invoice_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127)]
        public string Invoice_id { get; set; }

        /// <summary>
        /// Indicates whether you can make additional captures against the authorized payment. Set to `true` if you do not intend to capture additional payments against the authorization. Set to `false` if you intend to capture additional payments against the authorization.
        /// </summary>

        [JsonPropertyName("final_capture")]
        public bool Final_capture { get; set; } = false;

        [JsonPropertyName("payment_instruction")]
        public Payment_instruction Payment_instruction { get; set; }

        /// <summary>
        /// An informational note about this settlement. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("note_to_payer")]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Note_to_payer { get; set; }

        /// <summary>
        /// The payment descriptor on the payer's account statement.
        /// </summary>

        [JsonPropertyName("soft_descriptor")]
        [System.ComponentModel.DataAnnotations.StringLength(22)]
        public string Soft_descriptor { get; set; }

    }

    /// <summary>
    /// The details of the captured payment status.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Capture_status_details
    {
        /// <summary>
        /// The reason why the captured payment status is `PENDING` or `DENIED`.
        /// </summary>

        [JsonPropertyName("reason")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Capture_status_detailsReason Reason { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The status of a captured payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Capture_status
    {
        /// <summary>
        /// The status of the captured payment.
        /// </summary>

        [JsonPropertyName("status")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Capture_statusStatus Status { get; set; }

        /// <summary>
        /// The details of the captured payment status.
        /// </summary>

        [JsonPropertyName("status_details")]
        public Capture_status_details Status_details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The exchange rate that determines the amount to convert from one currency to another currency.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Exchange_rate
    {
        /// <summary>
        /// The source currency from which to convert an amount.
        /// </summary>

        [JsonPropertyName("source_currency")]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Source_currency { get; set; }

        /// <summary>
        /// The target currency to which to convert an amount.
        /// </summary>

        [JsonPropertyName("target_currency")]
        [System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
        public string Target_currency { get; set; }

        /// <summary>
        /// The target currency amount. Equivalent to one unit of the source currency. Formatted as integer or decimal value with one to 15 digits to the right of the decimal point.
        /// </summary>

        [JsonPropertyName("value")]
        public string Value { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The detailed breakdown of the capture activity. This is not available for transactions that are in pending state.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Seller_receivable_breakdown
    {
        /// <summary>
        /// The amount for this captured payment in the currency of the transaction.
        /// </summary>

        [JsonPropertyName("gross_amount")]
        [System.ComponentModel.DataAnnotations.Required]
        public Money Gross_amount { get; set; } = new Money();

        /// <summary>
        /// The applicable fee for this captured payment in the currency of the transaction.
        /// </summary>

        [JsonPropertyName("paypal_fee")]
        public Money Paypal_fee { get; set; }

        /// <summary>
        /// The applicable fee for this captured payment in the receivable currency. Returned only in cases the fee is charged in the receivable currency. Example 'CNY'.
        /// </summary>

        [JsonPropertyName("paypal_fee_in_receivable_currency")]
        public Money Paypal_fee_in_receivable_currency { get; set; }

        /// <summary>
        /// The net amount that the payee receives for this captured payment in their PayPal account. The net amount is computed as &lt;code&gt;gross_amount&lt;/code&gt; minus the &lt;code&gt;paypal_fee&lt;/code&gt; minus the &lt;code&gt;platform_fees&lt;/code&gt;.
        /// </summary>

        [JsonPropertyName("net_amount")]
        public Money Net_amount { get; set; }

        /// <summary>
        /// The net amount that is credited to the payee's PayPal account. Returned only when the currency of the captured payment is different from the currency of the PayPal account where the payee wants to credit the funds. The amount is computed as &lt;code&gt;net_amount&lt;/code&gt; times &lt;code&gt;exchange_rate&lt;/code&gt;.
        /// </summary>

        [JsonPropertyName("receivable_amount")]
        public Money Receivable_amount { get; set; }

        /// <summary>
        /// The exchange rate that determines the amount that is credited to the payee's PayPal account. Returned when the currency of the captured payment is different from the currency of the PayPal account where the payee wants to credit the funds.
        /// </summary>

        [JsonPropertyName("exchange_rate")]
        public Exchange_rate Exchange_rate { get; set; }

        /// <summary>
        /// An array of platform or partner fees, commissions, or brokerage fees that associated with the captured payment.
        /// </summary>

        [JsonPropertyName("platform_fees")]
        [System.ComponentModel.DataAnnotations.MaxLength(1)]
        public ICollection<Platform_fee> Platform_fees { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The processor response information for payment requests, such as direct credit card transactions.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Processor_response
    {
        /// <summary>
        /// The address verification code for Visa, Discover, Mastercard, or American Express transactions.
        /// </summary>

        [JsonPropertyName("avs_code")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Processor_responseAvs_code Avs_code { get; set; }

        /// <summary>
        /// The card verification value code for for Visa, Discover, Mastercard, or American Express.
        /// </summary>

        [JsonPropertyName("cvv_code")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Processor_responseCvv_code Cvv_code { get; set; }

        /// <summary>
        /// Processor response code for the non-PayPal payment processor errors.
        /// </summary>

        [JsonPropertyName("response_code")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Processor_responseResponse_code Response_code { get; set; }

        /// <summary>
        /// The declined payment transactions might have payment advice codes. The card networks, like Visa and Mastercard, return payment advice codes.
        /// </summary>

        [JsonPropertyName("payment_advice_code")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Processor_responsePayment_advice_code Payment_advice_code { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// A captured payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Capture : Capture_status
    {
        /// <summary>
        /// The PayPal-generated ID for the captured payment.
        /// </summary>

        [JsonPropertyName("id")]
        public string Id { get; set; }

        /// <summary>
        /// The amount for this captured payment.
        /// </summary>

        [JsonPropertyName("amount")]
        public Money Amount { get; set; }

        /// <summary>
        /// The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("invoice_id")]
        public string Invoice_id { get; set; }

        /// <summary>
        /// The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
        /// </summary>

        [JsonPropertyName("custom_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127)]
        public string Custom_id { get; set; }

        [JsonPropertyName("network_transaction_reference")]
        public Network_transaction_reference Network_transaction_reference { get; set; }

        [JsonPropertyName("seller_protection")]
        public Seller_protection Seller_protection { get; set; }

        /// <summary>
        /// Indicates whether you can make additional captures against the authorized payment. Set to `true` if you do not intend to capture additional payments against the authorization. Set to `false` if you intend to capture additional payments against the authorization.
        /// </summary>

        [JsonPropertyName("final_capture")]
        public bool Final_capture { get; set; } = false;

        [JsonPropertyName("seller_receivable_breakdown")]
        public Seller_receivable_breakdown Seller_receivable_breakdown { get; set; }

        [JsonPropertyName("disbursement_mode")]
        [System.ComponentModel.DataAnnotations.StringLength(16, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Z_]+$")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Disbursement_mode Disbursement_mode { get; set; }

        /// <summary>
        /// An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
        /// </summary>

        [JsonPropertyName("links")]
        public ICollection<Link_description> Links { get; set; }

        /// <summary>
        /// An object that provides additional processor information for a direct credit card transaction.
        /// </summary>

        [JsonPropertyName("processor_response")]
        public Processor_response Processor_response { get; set; }

        /// <summary>
        /// The date and time when the transaction occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("create_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Create_time { get; set; }

        /// <summary>
        /// The date and time when the transaction was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("update_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Update_time { get; set; }

    }

    /// <summary>
    /// A captured payment.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Capture2 : Capture
    {
        /// <summary>
        /// An object that provides supplementary/additional data related to a payment transaction.
        /// </summary>

        [JsonPropertyName("supplementary_data")]
        public Supplementary_data Supplementary_data { get; set; }

        /// <summary>
        /// The details associated with the merchant for this transaction.
        /// </summary>

        [JsonPropertyName("payee")]
        public Payee_base Payee { get; set; }

    }

    /// <summary>
    /// Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. You can reauthorize a payment only once from days four to 29.&lt;br/&gt;&lt;br/&gt;If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.&lt;br/&gt;&lt;br/&gt;A reauthorized payment itself has a new honor period of three days.&lt;br/&gt;&lt;br/&gt;You can reauthorize an authorized payment once. The allowed amount depends on context and geography, for example in US it is up to 115% of the original authorized amount, not to exceed an increase of $75 USD.&lt;br/&gt;&lt;br/&gt;Supports only the `amount` request parameter.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; This request is currently not supported for Partner use cases.&lt;/blockquote&gt;
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Reauthorize_request
    {
        /// <summary>
        /// The amount to reauthorize for an authorized payment.
        /// </summary>

        [JsonPropertyName("amount")]
        public Money Amount { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Reauthorize400
    {

        [JsonPropertyName("details")]
        public ICollection<details6> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Reauthorize422
    {

        [JsonPropertyName("details")]
        public ICollection<details7> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Void422
    {

        [JsonPropertyName("details")]
        public ICollection<details8> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Any additional payments instructions during refund payment processing. This object is only applicable to merchants that have been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability. Please speak to your account manager if you want to use this capability.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Payment_instruction2
    {
        /// <summary>
        /// Specifies the amount that the API caller will contribute to the refund being processed. The amount needs to be lower than platform_fees amount originally captured or the amount that is remaining if multiple refunds have been processed. This field is only applicable to merchants that have been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability. Please speak to your account manager if you want to use this capability.
        /// </summary>

        [JsonPropertyName("platform_fees")]
        [System.ComponentModel.DataAnnotations.MaxLength(1)]
        public ICollection<Platform_fee> Platform_fees { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Refunds a captured payment, by ID. For a full refund, include an empty request body. For a partial refund, include an &lt;code&gt;amount&lt;/code&gt; object in the request body.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Refund_request
    {
        /// <summary>
        /// The amount to refund. To refund a portion of the captured amount, specify an amount. If amount is not specified, an amount equal to &lt;code&gt;captured amount - previous refunds&lt;/code&gt; is refunded. The amount must be a positive number and in the same currency as the one in which the payment was captured.
        /// </summary>

        [JsonPropertyName("amount")]
        public Money Amount { get; set; }

        /// <summary>
        /// The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports. The pattern is defined by an external party and supports Unicode.
        /// </summary>

        [JsonPropertyName("custom_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Custom_id { get; set; }

        /// <summary>
        /// The API caller-provided external invoice ID for this order. The pattern is defined by an external party and supports Unicode.
        /// </summary>

        [JsonPropertyName("invoice_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Invoice_id { get; set; }

        /// <summary>
        /// The reason for the refund. Appears in both the payer's transaction history and the emails that the payer receives. The pattern is defined by an external party and supports Unicode.
        /// </summary>

        [JsonPropertyName("note_to_payer")]
        [System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^.*$")]
        public string Note_to_payer { get; set; }

        /// <summary>
        /// Any additional refund instructions to be set during refund payment processing. This object is only applicable to merchants that have been enabled for PayPal Commerce Platform for Marketplaces and Platforms capability. Please speak to your account manager if you want to use this capability.
        /// </summary>

        [JsonPropertyName("payment_instruction")]
        public Payment_instruction2 Payment_instruction { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The details of the refund status.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Refund_status_details
    {
        /// <summary>
        /// The reason why the refund has the `PENDING` or `FAILED` status.
        /// </summary>

        [JsonPropertyName("reason")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Refund_status_detailsReason Reason { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The refund status.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Refund_status
    {
        /// <summary>
        /// The status of the refund.
        /// </summary>

        [JsonPropertyName("status")]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public Refund_statusStatus Status { get; set; }

        /// <summary>
        /// The details of the refund status.
        /// </summary>

        [JsonPropertyName("status_details")]
        public Refund_status_details Status_details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The net amount. Returned when the currency of the refund is different from the currency of the PayPal account where the merchant holds their funds.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Net_amount_breakdown_item
    {
        /// <summary>
        /// The net amount debited from the merchant's PayPal account.
        /// </summary>

        [JsonPropertyName("payable_amount")]
        public Money Payable_amount { get; set; }

        /// <summary>
        /// The converted payable amount.
        /// </summary>

        [JsonPropertyName("converted_amount")]
        public Money Converted_amount { get; set; }

        /// <summary>
        /// The exchange rate that determines the amount that was debited from the merchant's PayPal account.
        /// </summary>

        [JsonPropertyName("exchange_rate")]
        public Exchange_rate Exchange_rate { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// The refund information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Refund : Refund_status
    {
        /// <summary>
        /// The PayPal-generated ID for the refund.
        /// </summary>

        [JsonPropertyName("id")]
        public string Id { get; set; }

        /// <summary>
        /// The amount that the payee refunded to the payer.
        /// </summary>

        [JsonPropertyName("amount")]
        public Money Amount { get; set; }

        /// <summary>
        /// The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("invoice_id")]
        public string Invoice_id { get; set; }

        /// <summary>
        /// The API caller-provided external ID. Used to reconcile API caller-initiated transactions with PayPal transactions. Appears in transaction and settlement reports.
        /// </summary>

        [JsonPropertyName("custom_id")]
        [System.ComponentModel.DataAnnotations.StringLength(127, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[A-Za-z0-9-_.,]*$")]
        public string Custom_id { get; set; }

        /// <summary>
        /// Reference ID issued for the card transaction. This ID can be used to track the transaction across processors, card brands and issuing banks.
        /// </summary>

        [JsonPropertyName("acquirer_reference_number")]
        [System.ComponentModel.DataAnnotations.StringLength(36, MinimumLength = 1)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z0-9]+$")]
        public string Acquirer_reference_number { get; set; }

        /// <summary>
        /// The reason for the refund. Appears in both the payer's transaction history and the emails that the payer receives.
        /// </summary>

        [JsonPropertyName("note_to_payer")]
        public string Note_to_payer { get; set; }

        /// <summary>
        /// The breakdown of the refund.
        /// </summary>

        [JsonPropertyName("seller_payable_breakdown")]
        public Seller_payable_breakdown Seller_payable_breakdown { get; set; }

        /// <summary>
        /// The details associated with the merchant for this transaction.
        /// </summary>

        [JsonPropertyName("payer")]
        public Payee_base Payer { get; set; }

        /// <summary>
        /// An array of related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).
        /// </summary>

        [JsonPropertyName("links")]
        public ICollection<Link_description> Links { get; set; }

        /// <summary>
        /// The date and time when the transaction occurred, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("create_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Create_time { get; set; }

        /// <summary>
        /// The date and time when the transaction was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
        /// </summary>

        [JsonPropertyName("update_time")]
        [System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 20)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$")]
        public string Update_time { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Refund400
    {

        [JsonPropertyName("details")]
        public ICollection<details9> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Refund422
    {

        [JsonPropertyName("details")]
        public ICollection<details10> Details { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response : Error_403
    {

        [JsonPropertyName("details")]
        public ICollection<details2> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response2 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response3 : Error_default
    {

        [JsonPropertyName("details")]
        public ICollection<Details> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response4 : Error_403
    {

        [JsonPropertyName("details")]
        public ICollection<details2> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response5 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response6 : Error_422
    {

        [JsonPropertyName("details")]
        public ICollection<details5> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response7 : Error_default
    {

        [JsonPropertyName("details")]
        public ICollection<details6> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response8 : Error_403
    {

        [JsonPropertyName("details")]
        public ICollection<details2> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response9 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response10 : Error_422
    {

        [JsonPropertyName("details")]
        public ICollection<details7> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response11 : Error_401
    {

        [JsonPropertyName("details")]
        public ICollection<details> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response12 : Error_403
    {

        [JsonPropertyName("details")]
        public ICollection<details2> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response13 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response14 : Error_409
    {

        [JsonPropertyName("details")]
        public ICollection<details4> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response15 : Error_422
    {

        [JsonPropertyName("details")]
        public ICollection<details8> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response16 : Error_403
    {

        [JsonPropertyName("details")]
        public ICollection<details2> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response17 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response18 : Error_default
    {

        [JsonPropertyName("details")]
        public ICollection<details9> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response19 : Error_401
    {

        [JsonPropertyName("details")]
        public ICollection<details> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response20 : Error_403
    {

        [JsonPropertyName("details")]
        public ICollection<details2> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response21 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response22 : Error_409
    {

        [JsonPropertyName("details")]
        public ICollection<details4> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response23 : Error_422
    {

        [JsonPropertyName("details")]
        public ICollection<details10> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response24 : Error_401
    {

        [JsonPropertyName("details")]
        public ICollection<details> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response25 : Error_403
    {

        [JsonPropertyName("details")]
        public ICollection<details2> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Response26 : Error_404
    {

        [JsonPropertyName("details")]
        public ICollection<details3> Details { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Details
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details2
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details3
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details4
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details5
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_defaultName
    {

        [System.Runtime.Serialization.EnumMember(Value = @"INVALID_REQUEST")]
        INVALID_REQUEST = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_defaultMessage
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Request is not well-formed, syntactically incorrect, or violates schema.")]
        Request_is_not_wellFormed__syntactically_incorrect__or_violates_schema_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_link_descriptionMethod
    {

        [System.Runtime.Serialization.EnumMember(Value = @"GET")]
        GET = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"POST")]
        POST = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PUT")]
        PUT = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"DELETE")]
        DELETE = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"PATCH")]
        PATCH = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_401Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"AUTHENTICATION_FAILURE")]
        AUTHENTICATION_FAILURE = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_401Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Authentication failed due to missing authorization header, or invalid authentication credentials.")]
        Authentication_failed_due_to_missing_authorization_header__or_invalid_authentication_credentials_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_403Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_AUTHORIZED")]
        NOT_AUTHORIZED = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_403Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Authorization failed due to insufficient permissions.")]
        Authorization_failed_due_to_insufficient_permissions_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_404Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"RESOURCE_NOT_FOUND")]
        RESOURCE_NOT_FOUND = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_404Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"The specified resource does not exist.")]
        The_specified_resource_does_not_exist_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_409Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"RESOURCE_CONFLICT")]
        RESOURCE_CONFLICT = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_409Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"The server has detected a conflict while processing this request.")]
        The_server_has_detected_a_conflict_while_processing_this_request_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_415Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNSUPPORTED_MEDIA_TYPE")]
        UNSUPPORTED_MEDIA_TYPE = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_415Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"The server does not support the request payload's media type.")]
        The_server_does_not_support_the_request_payload_s_media_type_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_422Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNPROCESSABLE_ENTITY")]
        UNPROCESSABLE_ENTITY = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_422Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"The requested action could not be performed, semantically incorrect, or failed business validation.")]
        The_requested_action_could_not_be_performed__semantically_incorrect__or_failed_business_validation_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_500Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"INTERNAL_SERVER_ERROR")]
        INTERNAL_SERVER_ERROR = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_500Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"An internal server error occurred.")]
        An_internal_server_error_occurred_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_503Name
    {

        [System.Runtime.Serialization.EnumMember(Value = @"SERVICE_UNAVAILABLE")]
        SERVICE_UNAVAILABLE = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Error_503Message
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Service Unavailable.")]
        Service_Unavailable_ = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Authorization_status_detailsReason
    {

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING_REVIEW")]
        PENDING_REVIEW = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Authorization_statusStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CREATED")]
        CREATED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CAPTURED")]
        CAPTURED = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"DENIED")]
        DENIED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PARTIALLY_CAPTURED")]
        PARTIALLY_CAPTURED = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"VOIDED")]
        VOIDED = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
        PENDING = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Seller_protectionStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ELIGIBLE")]
        ELIGIBLE = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"PARTIALLY_ELIGIBLE")]
        PARTIALLY_ELIGIBLE = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"NOT_ELIGIBLE")]
        NOT_ELIGIBLE = 2,

    }

    /// <summary>
    /// The condition that is covered for the transaction.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Dispute_categories
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ITEM_NOT_RECEIVED")]
        ITEM_NOT_RECEIVED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"UNAUTHORIZED_TRANSACTION")]
        UNAUTHORIZED_TRANSACTION = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Link_descriptionMethod
    {

        [System.Runtime.Serialization.EnumMember(Value = @"GET")]
        GET = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"POST")]
        POST = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PUT")]
        PUT = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"DELETE")]
        DELETE = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"HEAD")]
        HEAD = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"CONNECT")]
        CONNECT = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"OPTIONS")]
        OPTIONS = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"PATCH")]
        PATCH = 7,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Capture_status_detailsReason
    {

        [System.Runtime.Serialization.EnumMember(Value = @"BUYER_COMPLAINT")]
        BUYER_COMPLAINT = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"CHARGEBACK")]
        CHARGEBACK = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"ECHECK")]
        ECHECK = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"INTERNATIONAL_WITHDRAWAL")]
        INTERNATIONAL_WITHDRAWAL = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
        OTHER = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING_REVIEW")]
        PENDING_REVIEW = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION")]
        RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"REFUNDED")]
        REFUNDED = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"TRANSACTION_APPROVED_AWAITING_FUNDING")]
        TRANSACTION_APPROVED_AWAITING_FUNDING = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"UNILATERAL")]
        UNILATERAL = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"VERIFICATION_REQUIRED")]
        VERIFICATION_REQUIRED = 10,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Capture_statusStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETED")]
        COMPLETED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"DECLINED")]
        DECLINED = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PARTIALLY_REFUNDED")]
        PARTIALLY_REFUNDED = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
        PENDING = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"REFUNDED")]
        REFUNDED = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"FAILED")]
        FAILED = 5,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Processor_responseAvs_code
    {

        [System.Runtime.Serialization.EnumMember(Value = @"A")]
        A = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"B")]
        B = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"C")]
        C = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"D")]
        D = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"E")]
        E = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"F")]
        F = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"G")]
        G = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"I")]
        I = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"M")]
        M = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"N")]
        N = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"P")]
        P = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"R")]
        R = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"S")]
        S = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"U")]
        U = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"W")]
        W = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"X")]
        X = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"Y")]
        Y = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"Z")]
        Z = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"Null")]
        Null = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"0")]
        _0 = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        _1 = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        _2 = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        _3 = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        _4 = 23,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Processor_responseCvv_code
    {

        [System.Runtime.Serialization.EnumMember(Value = @"E")]
        E = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"I")]
        I = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"M")]
        M = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"N")]
        N = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"P")]
        P = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"S")]
        S = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"U")]
        U = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"X")]
        X = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"All others")]
        All_others = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"0")]
        _0 = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"1")]
        _1 = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"2")]
        _2 = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"3")]
        _3 = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"4")]
        _4 = 13,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Processor_responseResponse_code
    {

        [System.Runtime.Serialization.EnumMember(Value = @"0000")]
        _0000 = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"00N7")]
        _00N7 = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"0100")]
        _0100 = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"0390")]
        _0390 = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"0500")]
        _0500 = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"0580")]
        _0580 = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"0800")]
        _0800 = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"0880")]
        _0880 = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"0890")]
        _0890 = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"0960")]
        _0960 = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"0R00")]
        _0R00 = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"1000")]
        _1000 = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"10BR")]
        _10BR = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"1300")]
        _1300 = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"1310")]
        _1310 = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"1312")]
        _1312 = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"1317")]
        _1317 = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"1320")]
        _1320 = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"1330")]
        _1330 = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"1335")]
        _1335 = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"1340")]
        _1340 = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"1350")]
        _1350 = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"1352")]
        _1352 = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"1360")]
        _1360 = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"1370")]
        _1370 = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"1380")]
        _1380 = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"1382")]
        _1382 = 26,

        [System.Runtime.Serialization.EnumMember(Value = @"1384")]
        _1384 = 27,

        [System.Runtime.Serialization.EnumMember(Value = @"1390")]
        _1390 = 28,

        [System.Runtime.Serialization.EnumMember(Value = @"1393")]
        _1393 = 29,

        [System.Runtime.Serialization.EnumMember(Value = @"5100")]
        _5100 = 30,

        [System.Runtime.Serialization.EnumMember(Value = @"5110")]
        _5110 = 31,

        [System.Runtime.Serialization.EnumMember(Value = @"5120")]
        _5120 = 32,

        [System.Runtime.Serialization.EnumMember(Value = @"5130")]
        _5130 = 33,

        [System.Runtime.Serialization.EnumMember(Value = @"5135")]
        _5135 = 34,

        [System.Runtime.Serialization.EnumMember(Value = @"5140")]
        _5140 = 35,

        [System.Runtime.Serialization.EnumMember(Value = @"5150")]
        _5150 = 36,

        [System.Runtime.Serialization.EnumMember(Value = @"5160")]
        _5160 = 37,

        [System.Runtime.Serialization.EnumMember(Value = @"5170")]
        _5170 = 38,

        [System.Runtime.Serialization.EnumMember(Value = @"5180")]
        _5180 = 39,

        [System.Runtime.Serialization.EnumMember(Value = @"5190")]
        _5190 = 40,

        [System.Runtime.Serialization.EnumMember(Value = @"5200")]
        _5200 = 41,

        [System.Runtime.Serialization.EnumMember(Value = @"5210")]
        _5210 = 42,

        [System.Runtime.Serialization.EnumMember(Value = @"5400")]
        _5400 = 43,

        [System.Runtime.Serialization.EnumMember(Value = @"5500")]
        _5500 = 44,

        [System.Runtime.Serialization.EnumMember(Value = @"5650")]
        _5650 = 45,

        [System.Runtime.Serialization.EnumMember(Value = @"5700")]
        _5700 = 46,

        [System.Runtime.Serialization.EnumMember(Value = @"5710")]
        _5710 = 47,

        [System.Runtime.Serialization.EnumMember(Value = @"5800")]
        _5800 = 48,

        [System.Runtime.Serialization.EnumMember(Value = @"5900")]
        _5900 = 49,

        [System.Runtime.Serialization.EnumMember(Value = @"5910")]
        _5910 = 50,

        [System.Runtime.Serialization.EnumMember(Value = @"5920")]
        _5920 = 51,

        [System.Runtime.Serialization.EnumMember(Value = @"5930")]
        _5930 = 52,

        [System.Runtime.Serialization.EnumMember(Value = @"5950")]
        _5950 = 53,

        [System.Runtime.Serialization.EnumMember(Value = @"6300")]
        _6300 = 54,

        [System.Runtime.Serialization.EnumMember(Value = @"7600")]
        _7600 = 55,

        [System.Runtime.Serialization.EnumMember(Value = @"7700")]
        _7700 = 56,

        [System.Runtime.Serialization.EnumMember(Value = @"7710")]
        _7710 = 57,

        [System.Runtime.Serialization.EnumMember(Value = @"7800")]
        _7800 = 58,

        [System.Runtime.Serialization.EnumMember(Value = @"7900")]
        _7900 = 59,

        [System.Runtime.Serialization.EnumMember(Value = @"8000")]
        _8000 = 60,

        [System.Runtime.Serialization.EnumMember(Value = @"8010")]
        _8010 = 61,

        [System.Runtime.Serialization.EnumMember(Value = @"8020")]
        _8020 = 62,

        [System.Runtime.Serialization.EnumMember(Value = @"8030")]
        _8030 = 63,

        [System.Runtime.Serialization.EnumMember(Value = @"8100")]
        _8100 = 64,

        [System.Runtime.Serialization.EnumMember(Value = @"8110")]
        _8110 = 65,

        [System.Runtime.Serialization.EnumMember(Value = @"8220")]
        _8220 = 66,

        [System.Runtime.Serialization.EnumMember(Value = @"9100")]
        _9100 = 67,

        [System.Runtime.Serialization.EnumMember(Value = @"9500")]
        _9500 = 68,

        [System.Runtime.Serialization.EnumMember(Value = @"9510")]
        _9510 = 69,

        [System.Runtime.Serialization.EnumMember(Value = @"9520")]
        _9520 = 70,

        [System.Runtime.Serialization.EnumMember(Value = @"9530")]
        _9530 = 71,

        [System.Runtime.Serialization.EnumMember(Value = @"9540")]
        _9540 = 72,

        [System.Runtime.Serialization.EnumMember(Value = @"9600")]
        _9600 = 73,

        [System.Runtime.Serialization.EnumMember(Value = @"PCNR")]
        PCNR = 74,

        [System.Runtime.Serialization.EnumMember(Value = @"PCVV")]
        PCVV = 75,

        [System.Runtime.Serialization.EnumMember(Value = @"PP06")]
        PP06 = 76,

        [System.Runtime.Serialization.EnumMember(Value = @"PPRN")]
        PPRN = 77,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAD")]
        PPAD = 78,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAB")]
        PPAB = 79,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAE")]
        PPAE = 80,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAG")]
        PPAG = 81,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAI")]
        PPAI = 82,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAR")]
        PPAR = 83,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAU")]
        PPAU = 84,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAV")]
        PPAV = 85,

        [System.Runtime.Serialization.EnumMember(Value = @"PPAX")]
        PPAX = 86,

        [System.Runtime.Serialization.EnumMember(Value = @"PPBG")]
        PPBG = 87,

        [System.Runtime.Serialization.EnumMember(Value = @"PPC2")]
        PPC2 = 88,

        [System.Runtime.Serialization.EnumMember(Value = @"PPCE")]
        PPCE = 89,

        [System.Runtime.Serialization.EnumMember(Value = @"PPCO")]
        PPCO = 90,

        [System.Runtime.Serialization.EnumMember(Value = @"PPCR")]
        PPCR = 91,

        [System.Runtime.Serialization.EnumMember(Value = @"PPCT")]
        PPCT = 92,

        [System.Runtime.Serialization.EnumMember(Value = @"PPCU")]
        PPCU = 93,

        [System.Runtime.Serialization.EnumMember(Value = @"PPD3")]
        PPD3 = 94,

        [System.Runtime.Serialization.EnumMember(Value = @"PPDC")]
        PPDC = 95,

        [System.Runtime.Serialization.EnumMember(Value = @"PPDI")]
        PPDI = 96,

        [System.Runtime.Serialization.EnumMember(Value = @"PPDV")]
        PPDV = 97,

        [System.Runtime.Serialization.EnumMember(Value = @"PPDT")]
        PPDT = 98,

        [System.Runtime.Serialization.EnumMember(Value = @"PPEF")]
        PPEF = 99,

        [System.Runtime.Serialization.EnumMember(Value = @"PPEL")]
        PPEL = 100,

        [System.Runtime.Serialization.EnumMember(Value = @"PPER")]
        PPER = 101,

        [System.Runtime.Serialization.EnumMember(Value = @"PPEX")]
        PPEX = 102,

        [System.Runtime.Serialization.EnumMember(Value = @"PPFE")]
        PPFE = 103,

        [System.Runtime.Serialization.EnumMember(Value = @"PPFI")]
        PPFI = 104,

        [System.Runtime.Serialization.EnumMember(Value = @"PPFR")]
        PPFR = 105,

        [System.Runtime.Serialization.EnumMember(Value = @"PPFV")]
        PPFV = 106,

        [System.Runtime.Serialization.EnumMember(Value = @"PPGR")]
        PPGR = 107,

        [System.Runtime.Serialization.EnumMember(Value = @"PPH1")]
        PPH1 = 108,

        [System.Runtime.Serialization.EnumMember(Value = @"PPIF")]
        PPIF = 109,

        [System.Runtime.Serialization.EnumMember(Value = @"PPII")]
        PPII = 110,

        [System.Runtime.Serialization.EnumMember(Value = @"PPIM")]
        PPIM = 111,

        [System.Runtime.Serialization.EnumMember(Value = @"PPIT")]
        PPIT = 112,

        [System.Runtime.Serialization.EnumMember(Value = @"PPLR")]
        PPLR = 113,

        [System.Runtime.Serialization.EnumMember(Value = @"PPLS")]
        PPLS = 114,

        [System.Runtime.Serialization.EnumMember(Value = @"PPMB")]
        PPMB = 115,

        [System.Runtime.Serialization.EnumMember(Value = @"PPMC")]
        PPMC = 116,

        [System.Runtime.Serialization.EnumMember(Value = @"PPMD")]
        PPMD = 117,

        [System.Runtime.Serialization.EnumMember(Value = @"PPNC")]
        PPNC = 118,

        [System.Runtime.Serialization.EnumMember(Value = @"PPNL")]
        PPNL = 119,

        [System.Runtime.Serialization.EnumMember(Value = @"PPNM")]
        PPNM = 120,

        [System.Runtime.Serialization.EnumMember(Value = @"PPNT")]
        PPNT = 121,

        [System.Runtime.Serialization.EnumMember(Value = @"PPPH")]
        PPPH = 122,

        [System.Runtime.Serialization.EnumMember(Value = @"PPPI")]
        PPPI = 123,

        [System.Runtime.Serialization.EnumMember(Value = @"PPPM")]
        PPPM = 124,

        [System.Runtime.Serialization.EnumMember(Value = @"PPQC")]
        PPQC = 125,

        [System.Runtime.Serialization.EnumMember(Value = @"PPRE")]
        PPRE = 126,

        [System.Runtime.Serialization.EnumMember(Value = @"PPRF")]
        PPRF = 127,

        [System.Runtime.Serialization.EnumMember(Value = @"PPRR")]
        PPRR = 128,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS0")]
        PPS0 = 129,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS1")]
        PPS1 = 130,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS2")]
        PPS2 = 131,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS3")]
        PPS3 = 132,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS4")]
        PPS4 = 133,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS5")]
        PPS5 = 134,

        [System.Runtime.Serialization.EnumMember(Value = @"PPS6")]
        PPS6 = 135,

        [System.Runtime.Serialization.EnumMember(Value = @"PPSC")]
        PPSC = 136,

        [System.Runtime.Serialization.EnumMember(Value = @"PPSD")]
        PPSD = 137,

        [System.Runtime.Serialization.EnumMember(Value = @"PPSE")]
        PPSE = 138,

        [System.Runtime.Serialization.EnumMember(Value = @"PPTE")]
        PPTE = 139,

        [System.Runtime.Serialization.EnumMember(Value = @"PPTF")]
        PPTF = 140,

        [System.Runtime.Serialization.EnumMember(Value = @"PPTI")]
        PPTI = 141,

        [System.Runtime.Serialization.EnumMember(Value = @"PPTR")]
        PPTR = 142,

        [System.Runtime.Serialization.EnumMember(Value = @"PPTT")]
        PPTT = 143,

        [System.Runtime.Serialization.EnumMember(Value = @"PPTV")]
        PPTV = 144,

        [System.Runtime.Serialization.EnumMember(Value = @"PPUA")]
        PPUA = 145,

        [System.Runtime.Serialization.EnumMember(Value = @"PPUC")]
        PPUC = 146,

        [System.Runtime.Serialization.EnumMember(Value = @"PPUE")]
        PPUE = 147,

        [System.Runtime.Serialization.EnumMember(Value = @"PPUI")]
        PPUI = 148,

        [System.Runtime.Serialization.EnumMember(Value = @"PPUP")]
        PPUP = 149,

        [System.Runtime.Serialization.EnumMember(Value = @"PPUR")]
        PPUR = 150,

        [System.Runtime.Serialization.EnumMember(Value = @"PPVC")]
        PPVC = 151,

        [System.Runtime.Serialization.EnumMember(Value = @"PPVE")]
        PPVE = 152,

        [System.Runtime.Serialization.EnumMember(Value = @"PPVT")]
        PPVT = 153,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Processor_responsePayment_advice_code
    {

        [System.Runtime.Serialization.EnumMember(Value = @"01")]
        _01 = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"02")]
        _02 = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"03")]
        _03 = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"21")]
        _21 = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details6
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details7
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details8
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Refund_status_detailsReason
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ECHECK")]
        ECHECK = 0,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum Refund_statusStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"CANCELLED")]
        CANCELLED = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"FAILED")]
        FAILED = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"PENDING")]
        PENDING = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETED")]
        COMPLETED = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Seller_payable_breakdown
    {
        /// <summary>
        /// The amount that the payee refunded to the payer.
        /// </summary>

        [JsonPropertyName("gross_amount")]
        public Money Gross_amount { get; set; }

        /// <summary>
        /// The PayPal fee that was refunded to the payer in the currency of the transaction. This fee might not match the PayPal fee that the payee paid when the payment was captured.
        /// </summary>

        [JsonPropertyName("paypal_fee")]
        public Money Paypal_fee { get; set; }

        /// <summary>
        /// The PayPal fee that was refunded to the payer in the receivable currency. Returned only in cases when the receivable currency is different from transaction currency. Example 'CNY'.
        /// </summary>

        [JsonPropertyName("paypal_fee_in_receivable_currency")]
        public Money Paypal_fee_in_receivable_currency { get; set; }

        /// <summary>
        /// The net amount that the payee's account is debited in the transaction currency. The net amount is calculated as &lt;code&gt;gross_amount&lt;/code&gt; minus &lt;code&gt;paypal_fee&lt;/code&gt; minus &lt;code&gt;platform_fees&lt;/code&gt;.
        /// </summary>

        [JsonPropertyName("net_amount")]
        public Money Net_amount { get; set; }

        /// <summary>
        /// The net amount that the payee's account is debited in the receivable currency. Returned only in cases when the receivable currency is different from transaction currency. Example 'CNY'.
        /// </summary>

        [JsonPropertyName("net_amount_in_receivable_currency")]
        public Money Net_amount_in_receivable_currency { get; set; }

        /// <summary>
        /// An array of platform or partner fees, commissions, or brokerage fees for the refund.
        /// </summary>

        [JsonPropertyName("platform_fees")]
        [System.ComponentModel.DataAnnotations.MaxLength(1)]
        public ICollection<Platform_fee> Platform_fees { get; set; }

        /// <summary>
        /// An array of breakdown values for the net amount. Returned when the currency of the refund is different from the currency of the PayPal account where the payee holds their funds.
        /// </summary>

        [JsonPropertyName("net_amount_breakdown")]
        public ICollection<Net_amount_breakdown_item> Net_amount_breakdown { get; set; }

        /// <summary>
        /// The total amount refunded from the original capture to date. For example, if a payer makes a $100 purchase and was refunded $20 a week ago and was refunded $30 in this refund, the `gross_amount` is $30 for this refund and the `total_refunded_amount` is $50.
        /// </summary>

        [JsonPropertyName("total_refunded_amount")]
        public Money Total_refunded_amount { get; set; }

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details9
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class details10
    {

        private IDictionary<string, object> _additionalProperties;

        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625
